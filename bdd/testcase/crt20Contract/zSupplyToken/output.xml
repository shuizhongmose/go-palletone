<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190718 22:24:10.824" generator="Robot 3.1.2 (Python 2.7.15 on win32)">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken" id="s1" name="zSupplyToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenAllow_SenderPTNToken.robot" id="s1-s1" name="supplyTokenAllow SenderPTNToken">
<test id="s1-s1-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 22:24:11.190" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 22:24:11.190" starttime="20190718 22:24:11.189"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 22:24:11.190" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 22:24:11.190" starttime="20190718 22:24:11.190"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 22:24:11.190" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 22:24:11.190" starttime="20190718 22:24:11.190"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 22:24:11.190" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 22:24:11.190" starttime="20190718 22:24:11.190"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 22:24:12.227" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 22:24:12.228" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:12.228" starttime="20190718 22:24:11.190"></status>
</kw>
<msg timestamp="20190718 22:24:12.228" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:12.228" starttime="20190718 22:24:11.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 22:24:12.228" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9EdBZJNfCDiu2LLuiRcixPn","P1FgASmTGSeagv1KY6bNHVGHFzspFPUgrZ8"]}
</msg>
<status status="PASS" endtime="20190718 22:24:12.228" starttime="20190718 22:24:12.228"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:12.254" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9...</msg>
<status status="PASS" endtime="20190718 22:24:12.254" starttime="20190718 22:24:12.228"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:12.254" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9EdBZJNfCDiu2LLuiRcixPn","P1FgASmTGSeagv1KY6bNHVGHFzspFPUgrZ8"]} </msg>
<msg timestamp="20190718 22:24:12.254" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 22:24:12.254" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9', u'P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU', u'P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi...</msg>
<status status="PASS" endtime="20190718 22:24:12.254" starttime="20190718 22:24:12.254"></status>
</kw>
<msg timestamp="20190718 22:24:12.254" level="INFO">${geneAdd} = P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu</msg>
<status status="PASS" endtime="20190718 22:24:12.254" starttime="20190718 22:24:11.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 22:24:12.264" level="INFO">${geneAdd} = P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu</msg>
<status status="PASS" endtime="20190718 22:24:12.265" starttime="20190718 22:24:12.254"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 22:24:12.266" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu']</msg>
<status status="PASS" endtime="20190718 22:24:12.266" starttime="20190718 22:24:12.265"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 22:24:12.266" level="INFO">${ccinvokeList} = [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P115Jt...</msg>
<status status="PASS" endtime="20190718 22:24:12.266" starttime="20190718 22:24:12.266"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 22:24:12.276" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 22:24:12.278" starttime="20190718 22:24:12.276"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 22:24:12.278" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 22:24:12.278" starttime="20190718 22:24:12.278"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 22:24:12.280" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 22:24:12.281" starttime="20190718 22:24:12.278"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 22:24:14.419" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA057", "1", "60000", "P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 22:24:14.419" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:14.419" starttime="20190718 22:24:12.281"></status>
</kw>
<msg timestamp="20190718 22:24:14.419" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:14.419" starttime="20190718 22:24:12.266"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 22:24:14.420" level="INFO">{"jsonrpc":"2.0","id":1,"result":"42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0"}
</msg>
<status status="PASS" endtime="20190718 22:24:14.420" starttime="20190718 22:24:14.420"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:14.421" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0"}</msg>
<status status="PASS" endtime="20190718 22:24:14.421" starttime="20190718 22:24:14.420"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:14.421" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0"} </msg>
<msg timestamp="20190718 22:24:14.422" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 22:24:14.422" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0'}</msg>
<status status="PASS" endtime="20190718 22:24:14.422" starttime="20190718 22:24:14.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 22:24:14.422" starttime="20190718 22:24:14.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 22:24:14.423" starttime="20190718 22:24:14.422"></status>
</kw>
<msg timestamp="20190718 22:24:14.423" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0'}</msg>
<status status="PASS" endtime="20190718 22:24:14.423" starttime="20190718 22:24:14.419"></status>
</kw>
<msg timestamp="20190718 22:24:14.423" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0'}</msg>
<status status="PASS" endtime="20190718 22:24:14.423" starttime="20190718 22:24:12.266"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 22:24:14.424" level="INFO">${ret} = 42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0</msg>
<status status="PASS" endtime="20190718 22:24:14.424" starttime="20190718 22:24:14.424"></status>
</kw>
<msg timestamp="20190718 22:24:14.424" level="INFO">${ret} = 42c3e553e4b48d76a68f4844fd9a95e1acfb6d8156602e24fe5f2c725fd8c6f0</msg>
<status status="PASS" endtime="20190718 22:24:14.424" starttime="20190718 22:24:12.266"></status>
</kw>
<status status="PASS" endtime="20190718 22:24:14.424" starttime="20190718 22:24:11.189"></status>
</kw>
<kw name="And Request getbalance before create token">
<assign>
<var>${PTN1}</var>
<var>${key}</var>
<var>${coinToken1}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 22:24:18.425" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 22:24:18.425" starttime="20190718 22:24:14.425"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 22:24:19.470" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999991998', u'QA057+1010NCIB47M0RS5NN73N': u'6000'}</msg>
<msg timestamp="20190718 22:24:19.471" level="INFO">${result1} = {u'PTN': u'999991998', u'QA057+1010NCIB47M0RS5NN73N': u'6000'}</msg>
<status status="PASS" endtime="20190718 22:24:19.471" starttime="20190718 22:24:18.427"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 22:24:19.473" level="INFO">${key} = QA057+1010NCIB47M0RS5NN73N</msg>
<status status="PASS" endtime="20190718 22:24:19.473" starttime="20190718 22:24:19.471"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 22:24:19.474" level="INFO">${PTN1} = 999991998</msg>
<status status="PASS" endtime="20190718 22:24:19.475" starttime="20190718 22:24:19.473"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken1}</var>
</assign>
<msg timestamp="20190718 22:24:19.476" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 22:24:19.477" starttime="20190718 22:24:19.475"></status>
</kw>
<msg timestamp="20190718 22:24:19.477" level="INFO">${PTN1} = 999991998</msg>
<msg timestamp="20190718 22:24:19.478" level="INFO">${key} = QA057+1010NCIB47M0RS5NN73N</msg>
<msg timestamp="20190718 22:24:19.478" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 22:24:19.478" starttime="20190718 22:24:14.425"></status>
</kw>
<kw name="When Create token of vote contract">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${supplyTokenMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${supplyTokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 22:24:19.483" level="INFO">${ccList} = [u'supplyToken', u'QA057', u'1500000000', u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu']</msg>
<status status="PASS" endtime="20190718 22:24:19.483" starttime="20190718 22:24:19.482"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 22:24:19.492" level="INFO">${ccinvokeList} = [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'supplyToken', u'QA057', u'1500000000', u'P115JtsJ4Bwy2Ku97F27...</msg>
<status status="PASS" endtime="20190718 22:24:19.492" starttime="20190718 22:24:19.489"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 22:24:19.496" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 22:24:19.496" starttime="20190718 22:24:19.494"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 22:24:19.499" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 22:24:19.499" starttime="20190718 22:24:19.497"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 22:24:19.500" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 22:24:19.501" starttime="20190718 22:24:19.500"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 22:24:22.123" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["supplyToken", "QA057", "1500000000", "P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 22:24:22.123" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:22.123" starttime="20190718 22:24:19.501"></status>
</kw>
<msg timestamp="20190718 22:24:22.123" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:22.123" starttime="20190718 22:24:19.492"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 22:24:22.124" level="INFO">{"jsonrpc":"2.0","id":1,"result":"fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417"}
</msg>
<status status="PASS" endtime="20190718 22:24:22.124" starttime="20190718 22:24:22.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:22.125" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417"}</msg>
<status status="PASS" endtime="20190718 22:24:22.125" starttime="20190718 22:24:22.124"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:22.126" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417"} </msg>
<msg timestamp="20190718 22:24:22.126" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 22:24:22.126" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417'}</msg>
<status status="PASS" endtime="20190718 22:24:22.126" starttime="20190718 22:24:22.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 22:24:22.126" starttime="20190718 22:24:22.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 22:24:22.127" starttime="20190718 22:24:22.126"></status>
</kw>
<msg timestamp="20190718 22:24:22.127" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417'}</msg>
<status status="PASS" endtime="20190718 22:24:22.127" starttime="20190718 22:24:22.123"></status>
</kw>
<msg timestamp="20190718 22:24:22.127" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417'}</msg>
<status status="PASS" endtime="20190718 22:24:22.127" starttime="20190718 22:24:19.486"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 22:24:22.128" level="INFO">${ret} = fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417</msg>
<status status="PASS" endtime="20190718 22:24:22.129" starttime="20190718 22:24:22.127"></status>
</kw>
<msg timestamp="20190718 22:24:22.129" level="INFO">${ret} = fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417</msg>
<status status="PASS" endtime="20190718 22:24:22.129" starttime="20190718 22:24:19.484"></status>
</kw>
<msg timestamp="20190718 22:24:22.129" level="INFO">${ret} = fda2609d268c5a05031ab0ef661c25432cf960e0f4eca787624e1b4bcce54417</msg>
<status status="PASS" endtime="20190718 22:24:22.129" starttime="20190718 22:24:19.480"></status>
</kw>
<kw name="And Calculate gain of recieverAdd">
<assign>
<var>${GAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${PTNAmount})+int(${PTNPoundage})</arg>
</arguments>
<assign>
<var>${invokeGain}</var>
</assign>
<msg timestamp="20190718 22:24:22.130" level="INFO">${invokeGain} = 4001</msg>
<status status="PASS" endtime="20190718 22:24:22.130" starttime="20190718 22:24:22.130"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${invokeGain}</arg>
</arguments>
<assign>
<var>${GAIN}</var>
</assign>
<msg timestamp="20190718 22:24:22.131" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 22:24:22.131" starttime="20190718 22:24:22.130"></status>
</kw>
<msg timestamp="20190718 22:24:22.131" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 22:24:22.131" starttime="20190718 22:24:22.129"></status>
</kw>
<kw name="And Request getbalance after create token">
<arguments>
<arg>${geneAdd}</arg>
<arg>${key}</arg>
<arg>${GAIN}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${tokenGAIN}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 22:24:26.140" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 22:24:26.140" starttime="20190718 22:24:22.132"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 22:24:27.172" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999987997', u'QA057+1010NCIB47M0RS5NN73N': u'150006000'}</msg>
<msg timestamp="20190718 22:24:27.172" level="INFO">${result2} = {u'PTN': u'999987997', u'QA057+1010NCIB47M0RS5NN73N': u'150006000'}</msg>
<status status="PASS" endtime="20190718 22:24:27.172" starttime="20190718 22:24:26.140"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken2}</var>
</assign>
<msg timestamp="20190718 22:24:27.174" level="INFO">${coinToken2} = 150006000</msg>
<status status="PASS" endtime="20190718 22:24:27.174" starttime="20190718 22:24:27.173"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 22:24:27.175" level="INFO">${PTN2} = 999987997</msg>
<status status="PASS" endtime="20190718 22:24:27.175" starttime="20190718 22:24:27.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${coinToken2})-int(${coinToken1})</arg>
</arguments>
<assign>
<var>${tokenGAIN}</var>
</assign>
<msg timestamp="20190718 22:24:27.175" level="INFO">${tokenGAIN} = 150001999</msg>
<status status="PASS" endtime="20190718 22:24:27.175" starttime="20190718 22:24:27.175"></status>
</kw>
<msg timestamp="20190718 22:24:27.175" level="INFO">${PTN2} = 999987997</msg>
<msg timestamp="20190718 22:24:27.175" level="INFO">${tokenGAIN} = 150001999</msg>
<status status="PASS" endtime="20190718 22:24:27.175" starttime="20190718 22:24:22.132"></status>
</kw>
<kw name="Then Assert gain of reciever">
<arguments>
<arg>${PTN1}</arg>
<arg>${PTN2}</arg>
<arg>${tokenGAIN}</arg>
<arg>${GAIN}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${GAIN}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 22:24:27.184" level="INFO">${PTNGAIN} = 999987997</msg>
<status status="PASS" endtime="20190718 22:24:27.184" starttime="20190718 22:24:27.182"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${supplyTokenAmount}*(10**-${tokenDecimal})</arg>
</arguments>
<assign>
<var>${supplyTokenAmount}</var>
</assign>
<msg timestamp="20190718 22:24:27.186" level="INFO">${supplyTokenAmount} = 150000000.0</msg>
<status status="PASS" endtime="20190718 22:24:27.186" starttime="20190718 22:24:27.184"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<msg timestamp="20190718 22:24:27.188" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 22:24:27.189" starttime="20190718 22:24:27.186"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${supplyTokenAmount}</arg>
<arg>${tokenGAIN}</arg>
</arguments>
<msg timestamp="20190718 22:24:27.190" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'int'&gt;</msg>
<msg timestamp="20190718 22:24:27.190" level="FAIL">150000000.0 != 150001999.0</msg>
<status status="FAIL" endtime="20190718 22:24:27.190" starttime="20190718 22:24:27.189"></status>
</kw>
<status status="FAIL" endtime="20190718 22:24:27.190" starttime="20190718 22:24:27.181"></status>
</kw>
<doc>Verify Sender's PTN and Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 22:24:27.193" critical="yes" starttime="20190718 22:24:11.188">150000000.0 != 150001999.0</status>
</test>
<status status="FAIL" endtime="20190718 22:24:27.203" starttime="20190718 22:24:10.877"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenForbid_SenderPTNToken.robot" id="s1-s2" name="supplyTokenForbid SenderPTNToken">
<test id="s1-s2-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 22:24:27.251" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 22:24:27.251" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 22:24:27.251" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 22:24:27.251" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 22:24:27.251" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 22:24:27.251" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 22:24:27.251" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 22:24:27.251" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 22:24:28.301" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 22:24:28.301" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:28.301" starttime="20190718 22:24:27.261"></status>
</kw>
<msg timestamp="20190718 22:24:28.302" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:28.302" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 22:24:28.302" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9EdBZJNfCDiu2LLuiRcixPn","P1FgASmTGSeagv1KY6bNHVGHFzspFPUgrZ8"]}
</msg>
<status status="PASS" endtime="20190718 22:24:28.302" starttime="20190718 22:24:28.302"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:28.302" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9...</msg>
<status status="PASS" endtime="20190718 22:24:28.302" starttime="20190718 22:24:28.302"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:28.302" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu","P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9","P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU","P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi","P15Adydr7yUk9EdBZJNfCDiu2LLuiRcixPn","P1FgASmTGSeagv1KY6bNHVGHFzspFPUgrZ8"]} </msg>
<msg timestamp="20190718 22:24:28.302" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 22:24:28.302" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1A7iYAf8BrhhFgaKcNwVbL2cjbDpWykca9', u'P1QAmPngLBKAvTzByrto6jXMu3u8ndh1quU', u'P1HdNZHXRYvxg2VMjmNKXMDJVtBrMK4TPKi...</msg>
<status status="PASS" endtime="20190718 22:24:28.302" starttime="20190718 22:24:28.302"></status>
</kw>
<msg timestamp="20190718 22:24:28.302" level="INFO">${geneAdd} = P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu</msg>
<status status="PASS" endtime="20190718 22:24:28.302" starttime="20190718 22:24:27.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 22:24:28.313" level="INFO">${geneAdd} = P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu</msg>
<status status="PASS" endtime="20190718 22:24:28.313" starttime="20190718 22:24:28.302"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 22:24:28.315" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA058', u'1', u'60000']</msg>
<status status="PASS" endtime="20190718 22:24:28.315" starttime="20190718 22:24:28.314"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 22:24:28.315" level="INFO">${ccinvokeList} = [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA058', u'1', u'60000'], u'1', 6...</msg>
<status status="PASS" endtime="20190718 22:24:28.315" starttime="20190718 22:24:28.315"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 22:24:28.326" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 22:24:28.326" starttime="20190718 22:24:28.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 22:24:28.328" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 22:24:28.328" starttime="20190718 22:24:28.326"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 22:24:28.328" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 22:24:28.329" starttime="20190718 22:24:28.328"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 22:24:30.603" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P115JtsJ4Bwy2Ku97F27BEm4PN5w8DFv6Fu", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA058", "1", "60000"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 22:24:30.603" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:30.603" starttime="20190718 22:24:28.329"></status>
</kw>
<msg timestamp="20190718 22:24:30.604" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 22:24:30.604" starttime="20190718 22:24:28.315"></status>
</kw>
<kw name="resultToJson">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 22:24:30.604" level="FAIL">Keyword 'resultToJson' expected 0 arguments, got 1.</msg>
<status status="FAIL" endtime="20190718 22:24:30.604" starttime="20190718 22:24:30.604"></status>
</kw>
<status status="FAIL" endtime="20190718 22:24:30.604" starttime="20190718 22:24:28.315"></status>
</kw>
<status status="FAIL" endtime="20190718 22:24:30.604" starttime="20190718 22:24:28.315"></status>
</kw>
<status status="FAIL" endtime="20190718 22:24:30.604" starttime="20190718 22:24:27.250"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 22:24:30.605" critical="yes" starttime="20190718 22:24:27.249">Keyword 'resultToJson' expected 0 arguments, got 1.</status>
</test>
<status status="FAIL" endtime="20190718 22:24:30.608" starttime="20190718 22:24:27.214"></status>
</suite>
<status status="FAIL" endtime="20190718 22:24:30.611" starttime="20190718 22:24:10.827"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="0">Critical Tests</stat>
<stat fail="2" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="2" pass="0">normal</stat>
</tag>
<suite>
<stat fail="2" id="s1" name="zSupplyToken" pass="0">zSupplyToken</stat>
<stat fail="1" id="s1-s1" name="supplyTokenAllow SenderPTNToken" pass="0">zSupplyToken.supplyTokenAllow SenderPTNToken</stat>
<stat fail="1" id="s1-s2" name="supplyTokenForbid SenderPTNToken" pass="0">zSupplyToken.supplyTokenForbid SenderPTNToken</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
