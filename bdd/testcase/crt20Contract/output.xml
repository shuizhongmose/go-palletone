<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190718 16:29:28.706" generator="Robot 3.1.2 (Python 2.7.15 on win32)">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract" id="s1" name="crt20Contract">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass" id="s1-s1" name="ccinvokePass">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_RecieverPTN.robot" id="s1-s1-s1" name="ccinvoketxPass RecieverPTN">
<kw type="setup" name="getlistAccounts" library="utilDefined">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:29:28.992" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:29:28.992" starttime="20190718 16:29:28.992"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:28.993" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:28.993" starttime="20190718 16:29:28.992"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:28.994" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:28.994" starttime="20190718 16:29:28.993"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:28.994" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:28.994" starttime="20190718 16:29:28.994"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:31.019" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:31.019" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:31.019" starttime="20190718 16:29:28.994"></status>
</kw>
<msg timestamp="20190718 16:29:31.021" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:31.021" starttime="20190718 16:29:28.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:31.024" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:29:31.025" starttime="20190718 16:29:31.022"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:31.049" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:29:31.049" starttime="20190718 16:29:31.026"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:31.051" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:29:31.051" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:31.051" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:29:31.051" starttime="20190718 16:29:31.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${listAccounts}</arg>
<arg>${jsonRes['result']}</arg>
</arguments>
<msg timestamp="20190718 16:29:31.056" level="INFO">${listAccounts} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g', u'P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG',...</msg>
<status status="PASS" endtime="20190718 16:29:31.057" starttime="20190718 16:29:31.052"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:31.057" starttime="20190718 16:29:28.991"></status>
</kw>
<test id="s1-s1-s1-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:31.062" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 16:29:31.062" starttime="20190718 16:29:31.061"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:31.063" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:31.063" starttime="20190718 16:29:31.062"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:31.064" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:31.064" starttime="20190718 16:29:31.064"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:31.065" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:31.065" starttime="20190718 16:29:31.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:32.074" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:32.075" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:32.075" starttime="20190718 16:29:31.065"></status>
</kw>
<msg timestamp="20190718 16:29:32.075" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:32.075" starttime="20190718 16:29:31.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:32.076" level="INFO">{"jsonrpc":"2.0","id":1,"result":{}}
</msg>
<status status="PASS" endtime="20190718 16:29:32.076" starttime="20190718 16:29:32.076"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:32.078" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{}}</msg>
<status status="PASS" endtime="20190718 16:29:32.078" starttime="20190718 16:29:32.077"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:32.079" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{}} </msg>
<msg timestamp="20190718 16:29:32.079" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:32.080" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {}}</msg>
<status status="PASS" endtime="20190718 16:29:32.080" starttime="20190718 16:29:32.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:32.081" starttime="20190718 16:29:32.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:32.082" starttime="20190718 16:29:32.081"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:32.083" level="INFO">${strResult} = {}</msg>
<status status="PASS" endtime="20190718 16:29:32.083" starttime="20190718 16:29:32.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:32.085" starttime="20190718 16:29:32.085"></status>
</kw>
<msg timestamp="20190718 16:29:32.085" level="INFO">${PTN} = 0</msg>
<status status="PASS" endtime="20190718 16:29:32.085" starttime="20190718 16:29:32.084"></status>
</kw>
<msg timestamp="20190718 16:29:32.086" level="INFO">${PTN} = 0</msg>
<msg timestamp="20190718 16:29:32.086" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {}}</msg>
<status status="PASS" endtime="20190718 16:29:32.086" starttime="20190718 16:29:31.061"></status>
</kw>
<msg timestamp="20190718 16:29:32.087" level="INFO">${PTN1} = 0</msg>
<msg timestamp="20190718 16:29:32.087" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {}}</msg>
<status status="PASS" endtime="20190718 16:29:32.087" starttime="20190718 16:29:31.060"></status>
</kw>
<msg timestamp="20190718 16:29:32.087" level="INFO">${PTN1} = 0</msg>
<status status="PASS" endtime="20190718 16:29:32.087" starttime="20190718 16:29:31.059"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${listAccounts[0]}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:29:32.091" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA151', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:32.091" starttime="20190718 16:29:32.090"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${listAccounts[0]}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:29:32.096" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA151', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:29:32.097" starttime="20190718 16:29:32.094"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:32.099" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:32.099" starttime="20190718 16:29:32.098"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:32.101" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:29:32.101" starttime="20190718 16:29:32.099"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:32.101" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:32.102" starttime="20190718 16:29:32.101"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:33.952" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA151", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:33.952" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:33.952" starttime="20190718 16:29:32.102"></status>
</kw>
<msg timestamp="20190718 16:29:33.952" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:33.952" starttime="20190718 16:29:32.097"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:33.953" level="INFO">{"jsonrpc":"2.0","id":1,"result":"2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4"}
</msg>
<status status="PASS" endtime="20190718 16:29:33.953" starttime="20190718 16:29:33.953"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:33.954" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4"}</msg>
<status status="PASS" endtime="20190718 16:29:33.954" starttime="20190718 16:29:33.953"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:33.954" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4"} </msg>
<msg timestamp="20190718 16:29:33.954" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:33.954" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4'}</msg>
<status status="PASS" endtime="20190718 16:29:33.954" starttime="20190718 16:29:33.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:33.955" starttime="20190718 16:29:33.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:33.955" starttime="20190718 16:29:33.955"></status>
</kw>
<msg timestamp="20190718 16:29:33.955" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4'}</msg>
<status status="PASS" endtime="20190718 16:29:33.955" starttime="20190718 16:29:33.952"></status>
</kw>
<msg timestamp="20190718 16:29:33.956" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4'}</msg>
<status status="PASS" endtime="20190718 16:29:33.956" starttime="20190718 16:29:32.093"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:29:33.956" level="INFO">${ret} = 2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4</msg>
<status status="PASS" endtime="20190718 16:29:33.956" starttime="20190718 16:29:33.956"></status>
</kw>
<msg timestamp="20190718 16:29:33.956" level="INFO">${ret} = 2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4</msg>
<status status="PASS" endtime="20190718 16:29:33.956" starttime="20190718 16:29:32.091"></status>
</kw>
<msg timestamp="20190718 16:29:33.957" level="INFO">${ret} = 2c4e1d71a7c37b8075ec0a316a332889543b60755cc7fc5f7e035c13055f54c4</msg>
<status status="PASS" endtime="20190718 16:29:33.957" starttime="20190718 16:29:32.089"></status>
</kw>
<kw name="And Calculate gain">
<arguments>
<arg>${PTN1}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNAmount}</arg>
</arguments>
<assign>
<var>${gain1}</var>
</assign>
<msg timestamp="20190718 16:29:33.958" level="INFO">${gain1} = 4000</msg>
<status status="PASS" endtime="20190718 16:29:33.958" starttime="20190718 16:29:33.958"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')+decimal.Decimal('${gain1}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:29:33.959" level="INFO">${PTNGAIN} = 4000</msg>
<status status="PASS" endtime="20190718 16:29:33.959" starttime="20190718 16:29:33.958"></status>
</kw>
<msg timestamp="20190718 16:29:33.959" level="INFO">${PTNGAIN} = 4000</msg>
<status status="PASS" endtime="20190718 16:29:33.959" starttime="20190718 16:29:33.957"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${PTN2}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:29:37.961" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:29:37.961" starttime="20190718 16:29:33.960"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:37.968" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 16:29:37.968" starttime="20190718 16:29:37.967"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:37.972" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:37.972" starttime="20190718 16:29:37.970"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:37.975" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:37.975" starttime="20190718 16:29:37.973"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:37.976" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:37.978" starttime="20190718 16:29:37.975"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:38.996" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:38.996" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:38.996" starttime="20190718 16:29:37.978"></status>
</kw>
<msg timestamp="20190718 16:29:38.996" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:38.996" starttime="20190718 16:29:37.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:38.997" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"4000"}}
</msg>
<status status="PASS" endtime="20190718 16:29:38.997" starttime="20190718 16:29:38.996"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:38.998" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"4000"}}</msg>
<status status="PASS" endtime="20190718 16:29:38.998" starttime="20190718 16:29:38.997"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:38.998" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"4000"}} </msg>
<msg timestamp="20190718 16:29:38.998" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:38.998" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'4000'}}</msg>
<status status="PASS" endtime="20190718 16:29:38.998" starttime="20190718 16:29:38.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:38.999" starttime="20190718 16:29:38.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:38.999" starttime="20190718 16:29:38.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:39.000" level="INFO">${strResult} = {u'PTN': u'4000'}</msg>
<status status="PASS" endtime="20190718 16:29:39.000" starttime="20190718 16:29:38.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:39.001" starttime="20190718 16:29:39.000"></status>
</kw>
<msg timestamp="20190718 16:29:39.001" level="INFO">${PTN} = 4000</msg>
<status status="PASS" endtime="20190718 16:29:39.001" starttime="20190718 16:29:39.000"></status>
</kw>
<msg timestamp="20190718 16:29:39.001" level="INFO">${PTN} = 4000</msg>
<msg timestamp="20190718 16:29:39.001" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'4000'}}</msg>
<status status="PASS" endtime="20190718 16:29:39.001" starttime="20190718 16:29:37.964"></status>
</kw>
<msg timestamp="20190718 16:29:39.002" level="INFO">${PTN2} = 4000</msg>
<msg timestamp="20190718 16:29:39.002" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'4000'}}</msg>
<status status="PASS" endtime="20190718 16:29:39.002" starttime="20190718 16:29:37.962"></status>
</kw>
<msg timestamp="20190718 16:29:39.002" level="INFO">${PTN2} = 4000</msg>
<status status="PASS" endtime="20190718 16:29:39.002" starttime="20190718 16:29:33.960"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<msg timestamp="20190718 16:29:39.003" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 16:29:39.003" starttime="20190718 16:29:39.003"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:39.003" starttime="20190718 16:29:39.003"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:29:39.004" critical="yes" starttime="20190718 16:29:31.057"></status>
</test>
<status status="PASS" endtime="20190718 16:29:39.005" starttime="20190718 16:29:28.735"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_SenderPTN.robot" id="s1-s1-s2" name="ccinvoketxPass SenderPTN">
<test id="s1-s1-s2-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:29:39.018" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:29:39.018" starttime="20190718 16:29:39.017"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:39.018" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:39.019" starttime="20190718 16:29:39.018"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:39.020" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:39.020" starttime="20190718 16:29:39.019"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:39.020" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:39.020" starttime="20190718 16:29:39.020"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:40.033" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:40.033" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:40.034" starttime="20190718 16:29:39.020"></status>
</kw>
<msg timestamp="20190718 16:29:40.034" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:40.034" starttime="20190718 16:29:39.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:40.036" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:29:40.037" starttime="20190718 16:29:40.035"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:40.041" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:29:40.042" starttime="20190718 16:29:40.037"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:40.043" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:29:40.043" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:40.044" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:29:40.044" starttime="20190718 16:29:40.042"></status>
</kw>
<msg timestamp="20190718 16:29:40.045" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:29:40.046" starttime="20190718 16:29:39.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:29:40.048" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:29:40.049" starttime="20190718 16:29:40.047"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:29:41.070" level="INFO">[u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g', u'P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG', u'P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax']</msg>
<status status="PASS" endtime="20190718 16:29:41.071" starttime="20190718 16:29:40.049"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:41.076" level="INFO">${address} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:41.076" starttime="20190718 16:29:41.075"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:41.080" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:41.080" starttime="20190718 16:29:41.078"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:41.082" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:41.082" starttime="20190718 16:29:41.081"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:41.083" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:41.084" starttime="20190718 16:29:41.082"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:42.097" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:42.097" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:42.097" starttime="20190718 16:29:41.084"></status>
</kw>
<msg timestamp="20190718 16:29:42.098" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:42.098" starttime="20190718 16:29:41.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:42.099" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"999995999","QA151+106QA1WR9RVBKHRBB4A":"6000"}}
</msg>
<status status="PASS" endtime="20190718 16:29:42.099" starttime="20190718 16:29:42.098"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:42.102" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"999995999","QA151+106QA1WR9RVBKHRBB4A":"6000"}}</msg>
<status status="PASS" endtime="20190718 16:29:42.102" starttime="20190718 16:29:42.099"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:42.102" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"999995999","QA151+106QA1WR9RVBKHRBB4A":"6000"}} </msg>
<msg timestamp="20190718 16:29:42.103" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:42.103" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999995999', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:42.103" starttime="20190718 16:29:42.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:42.104" starttime="20190718 16:29:42.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:42.105" starttime="20190718 16:29:42.104"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:42.107" level="INFO">${strResult} = {u'PTN': u'999995999', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}</msg>
<status status="PASS" endtime="20190718 16:29:42.107" starttime="20190718 16:29:42.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:42.109" starttime="20190718 16:29:42.108"></status>
</kw>
<msg timestamp="20190718 16:29:42.109" level="INFO">${PTN} = 999995999</msg>
<status status="PASS" endtime="20190718 16:29:42.109" starttime="20190718 16:29:42.107"></status>
</kw>
<msg timestamp="20190718 16:29:42.110" level="INFO">${PTN} = 999995999</msg>
<msg timestamp="20190718 16:29:42.110" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999995999', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:42.110" starttime="20190718 16:29:41.073"></status>
</kw>
<msg timestamp="20190718 16:29:42.110" level="INFO">${PTN1} = 999995999</msg>
<msg timestamp="20190718 16:29:42.111" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999995999', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:42.111" starttime="20190718 16:29:41.072"></status>
</kw>
<msg timestamp="20190718 16:29:42.112" level="INFO">${PTN1} = 999995999</msg>
<status status="PASS" endtime="20190718 16:29:42.112" starttime="20190718 16:29:39.017"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:29:42.115" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA052', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:42.115" starttime="20190718 16:29:42.114"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:29:42.120" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA052', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:29:42.120" starttime="20190718 16:29:42.118"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:42.122" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:42.122" starttime="20190718 16:29:42.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:42.124" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:29:42.125" starttime="20190718 16:29:42.123"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:42.125" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:42.127" starttime="20190718 16:29:42.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:43.857" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA052", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:43.857" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:43.857" starttime="20190718 16:29:42.128"></status>
</kw>
<msg timestamp="20190718 16:29:43.857" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:43.857" starttime="20190718 16:29:42.120"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:43.858" level="INFO">{"jsonrpc":"2.0","id":1,"result":"8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9"}
</msg>
<status status="PASS" endtime="20190718 16:29:43.858" starttime="20190718 16:29:43.858"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:43.859" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9"}</msg>
<status status="PASS" endtime="20190718 16:29:43.860" starttime="20190718 16:29:43.858"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:43.860" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9"} </msg>
<msg timestamp="20190718 16:29:43.860" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:43.860" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9'}</msg>
<status status="PASS" endtime="20190718 16:29:43.860" starttime="20190718 16:29:43.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:43.860" starttime="20190718 16:29:43.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:43.861" starttime="20190718 16:29:43.861"></status>
</kw>
<msg timestamp="20190718 16:29:43.861" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9'}</msg>
<status status="PASS" endtime="20190718 16:29:43.861" starttime="20190718 16:29:43.858"></status>
</kw>
<msg timestamp="20190718 16:29:43.861" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9'}</msg>
<status status="PASS" endtime="20190718 16:29:43.861" starttime="20190718 16:29:42.117"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:29:43.862" level="INFO">${ret} = 8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9</msg>
<status status="PASS" endtime="20190718 16:29:43.862" starttime="20190718 16:29:43.861"></status>
</kw>
<msg timestamp="20190718 16:29:43.862" level="INFO">${ret} = 8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9</msg>
<status status="PASS" endtime="20190718 16:29:43.862" starttime="20190718 16:29:42.115"></status>
</kw>
<msg timestamp="20190718 16:29:43.862" level="INFO">${ret} = 8d833d9e670968d948618b5bcdb2be304987ce29c46b9830d2c8ef62831d91f9</msg>
<status status="PASS" endtime="20190718 16:29:43.862" starttime="20190718 16:29:42.113"></status>
</kw>
<kw name="And Calculate gain">
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PTNAmount}+${PTNPoundage}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:29:43.864" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:43.864" starttime="20190718 16:29:43.863"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNGAIN}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:29:43.864" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:43.864" starttime="20190718 16:29:43.864"></status>
</kw>
<msg timestamp="20190718 16:29:43.864" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:43.864" starttime="20190718 16:29:43.863"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${PTN2}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:29:47.865" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:29:47.866" starttime="20190718 16:29:43.865"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:47.873" level="INFO">${address} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:47.873" starttime="20190718 16:29:47.872"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:47.877" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:47.877" starttime="20190718 16:29:47.875"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:47.879" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:47.880" starttime="20190718 16:29:47.877"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:47.881" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:47.886" starttime="20190718 16:29:47.880"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:48.904" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:48.904" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:48.904" starttime="20190718 16:29:47.886"></status>
</kw>
<msg timestamp="20190718 16:29:48.905" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:48.906" starttime="20190718 16:29:47.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:48.908" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}
</msg>
<status status="PASS" endtime="20190718 16:29:48.908" starttime="20190718 16:29:48.906"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:48.912" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}</msg>
<status status="PASS" endtime="20190718 16:29:48.912" starttime="20190718 16:29:48.908"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:48.914" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}} </msg>
<msg timestamp="20190718 16:29:48.914" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:48.914" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:48.914" starttime="20190718 16:29:48.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:48.917" starttime="20190718 16:29:48.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:48.919" starttime="20190718 16:29:48.917"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:48.922" level="INFO">${strResult} = {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}</msg>
<status status="PASS" endtime="20190718 16:29:48.922" starttime="20190718 16:29:48.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:48.926" starttime="20190718 16:29:48.925"></status>
</kw>
<msg timestamp="20190718 16:29:48.927" level="INFO">${PTN} = 999991998</msg>
<status status="PASS" endtime="20190718 16:29:48.927" starttime="20190718 16:29:48.923"></status>
</kw>
<msg timestamp="20190718 16:29:48.927" level="INFO">${PTN} = 999991998</msg>
<msg timestamp="20190718 16:29:48.928" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:48.928" starttime="20190718 16:29:47.869"></status>
</kw>
<msg timestamp="20190718 16:29:48.929" level="INFO">${PTN2} = 999991998</msg>
<msg timestamp="20190718 16:29:48.929" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:48.929" starttime="20190718 16:29:47.866"></status>
</kw>
<msg timestamp="20190718 16:29:48.930" level="INFO">${PTN2} = 999991998</msg>
<status status="PASS" endtime="20190718 16:29:48.930" starttime="20190718 16:29:43.865"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${PTN1}</arg>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNGAIN}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${GAIN}</var>
</assign>
<msg timestamp="20190718 16:29:48.937" level="INFO">${GAIN} = 999991998</msg>
<status status="PASS" endtime="20190718 16:29:48.937" starttime="20190718 16:29:48.935"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${GAIN}</arg>
</arguments>
<msg timestamp="20190718 16:29:48.939" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 16:29:48.939" starttime="20190718 16:29:48.937"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:48.940" starttime="20190718 16:29:48.933"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:29:48.941" critical="yes" starttime="20190718 16:29:39.016"></status>
</test>
<status status="PASS" endtime="20190718 16:29:48.945" starttime="20190718 16:29:39.007"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_SenderTokenId.robot" id="s1-s1-s3" name="ccinvoketxPass SenderTokenId">
<test id="s1-s1-s3-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:29:48.977" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:29:48.977" starttime="20190718 16:29:48.976"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:48.978" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:48.978" starttime="20190718 16:29:48.977"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:48.979" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:48.979" starttime="20190718 16:29:48.978"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:48.979" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:48.980" starttime="20190718 16:29:48.979"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:49.990" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:49.990" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:49.990" starttime="20190718 16:29:48.980"></status>
</kw>
<msg timestamp="20190718 16:29:49.991" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:49.991" starttime="20190718 16:29:48.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:49.994" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:29:49.994" starttime="20190718 16:29:49.992"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:49.999" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:29:49.999" starttime="20190718 16:29:49.994"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:50.000" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:29:50.001" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:50.001" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:29:50.001" starttime="20190718 16:29:49.999"></status>
</kw>
<msg timestamp="20190718 16:29:50.002" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:29:50.003" starttime="20190718 16:29:48.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:29:50.005" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:29:50.005" starttime="20190718 16:29:50.003"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:29:51.028" level="INFO">[u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g', u'P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG', u'P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax']</msg>
<status status="PASS" endtime="20190718 16:29:51.028" starttime="20190718 16:29:50.006"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:51.036" level="INFO">${address} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:51.036" starttime="20190718 16:29:51.034"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:51.041" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:51.041" starttime="20190718 16:29:51.039"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:51.042" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:51.042" starttime="20190718 16:29:51.041"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:51.043" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:51.043" starttime="20190718 16:29:51.043"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:52.059" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:52.059" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:52.060" starttime="20190718 16:29:51.044"></status>
</kw>
<msg timestamp="20190718 16:29:52.060" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:52.062" starttime="20190718 16:29:51.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:52.063" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}
</msg>
<status status="PASS" endtime="20190718 16:29:52.063" starttime="20190718 16:29:52.062"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:52.067" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}</msg>
<status status="PASS" endtime="20190718 16:29:52.068" starttime="20190718 16:29:52.063"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:52.069" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"999991998","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}} </msg>
<msg timestamp="20190718 16:29:52.070" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:52.071" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:52.071" starttime="20190718 16:29:52.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:52.073" starttime="20190718 16:29:52.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:52.075" starttime="20190718 16:29:52.074"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:52.077" level="INFO">${strResult} = {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}</msg>
<status status="PASS" endtime="20190718 16:29:52.077" starttime="20190718 16:29:52.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:52.081" starttime="20190718 16:29:52.079"></status>
</kw>
<msg timestamp="20190718 16:29:52.081" level="INFO">${PTN} = 999991998</msg>
<status status="PASS" endtime="20190718 16:29:52.081" starttime="20190718 16:29:52.078"></status>
</kw>
<msg timestamp="20190718 16:29:52.082" level="INFO">${PTN} = 999991998</msg>
<msg timestamp="20190718 16:29:52.082" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:52.082" starttime="20190718 16:29:51.032"></status>
</kw>
<msg timestamp="20190718 16:29:52.083" level="INFO">${PTN1} = 999991998</msg>
<msg timestamp="20190718 16:29:52.083" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'999991998', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:52.084" starttime="20190718 16:29:51.029"></status>
</kw>
<msg timestamp="20190718 16:29:52.084" level="INFO">${PTN1} = 999991998</msg>
<status status="PASS" endtime="20190718 16:29:52.084" starttime="20190718 16:29:48.975"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:29:52.091" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA053', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:52.091" starttime="20190718 16:29:52.090"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:29:52.095" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA053', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:29:52.095" starttime="20190718 16:29:52.094"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:52.096" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:52.096" starttime="20190718 16:29:52.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:52.098" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:29:52.098" starttime="20190718 16:29:52.097"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:52.098" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:52.099" starttime="20190718 16:29:52.098"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:53.912" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA053", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:53.912" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:53.912" starttime="20190718 16:29:52.099"></status>
</kw>
<msg timestamp="20190718 16:29:53.912" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:53.912" starttime="20190718 16:29:52.095"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:53.913" level="INFO">{"jsonrpc":"2.0","id":1,"result":"e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df"}
</msg>
<status status="PASS" endtime="20190718 16:29:53.913" starttime="20190718 16:29:53.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:53.914" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df"}</msg>
<status status="PASS" endtime="20190718 16:29:53.914" starttime="20190718 16:29:53.913"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:53.914" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df"} </msg>
<msg timestamp="20190718 16:29:53.914" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:53.914" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df'}</msg>
<status status="PASS" endtime="20190718 16:29:53.915" starttime="20190718 16:29:53.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:53.915" starttime="20190718 16:29:53.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:53.916" starttime="20190718 16:29:53.915"></status>
</kw>
<msg timestamp="20190718 16:29:53.916" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df'}</msg>
<status status="PASS" endtime="20190718 16:29:53.916" starttime="20190718 16:29:53.913"></status>
</kw>
<msg timestamp="20190718 16:29:53.916" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df'}</msg>
<status status="PASS" endtime="20190718 16:29:53.916" starttime="20190718 16:29:52.093"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:29:53.917" level="INFO">${ret} = e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df</msg>
<status status="PASS" endtime="20190718 16:29:53.917" starttime="20190718 16:29:53.916"></status>
</kw>
<msg timestamp="20190718 16:29:53.917" level="INFO">${ret} = e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df</msg>
<status status="PASS" endtime="20190718 16:29:53.917" starttime="20190718 16:29:52.091"></status>
</kw>
<msg timestamp="20190718 16:29:53.917" level="INFO">${ret} = e497d02c0939c6dc0c25d17176d50dca1bddafc444fd4b0824549323caf592df</msg>
<status status="PASS" endtime="20190718 16:29:53.917" starttime="20190718 16:29:52.088"></status>
</kw>
<kw name="And Calculate gain">
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PTNAmount}+${PTNPoundage}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:29:53.918" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:53.918" starttime="20190718 16:29:53.918"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNGAIN}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:29:53.918" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:53.919" starttime="20190718 16:29:53.918"></status>
</kw>
<msg timestamp="20190718 16:29:53.919" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:29:53.919" starttime="20190718 16:29:53.917"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${count}</var>
<var>${key}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:29:57.920" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:29:57.920" starttime="20190718 16:29:53.920"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:29:57.925" level="INFO">${address} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:29:57.925" starttime="20190718 16:29:57.924"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:57.928" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:57.928" starttime="20190718 16:29:57.927"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:57.930" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:57.930" starttime="20190718 16:29:57.929"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:57.932" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:57.933" starttime="20190718 16:29:57.931"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:29:58.958" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:29:58.958" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:58.958" starttime="20190718 16:29:57.934"></status>
</kw>
<msg timestamp="20190718 16:29:58.959" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:29:58.959" starttime="20190718 16:29:57.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:29:58.961" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"999987997","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}
</msg>
<status status="PASS" endtime="20190718 16:29:58.962" starttime="20190718 16:29:58.960"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:58.965" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"999987997","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}</msg>
<status status="PASS" endtime="20190718 16:29:58.965" starttime="20190718 16:29:58.962"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:29:58.966" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"999987997","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}} </msg>
<msg timestamp="20190718 16:29:58.966" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:29:58.966" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999987997', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:58.966" starttime="20190718 16:29:58.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:58.967" starttime="20190718 16:29:58.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:58.968" starttime="20190718 16:29:58.968"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:29:58.970" level="INFO">${strResult} = {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999987997', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}</msg>
<status status="PASS" endtime="20190718 16:29:58.970" starttime="20190718 16:29:58.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:29:58.972" starttime="20190718 16:29:58.971"></status>
</kw>
<msg timestamp="20190718 16:29:58.972" level="INFO">${PTN} = 999987997</msg>
<status status="PASS" endtime="20190718 16:29:58.972" starttime="20190718 16:29:58.970"></status>
</kw>
<msg timestamp="20190718 16:29:58.973" level="INFO">${PTN} = 999987997</msg>
<msg timestamp="20190718 16:29:58.973" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999987997', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:58.973" starttime="20190718 16:29:57.922"></status>
</kw>
<msg timestamp="20190718 16:29:58.973" level="INFO">${PTN2} = 999987997</msg>
<msg timestamp="20190718 16:29:58.973" level="INFO">${result2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999987997', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}}</msg>
<status status="PASS" endtime="20190718 16:29:58.974" starttime="20190718 16:29:57.921"></status>
</kw>
<kw type="for" name="${key} IN [ ${result2.keys} ]">
<kw type="foritem" name="${key} = &lt;built-in method keys of dict object at 0x0000000004DF98C8&gt;">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20190718 16:29:58.975" level="INFO">&lt;built-in method keys of dict object at 0x0000000004DF98C8&gt;</msg>
<status status="PASS" endtime="20190718 16:29:58.975" starttime="20190718 16:29:58.974"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:58.975" starttime="20190718 16:29:58.974"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:58.975" starttime="20190718 16:29:58.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(pow(10,-${tokenDecimal})*${tokenAmount})</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190718 16:29:58.977" level="INFO">${count} = 6000</msg>
<status status="PASS" endtime="20190718 16:29:58.977" starttime="20190718 16:29:58.975"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result2['result']}</arg>
</arguments>
<assign>
<var>${item}</var>
</assign>
<msg timestamp="20190718 16:29:58.979" level="INFO">${item} = QA053+10YQ1KAZO966CWP3R9T</msg>
<status status="PASS" endtime="20190718 16:29:58.979" starttime="20190718 16:29:58.977"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2['result']}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 16:29:58.980" level="INFO">${key} = 6000</msg>
<status status="PASS" endtime="20190718 16:29:58.980" starttime="20190718 16:29:58.979"></status>
</kw>
<msg timestamp="20190718 16:29:58.981" level="INFO">${count} = 6000</msg>
<msg timestamp="20190718 16:29:58.981" level="INFO">${key} = 6000</msg>
<status status="PASS" endtime="20190718 16:29:58.981" starttime="20190718 16:29:53.919"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${count}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20190718 16:29:58.984" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190718 16:29:58.984" starttime="20190718 16:29:58.983"></status>
</kw>
<status status="PASS" endtime="20190718 16:29:58.985" starttime="20190718 16:29:58.982"></status>
</kw>
<doc>Verify Sender's Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:29:58.986" critical="yes" starttime="20190718 16:29:48.974"></status>
</test>
<status status="PASS" endtime="20190718 16:29:58.991" starttime="20190718 16:29:48.949"></status>
</suite>
<status status="PASS" endtime="20190718 16:29:58.997" starttime="20190718 16:29:28.733"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccquery" id="s1-s2" name="Ccquery">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccquery\ccquery_Normal.robot" id="s1-s2-s1" name="ccquery Normal">
<test id="s1-s2-s1-t1" name="Scenario: 20Contract - Ccquery">
<kw name="normalCcqueryById" library="behaveKwd">
<arguments>
<arg>${20ContractId}</arg>
<arg>${TokenInfoMethod}</arg>
<arg>${preTokenId}</arg>
</arguments>
<kw name="Request Ccquery" library="normalKwd">
<arguments>
<arg>${contractId}</arg>
<arg>${methodType}</arg>
<arg>${preTokenId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${methodType}</arg>
<arg>${PreTokenId}</arg>
</arguments>
<assign>
<var>${methodType}</var>
</assign>
<msg timestamp="20190718 16:29:59.023" level="INFO">${methodType} = [u'getTokenInfo', u'QA053']</msg>
<status status="PASS" endtime="20190718 16:29:59.023" starttime="20190718 16:29:59.022"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${contractId}</arg>
<arg>${methodType}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 16:29:59.023" level="INFO">${transList} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'getTokenInfo', u'QA053'], 0]</msg>
<status status="PASS" endtime="20190718 16:29:59.023" starttime="20190718 16:29:59.023"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>contract_ccquery</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:29:59.024" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:29:59.024" starttime="20190718 16:29:59.024"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:29:59.025" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccquery', u'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'getTokenInfo', u'QA053'], 0], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:29:59.025" starttime="20190718 16:29:59.024"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:29:59.025" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:29:59.025" starttime="20190718 16:29:59.025"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:00.063" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccquery", "params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["getTokenInfo", "QA053"], 0], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:00.063" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:00.063" starttime="20190718 16:29:59.026"></status>
</kw>
<msg timestamp="20190718 16:30:00.063" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:00.063" starttime="20190718 16:29:59.023"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:00.064" level="INFO">{"jsonrpc":"2.0","id":1,"result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3\",\"AssetID\":\"QA053+10YQ1KAZO966CWP3R9T\"}"}
</msg>
<status status="PASS" endtime="20190718 16:30:00.064" starttime="20190718 16:30:00.064"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:00.065" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3...</msg>
<status status="PASS" endtime="20190718 16:30:00.065" starttime="20190718 16:30:00.064"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:00.066" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3\",\"AssetID\":\"QA053+10YQ1KAZO966CWP3R9T\"}"} </msg>
<msg timestamp="20190718 16:30:00.066" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:00.066" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","As...</msg>
<status status="PASS" endtime="20190718 16:30:00.066" starttime="20190718 16:30:00.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:00.066" starttime="20190718 16:30:00.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:00.067" starttime="20190718 16:30:00.066"></status>
</kw>
<msg timestamp="20190718 16:30:00.067" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","As...</msg>
<status status="PASS" endtime="20190718 16:30:00.067" starttime="20190718 16:30:00.064"></status>
</kw>
<msg timestamp="20190718 16:30:00.067" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","As...</msg>
<status status="PASS" endtime="20190718 16:30:00.067" starttime="20190718 16:29:59.022"></status>
</kw>
<status status="PASS" endtime="20190718 16:30:00.067" starttime="20190718 16:29:59.021"></status>
</kw>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:30:00.068" critical="yes" starttime="20190718 16:29:59.019"></status>
</test>
<status status="PASS" endtime="20190718 16:30:00.071" starttime="20190718 16:29:59.008"></status>
</suite>
<status status="PASS" endtime="20190718 16:30:00.073" starttime="20190718 16:29:59.005"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken" id="s1-s3" name="transferToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken\transferToken_recieverToken.robot" id="s1-s3-s1" name="transferToken recieverToken">
<test id="s1-s3-s1-t1" name="Scenario: 20Contract - Transfer Token">
<kw name="Given Request getbalance before create token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:30:00.090" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:30:00.090" starttime="20190718 16:30:00.090"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:00.091" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:00.091" starttime="20190718 16:30:00.091"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:00.092" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:00.092" starttime="20190718 16:30:00.091"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:00.092" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:00.093" starttime="20190718 16:30:00.092"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:01.101" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:01.101" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:01.101" starttime="20190718 16:30:00.093"></status>
</kw>
<msg timestamp="20190718 16:30:01.102" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:01.102" starttime="20190718 16:30:00.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:01.104" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:30:01.104" starttime="20190718 16:30:01.103"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:01.108" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:30:01.108" starttime="20190718 16:30:01.104"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:01.109" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:30:01.109" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:01.109" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:30:01.110" starttime="20190718 16:30:01.108"></status>
</kw>
<msg timestamp="20190718 16:30:01.110" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:01.111" starttime="20190718 16:30:00.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:01.113" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:01.113" starttime="20190718 16:30:01.111"></status>
</kw>
<status status="PASS" endtime="20190718 16:30:01.113" starttime="20190718 16:30:00.090"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:30:01.117" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA054', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:30:01.117" starttime="20190718 16:30:01.116"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:30:01.122" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA054', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:30:01.122" starttime="20190718 16:30:01.121"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:01.123" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:01.123" starttime="20190718 16:30:01.123"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:01.124" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:30:01.124" starttime="20190718 16:30:01.124"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:01.125" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:01.126" starttime="20190718 16:30:01.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:02.873" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA054", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:02.873" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:02.873" starttime="20190718 16:30:01.126"></status>
</kw>
<msg timestamp="20190718 16:30:02.874" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:02.874" starttime="20190718 16:30:01.122"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:02.874" level="INFO">{"jsonrpc":"2.0","id":1,"result":"cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6"}
</msg>
<status status="PASS" endtime="20190718 16:30:02.875" starttime="20190718 16:30:02.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:02.875" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6"}</msg>
<status status="PASS" endtime="20190718 16:30:02.875" starttime="20190718 16:30:02.875"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:02.876" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6"} </msg>
<msg timestamp="20190718 16:30:02.876" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:02.876" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6'}</msg>
<status status="PASS" endtime="20190718 16:30:02.876" starttime="20190718 16:30:02.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:02.876" starttime="20190718 16:30:02.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:02.877" starttime="20190718 16:30:02.876"></status>
</kw>
<msg timestamp="20190718 16:30:02.877" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6'}</msg>
<status status="PASS" endtime="20190718 16:30:02.877" starttime="20190718 16:30:02.874"></status>
</kw>
<msg timestamp="20190718 16:30:02.877" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6'}</msg>
<status status="PASS" endtime="20190718 16:30:02.877" starttime="20190718 16:30:01.119"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:30:02.878" level="INFO">${ret} = cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6</msg>
<status status="PASS" endtime="20190718 16:30:02.878" starttime="20190718 16:30:02.877"></status>
</kw>
<msg timestamp="20190718 16:30:02.878" level="INFO">${ret} = cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6</msg>
<status status="PASS" endtime="20190718 16:30:02.878" starttime="20190718 16:30:01.117"></status>
</kw>
<msg timestamp="20190718 16:30:02.878" level="INFO">${ret} = cfab81a6614830fc7e79cb36c70a398298318567faf676ff088f213d9e53c8d6</msg>
<status status="PASS" endtime="20190718 16:30:02.878" starttime="20190718 16:30:01.115"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${key}</var>
<var>${item}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:06.879" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:06.879" starttime="20190718 16:30:02.879"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:30:06.883" level="INFO">${address} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:30:06.884" starttime="20190718 16:30:06.883"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:06.887" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:06.887" starttime="20190718 16:30:06.885"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:06.890" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:06.890" starttime="20190718 16:30:06.888"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:06.892" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:06.893" starttime="20190718 16:30:06.891"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:07.916" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:07.916" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:07.916" starttime="20190718 16:30:06.893"></status>
</kw>
<msg timestamp="20190718 16:30:07.917" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:07.917" starttime="20190718 16:30:06.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:07.919" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"999983996","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA054+10VJMKVLD024O4L7B9N":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}
</msg>
<status status="PASS" endtime="20190718 16:30:07.919" starttime="20190718 16:30:07.918"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:07.925" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"999983996","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA054+10VJMKVLD024O4L7B9N":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}}</msg>
<status status="PASS" endtime="20190718 16:30:07.925" starttime="20190718 16:30:07.920"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:07.927" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"999983996","QA052+10LHUN3AWH5JSMYD7KB":"6000","QA053+10YQ1KAZO966CWP3R9T":"6000","QA054+10VJMKVLD024O4L7B9N":"6000","QA151+106QA1WR9RVBKHRBB4A":"6000"}} </msg>
<msg timestamp="20190718 16:30:07.927" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:07.928" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999983996', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA054+10VJMKVLD024O4L7B9N': u'6000', u'QA151+106QA1WR9R...</msg>
<status status="PASS" endtime="20190718 16:30:07.928" starttime="20190718 16:30:07.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:07.930" starttime="20190718 16:30:07.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:07.931" starttime="20190718 16:30:07.930"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:30:07.932" level="INFO">${strResult} = {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999983996', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA054+10VJMKVLD024O4L7B9N': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000'}</msg>
<status status="PASS" endtime="20190718 16:30:07.932" starttime="20190718 16:30:07.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:07.934" starttime="20190718 16:30:07.934"></status>
</kw>
<msg timestamp="20190718 16:30:07.934" level="INFO">${PTN} = 999983996</msg>
<status status="PASS" endtime="20190718 16:30:07.934" starttime="20190718 16:30:07.933"></status>
</kw>
<msg timestamp="20190718 16:30:07.935" level="INFO">${PTN} = 999983996</msg>
<msg timestamp="20190718 16:30:07.935" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999983996', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA054+10VJMKVLD024O4L7B9N': u'6000', u'QA151+106QA1WR9R...</msg>
<status status="PASS" endtime="20190718 16:30:07.935" starttime="20190718 16:30:06.881"></status>
</kw>
<msg timestamp="20190718 16:30:07.935" level="INFO">${PTN2} = 999983996</msg>
<msg timestamp="20190718 16:30:07.936" level="INFO">${result2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'PTN': u'999983996', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA054+10VJMKVLD024O4L7B9N': u'6000', u'QA151+106QA1WR9R...</msg>
<status status="PASS" endtime="20190718 16:30:07.936" starttime="20190718 16:30:06.880"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result2['result']}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 16:30:07.937" level="INFO">${key} = QA054+10VJMKVLD024O4L7B9N</msg>
<status status="PASS" endtime="20190718 16:30:07.937" starttime="20190718 16:30:07.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${item}</var>
</assign>
<msg timestamp="20190718 16:30:07.938" level="INFO">${item} = 0</msg>
<status status="PASS" endtime="20190718 16:30:07.938" starttime="20190718 16:30:07.938"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${gain}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 16:30:09.690" level="INFO">Post data:{"params": ["QA054+10VJMKVLD024O4L7B9N", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'result': u'0x1af8aae5f4b4d77a25792b15f6534eedc57b801e6c47614e5813e332d2b2ac64'}</msg>
<msg timestamp="20190718 16:30:09.690" level="INFO">${tokenResult} = 0x1af8aae5f4b4d77a25792b15f6534eedc57b801e6c47614e5813e332d2b2ac64</msg>
<status status="PASS" endtime="20190718 16:30:09.690" starttime="20190718 16:30:07.938"></status>
</kw>
<msg timestamp="20190718 16:30:09.690" level="INFO">${key} = QA054+10VJMKVLD024O4L7B9N</msg>
<msg timestamp="20190718 16:30:09.690" level="INFO">${item} = 0</msg>
<status status="PASS" endtime="20190718 16:30:09.690" starttime="20190718 16:30:02.879"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${key}</arg>
<arg>${item}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item}+${gain}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 16:30:09.692" level="INFO">${item1} = 2</msg>
<status status="PASS" endtime="20190718 16:30:09.692" starttime="20190718 16:30:09.691"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:13.692" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:13.692" starttime="20190718 16:30:09.692"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${RecPTN2}</var>
<var>${RecResult2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 16:30:13.697" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 16:30:13.697" starttime="20190718 16:30:13.696"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:13.701" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:13.701" starttime="20190718 16:30:13.700"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:13.705" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:13.705" starttime="20190718 16:30:13.702"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:13.706" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:13.708" starttime="20190718 16:30:13.705"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:14.731" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:14.731" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:14.731" starttime="20190718 16:30:13.708"></status>
</kw>
<msg timestamp="20190718 16:30:14.731" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:14.731" starttime="20190718 16:30:13.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:14.731" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"16000","QA054+10VJMKVLD024O4L7B9N":"2"}}
</msg>
<status status="PASS" endtime="20190718 16:30:14.731" starttime="20190718 16:30:14.731"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:14.732" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"16000","QA054+10VJMKVLD024O4L7B9N":"2"}}</msg>
<status status="PASS" endtime="20190718 16:30:14.732" starttime="20190718 16:30:14.732"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:14.733" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"16000","QA054+10VJMKVLD024O4L7B9N":"2"}} </msg>
<msg timestamp="20190718 16:30:14.733" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:14.733" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'16000', u'QA054+10VJMKVLD024O4L7B9N': u'2'}}</msg>
<status status="PASS" endtime="20190718 16:30:14.733" starttime="20190718 16:30:14.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:14.733" starttime="20190718 16:30:14.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:14.734" starttime="20190718 16:30:14.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 16:30:14.734" level="INFO">${strResult} = {u'PTN': u'16000', u'QA054+10VJMKVLD024O4L7B9N': u'2'}</msg>
<status status="PASS" endtime="20190718 16:30:14.734" starttime="20190718 16:30:14.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:14.735" starttime="20190718 16:30:14.735"></status>
</kw>
<msg timestamp="20190718 16:30:14.735" level="INFO">${PTN} = 16000</msg>
<status status="PASS" endtime="20190718 16:30:14.735" starttime="20190718 16:30:14.734"></status>
</kw>
<msg timestamp="20190718 16:30:14.735" level="INFO">${PTN} = 16000</msg>
<msg timestamp="20190718 16:30:14.735" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'16000', u'QA054+10VJMKVLD024O4L7B9N': u'2'}}</msg>
<status status="PASS" endtime="20190718 16:30:14.735" starttime="20190718 16:30:13.695"></status>
</kw>
<msg timestamp="20190718 16:30:14.735" level="INFO">${RecPTN2} = 16000</msg>
<msg timestamp="20190718 16:30:14.735" level="INFO">${RecResult2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'PTN': u'16000', u'QA054+10VJMKVLD024O4L7B9N': u'2'}}</msg>
<status status="PASS" endtime="20190718 16:30:14.736" starttime="20190718 16:30:13.693"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${RecResult2['result']}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 16:30:14.736" level="INFO">${item2} = 2</msg>
<status status="PASS" endtime="20190718 16:30:14.736" starttime="20190718 16:30:14.736"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item2}</arg>
<arg>${item1}</arg>
</arguments>
<msg timestamp="20190718 16:30:14.736" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:14.736" starttime="20190718 16:30:14.736"></status>
</kw>
<status status="PASS" endtime="20190718 16:30:14.736" starttime="20190718 16:30:09.691"></status>
</kw>
<doc>Verify Reciever's Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:30:14.737" critical="yes" starttime="20190718 16:30:00.088"></status>
</test>
<status status="PASS" endtime="20190718 16:30:14.740" starttime="20190718 16:30:00.078"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken\transferToken_senderTokenPTN.robot" id="s1-s3-s2" name="transferToken senderTokenPTN">
<test id="s1-s3-s2-t1" name="Scenario: 20Contract - Transfer Token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:30:14.753" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:30:14.753" starttime="20190718 16:30:14.753"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:14.754" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:14.754" starttime="20190718 16:30:14.754"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:14.755" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:14.755" starttime="20190718 16:30:14.754"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:14.755" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:14.756" starttime="20190718 16:30:14.755"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:15.764" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:15.765" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:15.765" starttime="20190718 16:30:14.756"></status>
</kw>
<msg timestamp="20190718 16:30:15.765" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:15.766" starttime="20190718 16:30:14.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:15.767" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:30:15.767" starttime="20190718 16:30:15.766"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:15.770" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:30:15.770" starttime="20190718 16:30:15.767"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:15.771" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:30:15.771" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:15.771" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:30:15.771" starttime="20190718 16:30:15.770"></status>
</kw>
<msg timestamp="20190718 16:30:15.772" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:15.772" starttime="20190718 16:30:14.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:15.774" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:15.775" starttime="20190718 16:30:15.774"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:16.790" level="INFO">[u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g', u'P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG', u'P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax']</msg>
<status status="PASS" endtime="20190718 16:30:16.790" starttime="20190718 16:30:15.776"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:30:16.793" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA055', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:30:16.793" starttime="20190718 16:30:16.792"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:30:16.799" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA055', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:30:16.799" starttime="20190718 16:30:16.797"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:16.802" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:16.802" starttime="20190718 16:30:16.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:16.804" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:30:16.805" starttime="20190718 16:30:16.802"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:16.806" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:16.807" starttime="20190718 16:30:16.805"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:18.537" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA055", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:18.537" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:18.537" starttime="20190718 16:30:16.807"></status>
</kw>
<msg timestamp="20190718 16:30:18.537" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:18.538" starttime="20190718 16:30:16.799"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:18.538" level="INFO">{"jsonrpc":"2.0","id":1,"result":"a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3"}
</msg>
<status status="PASS" endtime="20190718 16:30:18.539" starttime="20190718 16:30:18.538"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:18.539" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3"}</msg>
<status status="PASS" endtime="20190718 16:30:18.539" starttime="20190718 16:30:18.539"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:18.540" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3"} </msg>
<msg timestamp="20190718 16:30:18.540" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:18.540" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3'}</msg>
<status status="PASS" endtime="20190718 16:30:18.540" starttime="20190718 16:30:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:18.541" starttime="20190718 16:30:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:18.541" starttime="20190718 16:30:18.541"></status>
</kw>
<msg timestamp="20190718 16:30:18.541" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3'}</msg>
<status status="PASS" endtime="20190718 16:30:18.541" starttime="20190718 16:30:18.538"></status>
</kw>
<msg timestamp="20190718 16:30:18.541" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3'}</msg>
<status status="PASS" endtime="20190718 16:30:18.541" starttime="20190718 16:30:16.796"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:30:18.542" level="INFO">${ret} = a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3</msg>
<status status="PASS" endtime="20190718 16:30:18.542" starttime="20190718 16:30:18.541"></status>
</kw>
<msg timestamp="20190718 16:30:18.542" level="INFO">${ret} = a07366f19e383e753344c054dfe16b70ba0365d989820c268babbd5192fefef3</msg>
<status status="PASS" endtime="20190718 16:30:18.542" starttime="20190718 16:30:16.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:22.543" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:22.543" starttime="20190718 16:30:18.543"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 16:30:23.568" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999979994', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QA055+10ODEV2U4OGCXYE9ARK': u'6000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:30:23.568" level="INFO">${result1} = {u'PTN': u'999979994', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QA055+10ODEV2U4OGCXYE9ARK': u'6000', u'QA054+10VJMKVLD024O...</msg>
<status status="PASS" endtime="20190718 16:30:23.569" starttime="20190718 16:30:22.545"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 16:30:23.574" level="INFO">${key} = QA055+10ODEV2U4OGCXYE9ARK</msg>
<status status="PASS" endtime="20190718 16:30:23.575" starttime="20190718 16:30:23.572"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 16:30:23.578" level="INFO">${PTN1} = 999979994</msg>
<status status="PASS" endtime="20190718 16:30:23.578" starttime="20190718 16:30:23.576"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 16:30:23.583" level="INFO">${item1} = 6000</msg>
<status status="PASS" endtime="20190718 16:30:23.583" starttime="20190718 16:30:23.582"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${GeneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${amount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 16:30:25.369" level="INFO">Post data:{"params": ["QA055+10ODEV2U4OGCXYE9ARK", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2000", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'result': u'0xbec231fb79f39e00534675b12cc88122e9629a352dde603b8d49d2cbe689d359'}</msg>
<msg timestamp="20190718 16:30:25.369" level="INFO">${tokenResult} = 0xbec231fb79f39e00534675b12cc88122e9629a352dde603b8d49d2cbe689d359</msg>
<status status="PASS" endtime="20190718 16:30:25.369" starttime="20190718 16:30:23.585"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:29.370" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:29.371" starttime="20190718 16:30:25.370"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item1}-${amount}</arg>
</arguments>
<assign>
<var>${item'}</var>
</assign>
<msg timestamp="20190718 16:30:29.375" level="INFO">${item'} = 4000</msg>
<status status="PASS" endtime="20190718 16:30:29.375" starttime="20190718 16:30:29.373"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNPoundage}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTN'}</var>
</assign>
<msg timestamp="20190718 16:30:29.378" level="INFO">${PTN'} = 999979993</msg>
<status status="PASS" endtime="20190718 16:30:29.378" starttime="20190718 16:30:29.376"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 16:30:30.396" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999979993', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:30:30.396" level="INFO">${result2} = {u'PTN': u'999979993', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O...</msg>
<status status="PASS" endtime="20190718 16:30:30.396" starttime="20190718 16:30:29.380"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 16:30:30.397" level="INFO">${PTN2} = 999979993</msg>
<status status="PASS" endtime="20190718 16:30:30.397" starttime="20190718 16:30:30.397"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 16:30:30.398" level="INFO">${item2} = 4000</msg>
<status status="PASS" endtime="20190718 16:30:30.398" starttime="20190718 16:30:30.398"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item2}</arg>
<arg>${item'}</arg>
</arguments>
<msg timestamp="20190718 16:30:30.399" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:30.399" starttime="20190718 16:30:30.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTN'}</arg>
</arguments>
<msg timestamp="20190718 16:30:30.400" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:30.400" starttime="20190718 16:30:30.400"></status>
</kw>
<doc>verify sender's PTN and token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:30:30.400" critical="yes" starttime="20190718 16:30:14.751"></status>
</test>
<status status="PASS" endtime="20190718 16:30:30.402" starttime="20190718 16:30:14.742"></status>
</suite>
<status status="PASS" endtime="20190718 16:30:30.405" starttime="20190718 16:30:00.075"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zChangeSupply" id="s1-s4" name="zChangeSupply">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zChangeSupply\ccinvoketxPass_SenderPTN.robot" id="s1-s4-s1" name="ccinvoketxPass SenderPTN">
<test id="s1-s4-s1-t1" name="Scenario: 20Contract - Change Supply Token">
<kw name="Given Send PTN to recieverAdd">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:30:30.423" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:30:30.423" starttime="20190718 16:30:30.423"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:30.424" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:30.424" starttime="20190718 16:30:30.424"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:30.425" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:30.425" starttime="20190718 16:30:30.424"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:30.425" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:30.426" starttime="20190718 16:30:30.425"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:31.436" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:31.437" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:31.437" starttime="20190718 16:30:30.426"></status>
</kw>
<msg timestamp="20190718 16:30:31.438" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:31.438" starttime="20190718 16:30:30.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:31.440" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]}
</msg>
<status status="PASS" endtime="20190718 16:30:31.441" starttime="20190718 16:30:31.439"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:31.446" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:30:31.446" starttime="20190718 16:30:31.441"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:31.447" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax"]} </msg>
<msg timestamp="20190718 16:30:31.447" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:31.448" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:30:31.448" starttime="20190718 16:30:31.446"></status>
</kw>
<msg timestamp="20190718 16:30:31.449" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:31.449" starttime="20190718 16:30:30.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:31.451" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:31.451" starttime="20190718 16:30:31.450"></status>
</kw>
<kw name="newAccount" library="utilDefined">
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 16:30:31.452" level="INFO">${transList} = [u'1']</msg>
<status status="PASS" endtime="20190718 16:30:31.453" starttime="20190718 16:30:31.452"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${newAccount}</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:31.455" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:31.455" starttime="20190718 16:30:31.454"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:31.456" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:31.456" starttime="20190718 16:30:31.455"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:31.457" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:31.458" starttime="20190718 16:30:31.457"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:33.196" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:33.196" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:33.196" starttime="20190718 16:30:31.458"></status>
</kw>
<msg timestamp="20190718 16:30:33.197" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:33.197" starttime="20190718 16:30:31.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:33.198" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"}</msg>
<status status="PASS" endtime="20190718 16:30:33.198" starttime="20190718 16:30:33.197"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:33.198" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"} </msg>
<msg timestamp="20190718 16:30:33.198" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:33.198" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX'}</msg>
<status status="PASS" endtime="20190718 16:30:33.198" starttime="20190718 16:30:33.198"></status>
</kw>
<msg timestamp="20190718 16:30:33.198" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX'}</msg>
<status status="PASS" endtime="20190718 16:30:33.198" starttime="20190718 16:30:31.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${reciever}</arg>
<arg>${jsonRes['result']}</arg>
</arguments>
<msg timestamp="20190718 16:30:33.201" level="INFO">${reciever} = P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX</msg>
<status status="PASS" endtime="20190718 16:30:33.201" starttime="20190718 16:30:33.199"></status>
</kw>
<kw name="And normalCrtTrans" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
<arg>${reciever}</arg>
<arg>100000</arg>
<arg>${PTNPoundage}</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<kw name="Request create transaction" library="normalKwd">
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 16:30:33.202" level="INFO">${transList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX', u'100000', u'1']</msg>
<status status="PASS" endtime="20190718 16:30:33.202" starttime="20190718 16:30:33.202"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_cmdCreateTransaction</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:33.203" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:33.203" starttime="20190718 16:30:33.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:33.204" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_cmdCreateTransaction', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX', u'100000', u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:33.204" starttime="20190718 16:30:33.203"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:33.204" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:33.204" starttime="20190718 16:30:33.204"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:34.210" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_cmdCreateTransaction", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX", "100000", "1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:34.210" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:34.210" starttime="20190718 16:30:33.204"></status>
</kw>
<msg timestamp="20190718 16:30:34.210" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:34.210" starttime="20190718 16:30:33.202"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:34.211" level="INFO">{"jsonrpc":"2.0","id":1,"error":{"code":-32601,"message":"The method wallet_cmdCreateTransaction does not exist/is not available"}}
</msg>
<status status="PASS" endtime="20190718 16:30:34.211" starttime="20190718 16:30:34.211"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:34.212" level="INFO">${jsonRes} = {"error":{"code":-32601,"message":"The method wallet_cmdCreateTransaction does not exist/is not available"},"id":1,"jsonrpc":"2.0"}</msg>
<status status="PASS" endtime="20190718 16:30:34.212" starttime="20190718 16:30:34.211"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:34.213" level="INFO">To JSON using : content={"error":{"code":-32601,"message":"The method wallet_cmdCreateTransaction does not exist/is not available"},"id":1,"jsonrpc":"2.0"} </msg>
<msg timestamp="20190718 16:30:34.213" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:34.213" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_cmdCreateTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 16:30:34.213" starttime="20190718 16:30:34.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:34.213" starttime="20190718 16:30:34.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:34.214" starttime="20190718 16:30:34.213"></status>
</kw>
<msg timestamp="20190718 16:30:34.214" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_cmdCreateTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 16:30:34.214" starttime="20190718 16:30:34.211"></status>
</kw>
<msg timestamp="20190718 16:30:34.214" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_cmdCreateTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 16:30:34.214" starttime="20190718 16:30:33.201"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${jsonRes['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:30:34.214" level="FAIL">Resolving variable '${jsonRes['result']}' failed: KeyError: 'result'</msg>
<status status="FAIL" endtime="20190718 16:30:34.215" starttime="20190718 16:30:34.214"></status>
</kw>
<status status="FAIL" endtime="20190718 16:30:34.215" starttime="20190718 16:30:33.201"></status>
</kw>
<status status="FAIL" endtime="20190718 16:30:34.215" starttime="20190718 16:30:30.422"></status>
</kw>
<doc>Verify SupplyAdd And Transfer Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 16:30:34.216" critical="yes" starttime="20190718 16:30:30.421">Resolving variable '${jsonRes['result']}' failed: KeyError: 'result'</status>
</test>
<status status="FAIL" endtime="20190718 16:30:34.219" starttime="20190718 16:30:30.411"></status>
</suite>
<status status="FAIL" endtime="20190718 16:30:34.221" starttime="20190718 16:30:30.409"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zFrozToken" id="s1-s5" name="zFrozToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zFrozToken\transferToken_frozen_senderToken.robot" id="s1-s5-s1" name="transferToken frozen senderToken">
<test id="s1-s5-s1-t1" name="Scenario: 20Contract - Frozen Token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:30:34.248" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:30:34.248" starttime="20190718 16:30:34.247"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:34.249" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:34.249" starttime="20190718 16:30:34.249"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:34.250" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:30:34.250" starttime="20190718 16:30:34.250"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:34.251" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:34.251" starttime="20190718 16:30:34.250"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:35.268" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:35.269" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:35.269" starttime="20190718 16:30:34.255"></status>
</kw>
<msg timestamp="20190718 16:30:35.269" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:35.269" starttime="20190718 16:30:34.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:35.270" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]}
</msg>
<status status="PASS" endtime="20190718 16:30:35.271" starttime="20190718 16:30:35.270"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:35.274" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:30:35.274" starttime="20190718 16:30:35.271"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:35.275" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]} </msg>
<msg timestamp="20190718 16:30:35.276" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:35.276" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:30:35.276" starttime="20190718 16:30:35.275"></status>
</kw>
<msg timestamp="20190718 16:30:35.277" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:35.277" starttime="20190718 16:30:34.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:35.279" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:30:35.280" starttime="20190718 16:30:35.278"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:30:36.297" level="INFO">[u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g', u'P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG', u'P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax', u'P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX']</msg>
<status status="PASS" endtime="20190718 16:30:36.298" starttime="20190718 16:30:35.281"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:30:36.303" level="INFO">${ccList} = [u'createToken', u'evidence', u'QZ003', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:30:36.304" starttime="20190718 16:30:36.301"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:30:36.313" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QZ003', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:30:36.313" starttime="20190718 16:30:36.311"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:36.314" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:36.314" starttime="20190718 16:30:36.314"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:36.315" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:30:36.315" starttime="20190718 16:30:36.314"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:36.315" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:36.316" starttime="20190718 16:30:36.315"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:38.342" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QZ003", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:38.342" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:38.342" starttime="20190718 16:30:36.316"></status>
</kw>
<msg timestamp="20190718 16:30:38.342" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:38.342" starttime="20190718 16:30:36.313"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:38.343" level="INFO">{"jsonrpc":"2.0","id":1,"result":"611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297"}
</msg>
<status status="PASS" endtime="20190718 16:30:38.343" starttime="20190718 16:30:38.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:38.345" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297"}</msg>
<status status="PASS" endtime="20190718 16:30:38.345" starttime="20190718 16:30:38.344"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:38.345" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297"} </msg>
<msg timestamp="20190718 16:30:38.345" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:38.345" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297'}</msg>
<status status="PASS" endtime="20190718 16:30:38.345" starttime="20190718 16:30:38.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:38.346" starttime="20190718 16:30:38.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:38.346" starttime="20190718 16:30:38.346"></status>
</kw>
<msg timestamp="20190718 16:30:38.347" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297'}</msg>
<status status="PASS" endtime="20190718 16:30:38.347" starttime="20190718 16:30:38.342"></status>
</kw>
<msg timestamp="20190718 16:30:38.347" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297'}</msg>
<status status="PASS" endtime="20190718 16:30:38.347" starttime="20190718 16:30:36.309"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:30:38.348" level="INFO">${ret} = 611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297</msg>
<status status="PASS" endtime="20190718 16:30:38.348" starttime="20190718 16:30:38.347"></status>
</kw>
<msg timestamp="20190718 16:30:38.348" level="INFO">${ret} = 611c04fad39b9abdb750c91059db0d6d04a1add31afb79a4e96676340a81a297</msg>
<status status="PASS" endtime="20190718 16:30:38.348" starttime="20190718 16:30:36.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:42.349" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:42.350" starttime="20190718 16:30:38.348"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 16:30:43.373" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999975992', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'6000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:30:43.374" level="INFO">${result1} = {u'PTN': u'999975992', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'6000', u'QA055+10ODEV2U4OGCX...</msg>
<status status="PASS" endtime="20190718 16:30:43.374" starttime="20190718 16:30:42.352"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 16:30:43.378" level="INFO">${key} = QZ003+10ER1A563CGK2DPO2Q1</msg>
<status status="PASS" endtime="20190718 16:30:43.378" starttime="20190718 16:30:43.377"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 16:30:43.381" level="INFO">${PTN1} = 999975992</msg>
<status status="PASS" endtime="20190718 16:30:43.381" starttime="20190718 16:30:43.379"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 16:30:43.385" level="INFO">${item1} = 6000</msg>
<status status="PASS" endtime="20190718 16:30:43.385" starttime="20190718 16:30:43.384"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${GeneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${amount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 16:30:45.199" level="INFO">Post data:{"params": ["QZ003+10ER1A563CGK2DPO2Q1", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2000", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'result': u'0x0920a53cae274a07a0f567fd757e3767f54db464bf37c1bc8a866ab8e5ed5167'}</msg>
<msg timestamp="20190718 16:30:45.199" level="INFO">${tokenResult} = 0x0920a53cae274a07a0f567fd757e3767f54db464bf37c1bc8a866ab8e5ed5167</msg>
<status status="PASS" endtime="20190718 16:30:45.199" starttime="20190718 16:30:43.387"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item1}-${amount}</arg>
</arguments>
<assign>
<var>${item'}</var>
</assign>
<msg timestamp="20190718 16:30:45.201" level="INFO">${item'} = 4000</msg>
<status status="PASS" endtime="20190718 16:30:45.201" starttime="20190718 16:30:45.201"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNPoundage}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTN'}</var>
</assign>
<msg timestamp="20190718 16:30:45.202" level="INFO">${PTN'} = 999975991</msg>
<status status="PASS" endtime="20190718 16:30:45.202" starttime="20190718 16:30:45.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:49.202" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:49.202" starttime="20190718 16:30:45.202"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 16:30:50.231" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999975991', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:30:50.231" level="INFO">${result2} = {u'PTN': u'999975991', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCX...</msg>
<status status="PASS" endtime="20190718 16:30:50.231" starttime="20190718 16:30:49.206"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 16:30:50.236" level="INFO">${PTN2} = 999975991</msg>
<status status="PASS" endtime="20190718 16:30:50.236" starttime="20190718 16:30:50.235"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 16:30:50.238" level="INFO">${item2} = 4000</msg>
<status status="PASS" endtime="20190718 16:30:50.238" starttime="20190718 16:30:50.237"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item2}</arg>
<arg>${item'}</arg>
</arguments>
<msg timestamp="20190718 16:30:50.240" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:50.240" starttime="20190718 16:30:50.239"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTN'}</arg>
</arguments>
<msg timestamp="20190718 16:30:50.242" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:50.243" starttime="20190718 16:30:50.241"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${frozenTokenMethod}</arg>
<arg>${preTokenId}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:30:50.247" level="INFO">${ccList} = [u'frozenToken', u'QZ003']</msg>
<status status="PASS" endtime="20190718 16:30:50.247" starttime="20190718 16:30:50.245"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:30:50.253" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'frozenToken', u'QZ003'], u'1', 600000000, u'']</msg>
<status status="PASS" endtime="20190718 16:30:50.253" starttime="20190718 16:30:50.251"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:30:50.256" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:30:50.256" starttime="20190718 16:30:50.255"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:30:50.257" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:30:50.258" starttime="20190718 16:30:50.256"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:30:50.258" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:30:50.259" starttime="20190718 16:30:50.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:30:52.066" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["frozenToken", "QZ003"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:30:52.066" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:52.066" starttime="20190718 16:30:50.260"></status>
</kw>
<msg timestamp="20190718 16:30:52.066" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:30:52.066" starttime="20190718 16:30:50.254"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:30:52.067" level="INFO">{"jsonrpc":"2.0","id":1,"result":"d7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f"}
</msg>
<status status="PASS" endtime="20190718 16:30:52.067" starttime="20190718 16:30:52.067"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:52.068" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"d7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f"}</msg>
<status status="PASS" endtime="20190718 16:30:52.068" starttime="20190718 16:30:52.068"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:30:52.069" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"d7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f"} </msg>
<msg timestamp="20190718 16:30:52.069" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:30:52.069" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f'}</msg>
<status status="PASS" endtime="20190718 16:30:52.069" starttime="20190718 16:30:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:52.070" starttime="20190718 16:30:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:30:52.070" starttime="20190718 16:30:52.070"></status>
</kw>
<msg timestamp="20190718 16:30:52.070" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f'}</msg>
<status status="PASS" endtime="20190718 16:30:52.070" starttime="20190718 16:30:52.066"></status>
</kw>
<msg timestamp="20190718 16:30:52.071" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f'}</msg>
<status status="PASS" endtime="20190718 16:30:52.071" starttime="20190718 16:30:50.250"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:30:52.072" level="INFO">${ret} = d7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f</msg>
<status status="PASS" endtime="20190718 16:30:52.072" starttime="20190718 16:30:52.071"></status>
</kw>
<msg timestamp="20190718 16:30:52.072" level="INFO">${ret} = d7d2016b8eed473e2ae975d466fc33df3d655f62a91c028b2a99491808f4559f</msg>
<status status="PASS" endtime="20190718 16:30:52.072" starttime="20190718 16:30:50.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:30:56.073" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:30:56.073" starttime="20190718 16:30:52.073"></status>
</kw>
<kw name="Get One Token Info" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
</arguments>
<assign>
<var>${tokenInfo}</var>
</assign>
<msg timestamp="20190718 16:30:57.090" level="INFO">${tokenInfo} = {"Symbol":"QZ003","TokenType":1,"Status":1,"CreateAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","TotalSupply":60000,"SupplyAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","AssetID":"QZ003+10ER1A563CGK2DPO2Q...</msg>
<status status="PASS" endtime="20190718 16:30:57.090" starttime="20190718 16:30:56.078"></status>
</kw>
<kw name="Get Token Status" library="createToken">
<arguments>
<arg>${tokenInfo}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190718 16:30:57.091" level="INFO">${status} = 1</msg>
<status status="PASS" endtime="20190718 16:30:57.091" starttime="20190718 16:30:57.091"></status>
</kw>
<kw name="Should Not Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to real numbers.</doc>
<arguments>
<arg>${status}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190718 16:30:57.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190718 16:30:57.092" starttime="20190718 16:30:57.092"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${GeneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${amount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 16:30:58.855" level="INFO">Post data:{"params": ["QZ003+10ER1A563CGK2DPO2Q1", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2000", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'', u'code': -32000}}
Request transferToken failed.
{u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'', u'code': -32000}}</msg>
<msg timestamp="20190718 16:30:58.855" level="INFO">${tokenResult} = None</msg>
<status status="PASS" endtime="20190718 16:30:58.855" starttime="20190718 16:30:57.094"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:31:02.857" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:31:02.857" starttime="20190718 16:30:58.856"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result3}</var>
</assign>
<msg timestamp="20190718 16:31:03.880" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999971990', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:31:03.881" level="INFO">${result3} = {u'PTN': u'999971990', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCX...</msg>
<status status="PASS" endtime="20190718 16:31:03.881" starttime="20190718 16:31:02.861"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result3}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item3}</var>
</assign>
<msg timestamp="20190718 16:31:03.887" level="INFO">${item3} = 4000</msg>
<status status="PASS" endtime="20190718 16:31:03.887" starttime="20190718 16:31:03.885"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item3}</arg>
<arg>${item2}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:03.891" starttime="20190718 16:31:03.889"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${supplyTokenMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${amount}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:31:03.894" level="INFO">${ccList} = [u'supplyToken', u'QZ003', u'2000']</msg>
<status status="PASS" endtime="20190718 16:31:03.894" starttime="20190718 16:31:03.892"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:31:03.910" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'supplyToken', u'QZ003', u'2000'], u'1', 600000000, u'']</msg>
<status status="PASS" endtime="20190718 16:31:03.911" starttime="20190718 16:31:03.908"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:03.921" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:03.921" starttime="20190718 16:31:03.914"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:03.924" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:31:03.925" starttime="20190718 16:31:03.921"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:03.926" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:03.928" starttime="20190718 16:31:03.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:05.697" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["supplyToken", "QZ003", "2000"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:05.697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:05.697" starttime="20190718 16:31:03.929"></status>
</kw>
<msg timestamp="20190718 16:31:05.697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:05.697" starttime="20190718 16:31:03.911"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:05.698" level="INFO">{"jsonrpc":"2.0","id":1,"result":"3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6"}
</msg>
<status status="PASS" endtime="20190718 16:31:05.698" starttime="20190718 16:31:05.698"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:05.699" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6"}</msg>
<status status="PASS" endtime="20190718 16:31:05.699" starttime="20190718 16:31:05.698"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:05.699" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6"} </msg>
<msg timestamp="20190718 16:31:05.699" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:05.699" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6'}</msg>
<status status="PASS" endtime="20190718 16:31:05.699" starttime="20190718 16:31:05.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:05.700" starttime="20190718 16:31:05.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:05.700" starttime="20190718 16:31:05.700"></status>
</kw>
<msg timestamp="20190718 16:31:05.700" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6'}</msg>
<status status="PASS" endtime="20190718 16:31:05.700" starttime="20190718 16:31:05.697"></status>
</kw>
<msg timestamp="20190718 16:31:05.700" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6'}</msg>
<status status="PASS" endtime="20190718 16:31:05.701" starttime="20190718 16:31:03.904"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:31:05.701" level="INFO">${ret} = 3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6</msg>
<status status="PASS" endtime="20190718 16:31:05.701" starttime="20190718 16:31:05.701"></status>
</kw>
<msg timestamp="20190718 16:31:05.701" level="INFO">${ret} = 3cf061b3ca535769869301332b6bddacb1a751036a1db729a0d4829618c139f6</msg>
<status status="PASS" endtime="20190718 16:31:05.701" starttime="20190718 16:31:03.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:31:09.702" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:31:09.702" starttime="20190718 16:31:05.702"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result4}</var>
</assign>
<msg timestamp="20190718 16:31:10.719" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999967989', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:31:10.720" level="INFO">${result4} = {u'PTN': u'999967989', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCX...</msg>
<status status="PASS" endtime="20190718 16:31:10.720" starttime="20190718 16:31:09.705"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result4}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item4}</var>
</assign>
<msg timestamp="20190718 16:31:10.723" level="INFO">${item4} = 4000</msg>
<status status="PASS" endtime="20190718 16:31:10.723" starttime="20190718 16:31:10.722"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item4}</arg>
<arg>${item2}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:10.725" starttime="20190718 16:31:10.724"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${changeSupplyMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:31:10.727" level="INFO">${ccList} = [u'changeSupplyAddr', u'QZ003', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 16:31:10.727" starttime="20190718 16:31:10.726"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:31:10.756" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'changeSupplyAddr', u'QZ003', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRw...</msg>
<status status="PASS" endtime="20190718 16:31:10.756" starttime="20190718 16:31:10.731"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:10.759" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:10.759" starttime="20190718 16:31:10.758"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:10.760" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:31:10.761" starttime="20190718 16:31:10.759"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:10.761" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:10.762" starttime="20190718 16:31:10.761"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:12.517" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["changeSupplyAddr", "QZ003", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:12.518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:12.518" starttime="20190718 16:31:10.763"></status>
</kw>
<msg timestamp="20190718 16:31:12.518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:12.518" starttime="20190718 16:31:10.756"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:12.519" level="INFO">{"jsonrpc":"2.0","id":1,"result":"0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6"}
</msg>
<status status="PASS" endtime="20190718 16:31:12.519" starttime="20190718 16:31:12.518"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:12.519" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6"}</msg>
<status status="PASS" endtime="20190718 16:31:12.519" starttime="20190718 16:31:12.519"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:12.520" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6"} </msg>
<msg timestamp="20190718 16:31:12.520" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:12.520" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6'}</msg>
<status status="PASS" endtime="20190718 16:31:12.520" starttime="20190718 16:31:12.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:12.520" starttime="20190718 16:31:12.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:12.521" starttime="20190718 16:31:12.520"></status>
</kw>
<msg timestamp="20190718 16:31:12.521" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6'}</msg>
<status status="PASS" endtime="20190718 16:31:12.521" starttime="20190718 16:31:12.518"></status>
</kw>
<msg timestamp="20190718 16:31:12.521" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6'}</msg>
<status status="PASS" endtime="20190718 16:31:12.521" starttime="20190718 16:31:10.729"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:31:12.522" level="INFO">${ret} = 0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6</msg>
<status status="PASS" endtime="20190718 16:31:12.522" starttime="20190718 16:31:12.521"></status>
</kw>
<msg timestamp="20190718 16:31:12.522" level="INFO">${ret} = 0cb6d9ab405c39241f42bbcaf1641664f96e251fe4b5a804bb1ec73896c004a6</msg>
<status status="PASS" endtime="20190718 16:31:12.522" starttime="20190718 16:31:10.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:31:16.523" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:31:16.523" starttime="20190718 16:31:12.523"></status>
</kw>
<kw name="Get One Token Info" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
</arguments>
<assign>
<var>${tokenInfo}</var>
</assign>
<msg timestamp="20190718 16:31:17.548" level="INFO">${tokenInfo} = {"Symbol":"QZ003","TokenType":1,"Status":1,"CreateAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","TotalSupply":60000,"SupplyAddr":"P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","AssetID":"QZ003+10ER1A563CGK2DPO2Q...</msg>
<status status="PASS" endtime="20190718 16:31:17.548" starttime="20190718 16:31:16.525"></status>
</kw>
<kw name="Get Token Supply Addr" library="createToken">
<arguments>
<arg>${tokenInfo}</arg>
</arguments>
<assign>
<var>${supplyAddr}</var>
</assign>
<msg timestamp="20190718 16:31:17.554" level="INFO">${supplyAddr} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:31:17.554" starttime="20190718 16:31:17.553"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${supplyAddr}</arg>
<arg>${geneAdd}</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:17.559" starttime="20190718 16:31:17.557"></status>
</kw>
<doc>1.create ok 2.transfer ok 3.frozen ok 4.transfer fail</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 16:31:17.560" critical="yes" starttime="20190718 16:30:34.245"></status>
</test>
<status status="PASS" endtime="20190718 16:31:17.572" starttime="20190718 16:30:34.228"></status>
</suite>
<status status="PASS" endtime="20190718 16:31:17.594" starttime="20190718 16:30:34.224"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken" id="s1-s6" name="zSupplyToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenAllow_SenderPTNToken.robot" id="s1-s6-s1" name="supplyTokenAllow SenderPTNToken">
<test id="s1-s6-s1-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:31:17.614" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:31:17.614" starttime="20190718 16:31:17.614"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:17.615" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:17.615" starttime="20190718 16:31:17.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:17.616" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:31:17.616" starttime="20190718 16:31:17.615"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:17.616" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:17.616" starttime="20190718 16:31:17.616"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:18.624" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:18.624" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:18.624" starttime="20190718 16:31:17.616"></status>
</kw>
<msg timestamp="20190718 16:31:18.625" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:18.625" starttime="20190718 16:31:17.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:18.625" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]}
</msg>
<status status="PASS" endtime="20190718 16:31:18.626" starttime="20190718 16:31:18.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:18.627" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:31:18.627" starttime="20190718 16:31:18.626"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:18.628" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]} </msg>
<msg timestamp="20190718 16:31:18.628" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:18.628" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:31:18.628" starttime="20190718 16:31:18.628"></status>
</kw>
<msg timestamp="20190718 16:31:18.628" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:31:18.628" starttime="20190718 16:31:17.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:31:18.629" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:31:18.629" starttime="20190718 16:31:18.629"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:31:18.630" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:31:18.630" starttime="20190718 16:31:18.630"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:31:18.633" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P1KXuo...</msg>
<status status="PASS" endtime="20190718 16:31:18.633" starttime="20190718 16:31:18.632"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:18.634" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:18.634" starttime="20190718 16:31:18.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:18.634" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:31:18.634" starttime="20190718 16:31:18.634"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:18.635" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:18.635" starttime="20190718 16:31:18.635"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:20.343" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA057", "1", "60000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:20.344" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:20.344" starttime="20190718 16:31:18.635"></status>
</kw>
<msg timestamp="20190718 16:31:20.344" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:20.344" starttime="20190718 16:31:18.633"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:20.345" level="INFO">{"jsonrpc":"2.0","id":1,"result":"d6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9"}
</msg>
<status status="PASS" endtime="20190718 16:31:20.345" starttime="20190718 16:31:20.344"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:20.346" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"d6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9"}</msg>
<status status="PASS" endtime="20190718 16:31:20.346" starttime="20190718 16:31:20.345"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:20.346" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"d6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9"} </msg>
<msg timestamp="20190718 16:31:20.346" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:20.346" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9'}</msg>
<status status="PASS" endtime="20190718 16:31:20.346" starttime="20190718 16:31:20.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:20.347" starttime="20190718 16:31:20.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:20.348" starttime="20190718 16:31:20.347"></status>
</kw>
<msg timestamp="20190718 16:31:20.348" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9'}</msg>
<status status="PASS" endtime="20190718 16:31:20.348" starttime="20190718 16:31:20.344"></status>
</kw>
<msg timestamp="20190718 16:31:20.348" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'd6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9'}</msg>
<status status="PASS" endtime="20190718 16:31:20.348" starttime="20190718 16:31:18.631"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:31:20.349" level="INFO">${ret} = d6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9</msg>
<status status="PASS" endtime="20190718 16:31:20.349" starttime="20190718 16:31:20.348"></status>
</kw>
<msg timestamp="20190718 16:31:20.349" level="INFO">${ret} = d6906b6d7e2505292c89332631af44549dbcc06ce82ed971365e587924da19a9</msg>
<status status="PASS" endtime="20190718 16:31:20.349" starttime="20190718 16:31:18.630"></status>
</kw>
<status status="PASS" endtime="20190718 16:31:20.349" starttime="20190718 16:31:17.613"></status>
</kw>
<kw name="And Request getbalance before create token">
<assign>
<var>${PTN1}</var>
<var>${key}</var>
<var>${coinToken1}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:31:24.350" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:31:24.351" starttime="20190718 16:31:20.350"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 16:31:25.380" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999959987', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA057+10WLBSJPFQ8RL7TJBCJ': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:31:25.380" level="INFO">${result1} = {u'PTN': u'999959987', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA057+10WLBSJPFQ8RL7TJBCJ': u'6000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2...</msg>
<status status="PASS" endtime="20190718 16:31:25.380" starttime="20190718 16:31:24.351"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 16:31:25.382" level="INFO">${key} = QA057+10WLBSJPFQ8RL7TJBCJ</msg>
<status status="PASS" endtime="20190718 16:31:25.383" starttime="20190718 16:31:25.381"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 16:31:25.384" level="INFO">${PTN1} = 999959987</msg>
<status status="PASS" endtime="20190718 16:31:25.385" starttime="20190718 16:31:25.383"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken1}</var>
</assign>
<msg timestamp="20190718 16:31:25.387" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 16:31:25.387" starttime="20190718 16:31:25.385"></status>
</kw>
<msg timestamp="20190718 16:31:25.388" level="INFO">${PTN1} = 999959987</msg>
<msg timestamp="20190718 16:31:25.388" level="INFO">${key} = QA057+10WLBSJPFQ8RL7TJBCJ</msg>
<msg timestamp="20190718 16:31:25.388" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 16:31:25.389" starttime="20190718 16:31:20.350"></status>
</kw>
<kw name="When Create token of vote contract">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${supplyTokenMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${supplyTokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:31:25.393" level="INFO">${ccList} = [u'supplyToken', u'QA057', u'1500000000', u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3']</msg>
<status status="PASS" endtime="20190718 16:31:25.393" starttime="20190718 16:31:25.392"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:31:25.396" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'supplyToken', u'QA057', u'1500000000', u'P1KXuo6QJ8H1uouuMpuA...</msg>
<status status="PASS" endtime="20190718 16:31:25.396" starttime="20190718 16:31:25.396"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:25.398" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:25.398" starttime="20190718 16:31:25.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:25.399" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:31:25.399" starttime="20190718 16:31:25.398"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:25.400" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:25.400" starttime="20190718 16:31:25.399"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:27.185" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["supplyToken", "QA057", "1500000000", "P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:27.186" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:27.186" starttime="20190718 16:31:25.400"></status>
</kw>
<msg timestamp="20190718 16:31:27.186" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:27.186" starttime="20190718 16:31:25.397"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:27.187" level="INFO">{"jsonrpc":"2.0","id":1,"result":"0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58"}
</msg>
<status status="PASS" endtime="20190718 16:31:27.187" starttime="20190718 16:31:27.186"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:27.188" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58"}</msg>
<status status="PASS" endtime="20190718 16:31:27.188" starttime="20190718 16:31:27.187"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:27.188" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58"} </msg>
<msg timestamp="20190718 16:31:27.188" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:27.188" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58'}</msg>
<status status="PASS" endtime="20190718 16:31:27.188" starttime="20190718 16:31:27.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:27.189" starttime="20190718 16:31:27.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 16:31:27.189" starttime="20190718 16:31:27.189"></status>
</kw>
<msg timestamp="20190718 16:31:27.189" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58'}</msg>
<status status="PASS" endtime="20190718 16:31:27.189" starttime="20190718 16:31:27.186"></status>
</kw>
<msg timestamp="20190718 16:31:27.189" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58'}</msg>
<status status="PASS" endtime="20190718 16:31:27.189" starttime="20190718 16:31:25.395"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 16:31:27.190" level="INFO">${ret} = 0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58</msg>
<status status="PASS" endtime="20190718 16:31:27.190" starttime="20190718 16:31:27.190"></status>
</kw>
<msg timestamp="20190718 16:31:27.190" level="INFO">${ret} = 0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58</msg>
<status status="PASS" endtime="20190718 16:31:27.190" starttime="20190718 16:31:25.393"></status>
</kw>
<msg timestamp="20190718 16:31:27.190" level="INFO">${ret} = 0b158204f38ecbbbabf647f2e694fdf5502406c43382d8028076eae043e7bb58</msg>
<status status="PASS" endtime="20190718 16:31:27.190" starttime="20190718 16:31:25.392"></status>
</kw>
<kw name="And Calculate gain of recieverAdd">
<assign>
<var>${GAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${PTNAmount})+int(${PTNPoundage})</arg>
</arguments>
<assign>
<var>${invokeGain}</var>
</assign>
<msg timestamp="20190718 16:31:27.192" level="INFO">${invokeGain} = 4001</msg>
<status status="PASS" endtime="20190718 16:31:27.192" starttime="20190718 16:31:27.191"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${invokeGain}</arg>
</arguments>
<assign>
<var>${GAIN}</var>
</assign>
<msg timestamp="20190718 16:31:27.192" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:31:27.192" starttime="20190718 16:31:27.192"></status>
</kw>
<msg timestamp="20190718 16:31:27.193" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 16:31:27.193" starttime="20190718 16:31:27.191"></status>
</kw>
<kw name="And Request getbalance after create token">
<arguments>
<arg>${geneAdd}</arg>
<arg>${key}</arg>
<arg>${GAIN}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${tokenGAIN}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 16:31:31.194" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 16:31:31.194" starttime="20190718 16:31:27.194"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 16:31:32.217" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'PTN': u'999955986', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA057+10WLBSJPFQ8RL7TJBCJ': u'150006000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A563CGK2DPO2Q1': u'4000', u'QA055+10ODEV2U4OGCXYE9ARK': u'4000', u'QA054+10VJMKVLD024O4L7B9N': u'5998'}</msg>
<msg timestamp="20190718 16:31:32.218" level="INFO">${result2} = {u'PTN': u'999955986', u'QA052+10LHUN3AWH5JSMYD7KB': u'6000', u'QA057+10WLBSJPFQ8RL7TJBCJ': u'150006000', u'QA151+106QA1WR9RVBKHRBB4A': u'6000', u'QA053+10YQ1KAZO966CWP3R9T': u'6000', u'QZ003+10ER1A56...</msg>
<status status="PASS" endtime="20190718 16:31:32.218" starttime="20190718 16:31:31.195"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken2}</var>
</assign>
<msg timestamp="20190718 16:31:32.219" level="INFO">${coinToken2} = 150006000</msg>
<status status="PASS" endtime="20190718 16:31:32.219" starttime="20190718 16:31:32.218"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 16:31:32.221" level="INFO">${PTN2} = 999955986</msg>
<status status="PASS" endtime="20190718 16:31:32.221" starttime="20190718 16:31:32.220"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${coinToken2})-int(${coinToken1})</arg>
</arguments>
<assign>
<var>${tokenGAIN}</var>
</assign>
<msg timestamp="20190718 16:31:32.223" level="INFO">${tokenGAIN} = 150001999</msg>
<status status="PASS" endtime="20190718 16:31:32.223" starttime="20190718 16:31:32.222"></status>
</kw>
<msg timestamp="20190718 16:31:32.224" level="INFO">${PTN2} = 999955986</msg>
<msg timestamp="20190718 16:31:32.224" level="INFO">${tokenGAIN} = 150001999</msg>
<status status="PASS" endtime="20190718 16:31:32.224" starttime="20190718 16:31:27.193"></status>
</kw>
<kw name="Then Assert gain of reciever">
<arguments>
<arg>${PTN1}</arg>
<arg>${PTN2}</arg>
<arg>${tokenGAIN}</arg>
<arg>${GAIN}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${GAIN}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 16:31:32.229" level="INFO">${PTNGAIN} = 999955986</msg>
<status status="PASS" endtime="20190718 16:31:32.229" starttime="20190718 16:31:32.227"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${supplyTokenAmount}*(10**-${tokenDecimal})</arg>
</arguments>
<assign>
<var>${supplyTokenAmount}</var>
</assign>
<msg timestamp="20190718 16:31:32.230" level="INFO">${supplyTokenAmount} = 150000000.0</msg>
<status status="PASS" endtime="20190718 16:31:32.231" starttime="20190718 16:31:32.229"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<msg timestamp="20190718 16:31:32.232" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 16:31:32.232" starttime="20190718 16:31:32.231"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${supplyTokenAmount}</arg>
<arg>${tokenGAIN}</arg>
</arguments>
<msg timestamp="20190718 16:31:32.233" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'int'&gt;</msg>
<msg timestamp="20190718 16:31:32.234" level="FAIL">150000000.0 != 150001999.0</msg>
<status status="FAIL" endtime="20190718 16:31:32.234" starttime="20190718 16:31:32.232"></status>
</kw>
<status status="FAIL" endtime="20190718 16:31:32.235" starttime="20190718 16:31:32.226"></status>
</kw>
<doc>Verify Sender's PTN and Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 16:31:32.237" critical="yes" starttime="20190718 16:31:17.611">150000000.0 != 150001999.0</status>
</test>
<status status="FAIL" endtime="20190718 16:31:32.244" starttime="20190718 16:31:17.601"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenForbid_SenderPTNToken.robot" id="s1-s6-s2" name="supplyTokenForbid SenderPTNToken">
<test id="s1-s6-s2-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 16:31:32.294" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 16:31:32.294" starttime="20190718 16:31:32.293"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:32.297" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:32.297" starttime="20190718 16:31:32.296"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:32.300" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 16:31:32.300" starttime="20190718 16:31:32.298"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:32.301" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:32.302" starttime="20190718 16:31:32.300"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:33.319" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:33.320" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:33.320" starttime="20190718 16:31:32.302"></status>
</kw>
<msg timestamp="20190718 16:31:33.320" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:33.320" starttime="20190718 16:31:32.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 16:31:33.321" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]}
</msg>
<status status="PASS" endtime="20190718 16:31:33.322" starttime="20190718 16:31:33.321"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:33.325" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 16:31:33.325" starttime="20190718 16:31:33.322"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:33.326" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX"]} </msg>
<msg timestamp="20190718 16:31:33.326" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 16:31:33.326" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 16:31:33.327" starttime="20190718 16:31:33.325"></status>
</kw>
<msg timestamp="20190718 16:31:33.327" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:31:33.327" starttime="20190718 16:31:32.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 16:31:33.329" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 16:31:33.329" starttime="20190718 16:31:33.328"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 16:31:33.330" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA058', u'1', u'60000']</msg>
<status status="PASS" endtime="20190718 16:31:33.330" starttime="20190718 16:31:33.329"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 16:31:33.336" level="INFO">${ccinvokeList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA058', u'1', u'60000'], u'1', 6...</msg>
<status status="PASS" endtime="20190718 16:31:33.336" starttime="20190718 16:31:33.335"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 16:31:33.338" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 16:31:33.339" starttime="20190718 16:31:33.337"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 16:31:33.340" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 16:31:33.341" starttime="20190718 16:31:33.339"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 16:31:33.341" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 16:31:33.342" starttime="20190718 16:31:33.341"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 16:31:35.125" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA058", "1", "60000"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 16:31:35.126" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:35.126" starttime="20190718 16:31:33.342"></status>
</kw>
<msg timestamp="20190718 16:31:35.126" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 16:31:35.126" starttime="20190718 16:31:33.336"></status>
</kw>
<kw name="resultToJson">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 16:31:35.126" level="FAIL">Keyword 'resultToJson' expected 0 arguments, got 1.</msg>
<status status="FAIL" endtime="20190718 16:31:35.126" starttime="20190718 16:31:35.126"></status>
</kw>
<status status="FAIL" endtime="20190718 16:31:35.126" starttime="20190718 16:31:33.333"></status>
</kw>
<status status="FAIL" endtime="20190718 16:31:35.126" starttime="20190718 16:31:33.331"></status>
</kw>
<status status="FAIL" endtime="20190718 16:31:35.127" starttime="20190718 16:31:32.291"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 16:31:35.127" critical="yes" starttime="20190718 16:31:32.288">Keyword 'resultToJson' expected 0 arguments, got 1.</status>
</test>
<status status="FAIL" endtime="20190718 16:31:35.132" starttime="20190718 16:31:32.253"></status>
</suite>
<status status="FAIL" endtime="20190718 16:31:35.135" starttime="20190718 16:31:17.598"></status>
</suite>
<status status="FAIL" endtime="20190718 16:31:35.141" starttime="20190718 16:29:28.709"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="7">Critical Tests</stat>
<stat fail="3" pass="7">All Tests</stat>
</total>
<tag>
<stat fail="3" pass="7">normal</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="crt20Contract" pass="7">crt20Contract</stat>
<stat fail="0" id="s1-s1" name="ccinvokePass" pass="3">crt20Contract.ccinvokePass</stat>
<stat fail="0" id="s1-s1-s1" name="ccinvoketxPass RecieverPTN" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass RecieverPTN</stat>
<stat fail="0" id="s1-s1-s2" name="ccinvoketxPass SenderPTN" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass SenderPTN</stat>
<stat fail="0" id="s1-s1-s3" name="ccinvoketxPass SenderTokenId" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass SenderTokenId</stat>
<stat fail="0" id="s1-s2" name="Ccquery" pass="1">crt20Contract.Ccquery</stat>
<stat fail="0" id="s1-s2-s1" name="ccquery Normal" pass="1">crt20Contract.Ccquery.ccquery Normal</stat>
<stat fail="0" id="s1-s3" name="transferToken" pass="2">crt20Contract.transferToken</stat>
<stat fail="0" id="s1-s3-s1" name="transferToken recieverToken" pass="1">crt20Contract.transferToken.transferToken recieverToken</stat>
<stat fail="0" id="s1-s3-s2" name="transferToken senderTokenPTN" pass="1">crt20Contract.transferToken.transferToken senderTokenPTN</stat>
<stat fail="1" id="s1-s4" name="zChangeSupply" pass="0">crt20Contract.zChangeSupply</stat>
<stat fail="1" id="s1-s4-s1" name="ccinvoketxPass SenderPTN" pass="0">crt20Contract.zChangeSupply.ccinvoketxPass SenderPTN</stat>
<stat fail="0" id="s1-s5" name="zFrozToken" pass="1">crt20Contract.zFrozToken</stat>
<stat fail="0" id="s1-s5-s1" name="transferToken frozen senderToken" pass="1">crt20Contract.zFrozToken.transferToken frozen senderToken</stat>
<stat fail="2" id="s1-s6" name="zSupplyToken" pass="0">crt20Contract.zSupplyToken</stat>
<stat fail="1" id="s1-s6-s1" name="supplyTokenAllow SenderPTNToken" pass="0">crt20Contract.zSupplyToken.supplyTokenAllow SenderPTNToken</stat>
<stat fail="1" id="s1-s6-s2" name="supplyTokenForbid SenderPTNToken" pass="0">crt20Contract.zSupplyToken.supplyTokenForbid SenderPTNToken</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
