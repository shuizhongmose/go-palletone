<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190718 15:15:39.722" generator="Robot 3.1.2 (Python 2.7.15 on win32)">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract" id="s1" name="crt20Contract">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass" id="s1-s1" name="ccinvokePass">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_RecieverPTN.robot" id="s1-s1-s1" name="ccinvoketxPass RecieverPTN">
<kw type="setup" name="getlistAccounts" library="utilDefined">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:15:39.986" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:15:39.986" starttime="20190718 15:15:39.986"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:39.988" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:39.988" starttime="20190718 15:15:39.987"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:39.988" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:39.988" starttime="20190718 15:15:39.988"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:39.989" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:39.989" starttime="20190718 15:15:39.988"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:41.010" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:41.010" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:41.010" starttime="20190718 15:15:39.989"></status>
</kw>
<msg timestamp="20190718 15:15:41.011" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:41.011" starttime="20190718 15:15:39.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:41.013" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:15:41.013" starttime="20190718 15:15:41.012"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:41.050" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:15:41.051" starttime="20190718 15:15:41.014"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:41.052" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:15:41.052" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:41.052" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:15:41.052" starttime="20190718 15:15:41.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${listAccounts}</arg>
<arg>${jsonRes['result']}</arg>
</arguments>
<msg timestamp="20190718 15:15:41.055" level="INFO">${listAccounts} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari', u'P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv', ...</msg>
<status status="PASS" endtime="20190718 15:15:41.055" starttime="20190718 15:15:41.052"></status>
</kw>
<status status="PASS" endtime="20190718 15:15:41.055" starttime="20190718 15:15:39.986"></status>
</kw>
<test id="s1-s1-s1-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:15:41.058" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 15:15:41.058" starttime="20190718 15:15:41.058"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:41.060" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:41.060" starttime="20190718 15:15:41.060"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:41.061" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:41.061" starttime="20190718 15:15:41.060"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:41.062" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:41.062" starttime="20190718 15:15:41.061"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:42.074" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:42.075" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:42.075" starttime="20190718 15:15:41.062"></status>
</kw>
<msg timestamp="20190718 15:15:42.075" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:42.075" starttime="20190718 15:15:41.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:42.077" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"152000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}
</msg>
<status status="PASS" endtime="20190718 15:15:42.077" starttime="20190718 15:15:42.076"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:42.080" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"152000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}</msg>
<status status="PASS" endtime="20190718 15:15:42.080" starttime="20190718 15:15:42.077"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:42.081" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"152000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}} </msg>
<msg timestamp="20190718 15:15:42.081" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:42.081" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'152000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:42.082" starttime="20190718 15:15:42.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:42.083" starttime="20190718 15:15:42.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:42.085" starttime="20190718 15:15:42.084"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:15:42.086" level="INFO">${strResult} = {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'152000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}</msg>
<status status="PASS" endtime="20190718 15:15:42.087" starttime="20190718 15:15:42.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:42.089" starttime="20190718 15:15:42.089"></status>
</kw>
<msg timestamp="20190718 15:15:42.090" level="INFO">${PTN} = 152000</msg>
<status status="PASS" endtime="20190718 15:15:42.090" starttime="20190718 15:15:42.087"></status>
</kw>
<msg timestamp="20190718 15:15:42.090" level="INFO">${PTN} = 152000</msg>
<msg timestamp="20190718 15:15:42.090" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'152000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:42.090" starttime="20190718 15:15:41.058"></status>
</kw>
<msg timestamp="20190718 15:15:42.091" level="INFO">${PTN1} = 152000</msg>
<msg timestamp="20190718 15:15:42.091" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'152000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:42.091" starttime="20190718 15:15:41.057"></status>
</kw>
<msg timestamp="20190718 15:15:42.092" level="INFO">${PTN1} = 152000</msg>
<status status="PASS" endtime="20190718 15:15:42.092" starttime="20190718 15:15:41.057"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${listAccounts[0]}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:15:42.096" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA151', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:15:42.097" starttime="20190718 15:15:42.094"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${listAccounts[0]}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:15:42.103" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA151', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:15:42.103" starttime="20190718 15:15:42.101"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:42.104" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:42.104" starttime="20190718 15:15:42.104"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:42.105" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:15:42.105" starttime="20190718 15:15:42.104"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:42.106" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:42.106" starttime="20190718 15:15:42.106"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:43.925" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA151", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:43.925" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:43.925" starttime="20190718 15:15:42.107"></status>
</kw>
<msg timestamp="20190718 15:15:43.926" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:43.926" starttime="20190718 15:15:42.103"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:43.927" level="INFO">{"jsonrpc":"2.0","id":1,"result":"5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd"}
</msg>
<status status="PASS" endtime="20190718 15:15:43.927" starttime="20190718 15:15:43.926"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:43.928" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd"}</msg>
<status status="PASS" endtime="20190718 15:15:43.928" starttime="20190718 15:15:43.927"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:43.928" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd"} </msg>
<msg timestamp="20190718 15:15:43.928" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:43.928" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd'}</msg>
<status status="PASS" endtime="20190718 15:15:43.928" starttime="20190718 15:15:43.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:43.928" starttime="20190718 15:15:43.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:43.929" starttime="20190718 15:15:43.929"></status>
</kw>
<msg timestamp="20190718 15:15:43.929" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd'}</msg>
<status status="PASS" endtime="20190718 15:15:43.929" starttime="20190718 15:15:43.926"></status>
</kw>
<msg timestamp="20190718 15:15:43.929" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd'}</msg>
<status status="PASS" endtime="20190718 15:15:43.929" starttime="20190718 15:15:42.100"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:15:43.930" level="INFO">${ret} = 5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd</msg>
<status status="PASS" endtime="20190718 15:15:43.930" starttime="20190718 15:15:43.929"></status>
</kw>
<msg timestamp="20190718 15:15:43.930" level="INFO">${ret} = 5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd</msg>
<status status="PASS" endtime="20190718 15:15:43.930" starttime="20190718 15:15:42.097"></status>
</kw>
<msg timestamp="20190718 15:15:43.930" level="INFO">${ret} = 5f37c6f9f24d3a457750cb5e7290c3ed9fa3ae530d651bd2d5d453df194186dd</msg>
<status status="PASS" endtime="20190718 15:15:43.930" starttime="20190718 15:15:42.093"></status>
</kw>
<kw name="And Calculate gain">
<arguments>
<arg>${PTN1}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNAmount}</arg>
</arguments>
<assign>
<var>${gain1}</var>
</assign>
<msg timestamp="20190718 15:15:43.932" level="INFO">${gain1} = 4000</msg>
<status status="PASS" endtime="20190718 15:15:43.932" starttime="20190718 15:15:43.931"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')+decimal.Decimal('${gain1}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 15:15:43.932" level="INFO">${PTNGAIN} = 156000</msg>
<status status="PASS" endtime="20190718 15:15:43.932" starttime="20190718 15:15:43.932"></status>
</kw>
<msg timestamp="20190718 15:15:43.933" level="INFO">${PTNGAIN} = 156000</msg>
<status status="PASS" endtime="20190718 15:15:43.933" starttime="20190718 15:15:43.931"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${PTN2}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:15:47.934" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:15:47.934" starttime="20190718 15:15:43.934"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:15:47.937" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 15:15:47.937" starttime="20190718 15:15:47.936"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:47.940" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:47.940" starttime="20190718 15:15:47.939"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:47.941" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:47.942" starttime="20190718 15:15:47.940"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:47.942" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:47.943" starttime="20190718 15:15:47.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:48.965" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:48.966" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:48.966" starttime="20190718 15:15:47.944"></status>
</kw>
<msg timestamp="20190718 15:15:48.967" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:48.967" starttime="20190718 15:15:47.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:48.968" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"156000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}
</msg>
<status status="PASS" endtime="20190718 15:15:48.969" starttime="20190718 15:15:48.967"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:48.973" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"156000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}</msg>
<status status="PASS" endtime="20190718 15:15:48.973" starttime="20190718 15:15:48.969"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:48.974" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"156000","QA054+10OECAYLOAHD1KOCL0O":"4","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}} </msg>
<msg timestamp="20190718 15:15:48.974" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:48.975" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'156000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:48.975" starttime="20190718 15:15:48.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:48.977" starttime="20190718 15:15:48.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:48.979" starttime="20190718 15:15:48.977"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:15:48.981" level="INFO">${strResult} = {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'156000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}</msg>
<status status="PASS" endtime="20190718 15:15:48.982" starttime="20190718 15:15:48.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:48.985" starttime="20190718 15:15:48.984"></status>
</kw>
<msg timestamp="20190718 15:15:48.985" level="INFO">${PTN} = 156000</msg>
<status status="PASS" endtime="20190718 15:15:48.985" starttime="20190718 15:15:48.982"></status>
</kw>
<msg timestamp="20190718 15:15:48.986" level="INFO">${PTN} = 156000</msg>
<msg timestamp="20190718 15:15:48.986" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'156000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:48.986" starttime="20190718 15:15:47.935"></status>
</kw>
<msg timestamp="20190718 15:15:48.987" level="INFO">${PTN2} = 156000</msg>
<msg timestamp="20190718 15:15:48.987" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'156000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'4'}}</msg>
<status status="PASS" endtime="20190718 15:15:48.987" starttime="20190718 15:15:47.934"></status>
</kw>
<msg timestamp="20190718 15:15:48.988" level="INFO">${PTN2} = 156000</msg>
<status status="PASS" endtime="20190718 15:15:48.988" starttime="20190718 15:15:43.933"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<msg timestamp="20190718 15:15:48.993" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 15:15:48.993" starttime="20190718 15:15:48.991"></status>
</kw>
<status status="PASS" endtime="20190718 15:15:48.993" starttime="20190718 15:15:48.990"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 15:15:48.995" critical="yes" starttime="20190718 15:15:41.055"></status>
</test>
<status status="PASS" endtime="20190718 15:15:49.003" starttime="20190718 15:15:39.751"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_SenderPTN.robot" id="s1-s1-s2" name="ccinvoketxPass SenderPTN">
<test id="s1-s1-s2-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:15:49.019" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:15:49.020" starttime="20190718 15:15:49.019"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:49.020" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:49.020" starttime="20190718 15:15:49.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:49.021" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:49.021" starttime="20190718 15:15:49.020"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:49.021" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:49.022" starttime="20190718 15:15:49.021"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:50.027" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:50.027" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:50.027" starttime="20190718 15:15:49.022"></status>
</kw>
<msg timestamp="20190718 15:15:50.028" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:50.028" starttime="20190718 15:15:49.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:50.028" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:15:50.028" starttime="20190718 15:15:50.028"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:50.030" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:15:50.030" starttime="20190718 15:15:50.028"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:50.030" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:15:50.030" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:50.030" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:15:50.030" starttime="20190718 15:15:50.030"></status>
</kw>
<msg timestamp="20190718 15:15:50.031" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:15:50.031" starttime="20190718 15:15:49.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:15:50.031" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:15:50.031" starttime="20190718 15:15:50.031"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:15:51.044" level="INFO">[u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari', u'P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv', u'P16dnohTwkNYSX374eDg64z2h6StioE5vAS', u'P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz', u'P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx', u'P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG', u'P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1', u'P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF']</msg>
<status status="PASS" endtime="20190718 15:15:51.044" starttime="20190718 15:15:50.031"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:15:51.051" level="INFO">${address} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:15:51.051" starttime="20190718 15:15:51.050"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:51.056" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:51.057" starttime="20190718 15:15:51.054"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:51.060" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:51.060" starttime="20190718 15:15:51.057"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:51.062" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:51.063" starttime="20190718 15:15:51.061"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:52.091" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:52.091" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:52.091" starttime="20190718 15:15:51.064"></status>
</kw>
<msg timestamp="20190718 15:15:52.092" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:52.092" starttime="20190718 15:15:51.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:52.094" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999843956","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}}
</msg>
<status status="PASS" endtime="20190718 15:15:52.095" starttime="20190718 15:15:52.093"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:52.115" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":...</msg>
<status status="PASS" endtime="20190718 15:15:52.115" starttime="20190718 15:15:52.096"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:52.117" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999843956","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}} </msg>
<msg timestamp="20190718 15:15:52.117" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:52.118" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:52.118" starttime="20190718 15:15:52.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:52.120" starttime="20190718 15:15:52.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:52.121" starttime="20190718 15:15:52.120"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:15:52.123" level="INFO">${strResult} = {u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QA084+0...</msg>
<status status="PASS" endtime="20190718 15:15:52.123" starttime="20190718 15:15:52.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:52.125" starttime="20190718 15:15:52.124"></status>
</kw>
<msg timestamp="20190718 15:15:52.125" level="INFO">${PTN} = 999843956</msg>
<status status="PASS" endtime="20190718 15:15:52.125" starttime="20190718 15:15:52.123"></status>
</kw>
<msg timestamp="20190718 15:15:52.125" level="INFO">${PTN} = 999843956</msg>
<msg timestamp="20190718 15:15:52.125" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:52.125" starttime="20190718 15:15:51.047"></status>
</kw>
<msg timestamp="20190718 15:15:52.126" level="INFO">${PTN1} = 999843956</msg>
<msg timestamp="20190718 15:15:52.126" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:52.126" starttime="20190718 15:15:51.045"></status>
</kw>
<msg timestamp="20190718 15:15:52.126" level="INFO">${PTN1} = 999843956</msg>
<status status="PASS" endtime="20190718 15:15:52.126" starttime="20190718 15:15:49.019"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:15:52.128" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA052', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:15:52.129" starttime="20190718 15:15:52.128"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:15:52.131" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA052', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:15:52.131" starttime="20190718 15:15:52.130"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:52.132" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:52.132" starttime="20190718 15:15:52.132"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:52.133" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:15:52.133" starttime="20190718 15:15:52.133"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:52.134" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:52.134" starttime="20190718 15:15:52.133"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:53.880" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA052", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:53.880" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:53.880" starttime="20190718 15:15:52.135"></status>
</kw>
<msg timestamp="20190718 15:15:53.881" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:53.881" starttime="20190718 15:15:52.131"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:53.881" level="INFO">{"jsonrpc":"2.0","id":1,"result":"b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb"}
</msg>
<status status="PASS" endtime="20190718 15:15:53.881" starttime="20190718 15:15:53.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:53.882" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb"}</msg>
<status status="PASS" endtime="20190718 15:15:53.882" starttime="20190718 15:15:53.882"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:53.883" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb"} </msg>
<msg timestamp="20190718 15:15:53.883" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:53.883" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb'}</msg>
<status status="PASS" endtime="20190718 15:15:53.883" starttime="20190718 15:15:53.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:53.883" starttime="20190718 15:15:53.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:53.884" starttime="20190718 15:15:53.883"></status>
</kw>
<msg timestamp="20190718 15:15:53.884" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb'}</msg>
<status status="PASS" endtime="20190718 15:15:53.884" starttime="20190718 15:15:53.881"></status>
</kw>
<msg timestamp="20190718 15:15:53.884" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb'}</msg>
<status status="PASS" endtime="20190718 15:15:53.884" starttime="20190718 15:15:52.130"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:15:53.884" level="INFO">${ret} = b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb</msg>
<status status="PASS" endtime="20190718 15:15:53.885" starttime="20190718 15:15:53.884"></status>
</kw>
<msg timestamp="20190718 15:15:53.885" level="INFO">${ret} = b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb</msg>
<status status="PASS" endtime="20190718 15:15:53.885" starttime="20190718 15:15:52.129"></status>
</kw>
<msg timestamp="20190718 15:15:53.885" level="INFO">${ret} = b340a19fc5a75ba48199c24b8dd57133e26d7167815ffc74feb725f625a37ccb</msg>
<status status="PASS" endtime="20190718 15:15:53.885" starttime="20190718 15:15:52.127"></status>
</kw>
<kw name="And Calculate gain">
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PTNAmount}+${PTNPoundage}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 15:15:53.886" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:15:53.886" starttime="20190718 15:15:53.886"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNGAIN}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 15:15:53.887" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:15:53.887" starttime="20190718 15:15:53.886"></status>
</kw>
<msg timestamp="20190718 15:15:53.887" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:15:53.887" starttime="20190718 15:15:53.886"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${PTN2}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:15:57.889" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:15:57.889" starttime="20190718 15:15:53.888"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:15:57.895" level="INFO">${address} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:15:57.895" starttime="20190718 15:15:57.894"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:57.899" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:57.900" starttime="20190718 15:15:57.898"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:57.902" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:57.903" starttime="20190718 15:15:57.900"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:57.904" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:57.909" starttime="20190718 15:15:57.903"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:15:58.931" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:15:58.931" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:58.932" starttime="20190718 15:15:57.910"></status>
</kw>
<msg timestamp="20190718 15:15:58.932" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:15:58.933" starttime="20190718 15:15:57.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:15:58.934" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999839955","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}}
</msg>
<status status="PASS" endtime="20190718 15:15:58.935" starttime="20190718 15:15:58.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:58.957" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":...</msg>
<status status="PASS" endtime="20190718 15:15:58.957" starttime="20190718 15:15:58.936"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:15:58.958" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999839955","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}} </msg>
<msg timestamp="20190718 15:15:58.959" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:15:58.959" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:58.959" starttime="20190718 15:15:58.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:58.961" starttime="20190718 15:15:58.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:58.962" starttime="20190718 15:15:58.961"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:15:58.963" level="INFO">${strResult} = {u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QA084+0...</msg>
<status status="PASS" endtime="20190718 15:15:58.963" starttime="20190718 15:15:58.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:15:58.965" starttime="20190718 15:15:58.965"></status>
</kw>
<msg timestamp="20190718 15:15:58.965" level="INFO">${PTN} = 999839955</msg>
<status status="PASS" endtime="20190718 15:15:58.965" starttime="20190718 15:15:58.964"></status>
</kw>
<msg timestamp="20190718 15:15:58.966" level="INFO">${PTN} = 999839955</msg>
<msg timestamp="20190718 15:15:58.966" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:58.966" starttime="20190718 15:15:57.892"></status>
</kw>
<msg timestamp="20190718 15:15:58.966" level="INFO">${PTN2} = 999839955</msg>
<msg timestamp="20190718 15:15:58.967" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:15:58.967" starttime="20190718 15:15:57.890"></status>
</kw>
<msg timestamp="20190718 15:15:58.967" level="INFO">${PTN2} = 999839955</msg>
<status status="PASS" endtime="20190718 15:15:58.967" starttime="20190718 15:15:53.888"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${PTN1}</arg>
<arg>${PTN2}</arg>
<arg>${PTNGAIN}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNGAIN}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${GAIN}</var>
</assign>
<msg timestamp="20190718 15:15:58.969" level="INFO">${GAIN} = 999839955</msg>
<status status="PASS" endtime="20190718 15:15:58.969" starttime="20190718 15:15:58.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PTN2}</arg>
<arg>${GAIN}</arg>
</arguments>
<msg timestamp="20190718 15:15:58.970" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20190718 15:15:58.970" starttime="20190718 15:15:58.969"></status>
</kw>
<status status="PASS" endtime="20190718 15:15:58.970" starttime="20190718 15:15:58.968"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 15:15:58.971" critical="yes" starttime="20190718 15:15:49.016"></status>
</test>
<status status="PASS" endtime="20190718 15:15:58.973" starttime="20190718 15:15:49.006"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccinvokePass\ccinvoketxPass_SenderTokenId.robot" id="s1-s1-s3" name="ccinvoketxPass SenderTokenId">
<test id="s1-s1-s3-t1" name="Scenario: 20Contract - Create Token">
<kw name="Given Request getbalance before create token">
<assign>
<var>${PTN1}</var>
</assign>
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:15:58.989" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:15:58.989" starttime="20190718 15:15:58.989"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:15:58.990" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:15:58.990" starttime="20190718 15:15:58.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:15:58.991" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:15:58.991" starttime="20190718 15:15:58.990"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:15:58.991" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:15:58.991" starttime="20190718 15:15:58.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:00.005" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:00.005" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:00.006" starttime="20190718 15:15:58.991"></status>
</kw>
<msg timestamp="20190718 15:16:00.007" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:00.007" starttime="20190718 15:15:58.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:00.010" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:16:00.011" starttime="20190718 15:16:00.009"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:00.024" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:16:00.025" starttime="20190718 15:16:00.011"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:00.028" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:16:00.029" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:00.029" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:16:00.030" starttime="20190718 15:16:00.026"></status>
</kw>
<msg timestamp="20190718 15:16:00.032" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:00.032" starttime="20190718 15:15:58.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:00.036" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:00.036" starttime="20190718 15:16:00.033"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:01.056" level="INFO">[u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari', u'P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv', u'P16dnohTwkNYSX374eDg64z2h6StioE5vAS', u'P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz', u'P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx', u'P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG', u'P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1', u'P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF']</msg>
<status status="PASS" endtime="20190718 15:16:01.056" starttime="20190718 15:16:00.037"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${result}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:16:01.062" level="INFO">${address} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:01.062" starttime="20190718 15:16:01.061"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:01.065" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:01.065" starttime="20190718 15:16:01.063"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:01.068" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:01.068" starttime="20190718 15:16:01.066"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:01.070" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:01.071" starttime="20190718 15:16:01.069"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:02.099" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:02.099" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:02.099" starttime="20190718 15:16:01.071"></status>
</kw>
<msg timestamp="20190718 15:16:02.100" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:02.100" starttime="20190718 15:16:01.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:02.102" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999839955","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}}
</msg>
<status status="PASS" endtime="20190718 15:16:02.102" starttime="20190718 15:16:02.101"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:02.117" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":...</msg>
<status status="PASS" endtime="20190718 15:16:02.117" starttime="20190718 15:16:02.103"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:02.118" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999839955","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}} </msg>
<msg timestamp="20190718 15:16:02.118" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:02.119" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:02.119" starttime="20190718 15:16:02.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:02.120" starttime="20190718 15:16:02.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:02.121" starttime="20190718 15:16:02.120"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:16:02.122" level="INFO">${strResult} = {u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QA084+0...</msg>
<status status="PASS" endtime="20190718 15:16:02.123" starttime="20190718 15:16:02.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:02.125" starttime="20190718 15:16:02.124"></status>
</kw>
<msg timestamp="20190718 15:16:02.125" level="INFO">${PTN} = 999839955</msg>
<status status="PASS" endtime="20190718 15:16:02.125" starttime="20190718 15:16:02.123"></status>
</kw>
<msg timestamp="20190718 15:16:02.126" level="INFO">${PTN} = 999839955</msg>
<msg timestamp="20190718 15:16:02.126" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:02.126" starttime="20190718 15:16:01.059"></status>
</kw>
<msg timestamp="20190718 15:16:02.127" level="INFO">${PTN1} = 999839955</msg>
<msg timestamp="20190718 15:16:02.127" level="INFO">${result} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:02.127" starttime="20190718 15:16:01.057"></status>
</kw>
<msg timestamp="20190718 15:16:02.127" level="INFO">${PTN1} = 999839955</msg>
<status status="PASS" endtime="20190718 15:16:02.127" starttime="20190718 15:15:58.988"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:16:02.130" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA053', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:02.130" starttime="20190718 15:16:02.129"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:16:02.134" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA053', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:16:02.135" starttime="20190718 15:16:02.133"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:02.136" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:02.136" starttime="20190718 15:16:02.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:02.138" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:16:02.138" starttime="20190718 15:16:02.137"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:02.139" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:02.140" starttime="20190718 15:16:02.138"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:03.885" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA053", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:03.886" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:03.886" starttime="20190718 15:16:02.140"></status>
</kw>
<msg timestamp="20190718 15:16:03.886" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:03.886" starttime="20190718 15:16:02.135"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:03.887" level="INFO">{"jsonrpc":"2.0","id":1,"result":"88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d"}
</msg>
<status status="PASS" endtime="20190718 15:16:03.888" starttime="20190718 15:16:03.887"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:03.889" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d"}</msg>
<status status="PASS" endtime="20190718 15:16:03.889" starttime="20190718 15:16:03.888"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:03.890" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d"} </msg>
<msg timestamp="20190718 15:16:03.890" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:03.890" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d'}</msg>
<status status="PASS" endtime="20190718 15:16:03.890" starttime="20190718 15:16:03.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:03.890" starttime="20190718 15:16:03.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:03.891" starttime="20190718 15:16:03.890"></status>
</kw>
<msg timestamp="20190718 15:16:03.891" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d'}</msg>
<status status="PASS" endtime="20190718 15:16:03.891" starttime="20190718 15:16:03.886"></status>
</kw>
<msg timestamp="20190718 15:16:03.891" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d'}</msg>
<status status="PASS" endtime="20190718 15:16:03.891" starttime="20190718 15:16:02.132"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:16:03.891" level="INFO">${ret} = 88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d</msg>
<status status="PASS" endtime="20190718 15:16:03.891" starttime="20190718 15:16:03.891"></status>
</kw>
<msg timestamp="20190718 15:16:03.892" level="INFO">${ret} = 88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d</msg>
<status status="PASS" endtime="20190718 15:16:03.892" starttime="20190718 15:16:02.130"></status>
</kw>
<msg timestamp="20190718 15:16:03.892" level="INFO">${ret} = 88bbaf30a2caece59d2b5a0ed4e510e0bc78dd5d5e306ec48dc9d4fb0b45af0d</msg>
<status status="PASS" endtime="20190718 15:16:03.892" starttime="20190718 15:16:02.128"></status>
</kw>
<kw name="And Calculate gain">
<assign>
<var>${PTNGAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PTNAmount}+${PTNPoundage}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 15:16:03.893" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:16:03.893" starttime="20190718 15:16:03.893"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${PTNGAIN}</arg>
</arguments>
<assign>
<var>${PTNGAIN}</var>
</assign>
<msg timestamp="20190718 15:16:03.894" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:16:03.894" starttime="20190718 15:16:03.893"></status>
</kw>
<msg timestamp="20190718 15:16:03.894" level="INFO">${PTNGAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:16:03.894" starttime="20190718 15:16:03.893"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${count}</var>
<var>${key}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:07.895" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:07.895" starttime="20190718 15:16:03.895"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:16:07.900" level="INFO">${address} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:07.900" starttime="20190718 15:16:07.899"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:07.903" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:07.903" starttime="20190718 15:16:07.902"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:07.906" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:07.906" starttime="20190718 15:16:07.904"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:07.907" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:07.909" starttime="20190718 15:16:07.906"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:08.937" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:08.937" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:08.938" starttime="20190718 15:16:07.909"></status>
</kw>
<msg timestamp="20190718 15:16:08.938" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:08.938" starttime="20190718 15:16:07.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:08.940" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999835954","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}}
</msg>
<status status="PASS" endtime="20190718 15:16:08.941" starttime="20190718 15:16:08.939"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:08.956" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":...</msg>
<status status="PASS" endtime="20190718 15:16:08.956" starttime="20190718 15:16:08.941"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:08.957" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999835954","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}} </msg>
<msg timestamp="20190718 15:16:08.957" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:08.957" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:08.957" starttime="20190718 15:16:08.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:08.958" starttime="20190718 15:16:08.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:08.959" starttime="20190718 15:16:08.958"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:16:08.960" level="INFO">${strResult} = {u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QA084+0...</msg>
<status status="PASS" endtime="20190718 15:16:08.960" starttime="20190718 15:16:08.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:08.961" starttime="20190718 15:16:08.961"></status>
</kw>
<msg timestamp="20190718 15:16:08.961" level="INFO">${PTN} = 999835954</msg>
<status status="PASS" endtime="20190718 15:16:08.961" starttime="20190718 15:16:08.960"></status>
</kw>
<msg timestamp="20190718 15:16:08.961" level="INFO">${PTN} = 999835954</msg>
<msg timestamp="20190718 15:16:08.962" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:08.962" starttime="20190718 15:16:07.897"></status>
</kw>
<msg timestamp="20190718 15:16:08.962" level="INFO">${PTN2} = 999835954</msg>
<msg timestamp="20190718 15:16:08.962" level="INFO">${result2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:08.962" starttime="20190718 15:16:07.896"></status>
</kw>
<kw type="for" name="${key} IN [ ${result2.keys} ]">
<kw type="foritem" name="${key} = &lt;built-in method keys of dict object at 0x00000000046DA6A8&gt;">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20190718 15:16:08.963" level="INFO">&lt;built-in method keys of dict object at 0x00000000046DA6A8&gt;</msg>
<status status="PASS" endtime="20190718 15:16:08.963" starttime="20190718 15:16:08.962"></status>
</kw>
<status status="PASS" endtime="20190718 15:16:08.963" starttime="20190718 15:16:08.962"></status>
</kw>
<status status="PASS" endtime="20190718 15:16:08.963" starttime="20190718 15:16:08.962"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(pow(10,-${tokenDecimal})*${tokenAmount})</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190718 15:16:08.963" level="INFO">${count} = 6000</msg>
<status status="PASS" endtime="20190718 15:16:08.963" starttime="20190718 15:16:08.963"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result2['result']}</arg>
</arguments>
<assign>
<var>${item}</var>
</assign>
<msg timestamp="20190718 15:16:08.964" level="INFO">${item} = QA053+103TBGLD82JVI7M4YIB</msg>
<status status="PASS" endtime="20190718 15:16:08.964" starttime="20190718 15:16:08.963"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2['result']}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:16:08.964" level="INFO">${key} = 6000</msg>
<status status="PASS" endtime="20190718 15:16:08.964" starttime="20190718 15:16:08.964"></status>
</kw>
<msg timestamp="20190718 15:16:08.965" level="INFO">${count} = 6000</msg>
<msg timestamp="20190718 15:16:08.965" level="INFO">${key} = 6000</msg>
<status status="PASS" endtime="20190718 15:16:08.965" starttime="20190718 15:16:03.895"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${count}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20190718 15:16:08.966" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190718 15:16:08.966" starttime="20190718 15:16:08.966"></status>
</kw>
<status status="PASS" endtime="20190718 15:16:08.966" starttime="20190718 15:16:08.966"></status>
</kw>
<doc>Verify Sender's Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="PASS" endtime="20190718 15:16:08.967" critical="yes" starttime="20190718 15:15:58.987"></status>
</test>
<status status="PASS" endtime="20190718 15:16:08.969" starttime="20190718 15:15:58.975"></status>
</suite>
<status status="PASS" endtime="20190718 15:16:08.971" starttime="20190718 15:15:39.749"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccquery" id="s1-s2" name="Ccquery">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\ccquery\ccquery_Normal.robot" id="s1-s2-s1" name="ccquery Normal">
<test id="s1-s2-s1-t1" name="Scenario: 20Contract - Ccquery">
<kw name="normalCcqueryById" library="behaveKwd">
<arguments>
<arg>${20ContractId}</arg>
<arg>${TokenInfoMethod}</arg>
<arg>${preTokenId}</arg>
</arguments>
<kw name="Request Ccquery" library="normalKwd">
<arguments>
<arg>${contractId}</arg>
<arg>${methodType}</arg>
<arg>${preTokenId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${methodType}</arg>
<arg>${PreTokenId}</arg>
</arguments>
<assign>
<var>${methodType}</var>
</assign>
<msg timestamp="20190718 15:16:08.991" level="INFO">${methodType} = [u'getTokenInfo', u'QA053']</msg>
<status status="PASS" endtime="20190718 15:16:08.991" starttime="20190718 15:16:08.990"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${contractId}</arg>
<arg>${methodType}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 15:16:08.991" level="INFO">${transList} = [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'getTokenInfo', u'QA053'], 0]</msg>
<status status="PASS" endtime="20190718 15:16:08.991" starttime="20190718 15:16:08.991"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>contract_ccquery</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:08.992" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:08.992" starttime="20190718 15:16:08.992"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:08.993" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccquery', u'params': [u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'getTokenInfo', u'QA053'], 0], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:08.993" starttime="20190718 15:16:08.992"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:08.993" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:08.994" starttime="20190718 15:16:08.993"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:10.044" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccquery", "params": ["PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["getTokenInfo", "QA053"], 0], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:10.044" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:10.044" starttime="20190718 15:16:08.994"></status>
</kw>
<msg timestamp="20190718 15:16:10.044" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:10.044" starttime="20190718 15:16:08.991"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:10.045" level="INFO">{"jsonrpc":"2.0","id":1,"result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT\",\"AssetID\":\"QA053+103TBGLD82JVI7M4YIB\"}"}
</msg>
<status status="PASS" endtime="20190718 15:16:10.045" starttime="20190718 15:16:10.045"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:10.046" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT...</msg>
<status status="PASS" endtime="20190718 15:16:10.046" starttime="20190718 15:16:10.045"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:10.046" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"{\"Symbol\":\"QA053\",\"CreateAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT\",\"TotalSupply\":60000,\"Decimals\":1,\"SupplyAddr\":\"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT\",\"AssetID\":\"QA053+103TBGLD82JVI7M4YIB\"}"} </msg>
<msg timestamp="20190718 15:16:10.047" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:10.047" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","As...</msg>
<status status="PASS" endtime="20190718 15:16:10.047" starttime="20190718 15:16:10.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:10.047" starttime="20190718 15:16:10.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:10.048" starttime="20190718 15:16:10.047"></status>
</kw>
<msg timestamp="20190718 15:16:10.048" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","As...</msg>
<status status="PASS" endtime="20190718 15:16:10.048" starttime="20190718 15:16:10.044"></status>
</kw>
<msg timestamp="20190718 15:16:10.048" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'{"Symbol":"QA053","CreateAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","TotalSupply":60000,"Decimals":1,"SupplyAddr":"P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","As...</msg>
<status status="PASS" endtime="20190718 15:16:10.048" starttime="20190718 15:16:08.990"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:10.049" level="FAIL">Resolving variable '${resp.content}' failed: AttributeError: 'dict' object has no attribute 'content'</msg>
<status status="FAIL" endtime="20190718 15:16:10.049" starttime="20190718 15:16:10.048"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:10.049" starttime="20190718 15:16:08.989"></status>
</kw>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:16:10.049" critical="yes" starttime="20190718 15:16:08.987">Resolving variable '${resp.content}' failed: AttributeError: 'dict' object has no attribute 'content'</status>
</test>
<status status="FAIL" endtime="20190718 15:16:10.052" starttime="20190718 15:16:08.978"></status>
</suite>
<status status="FAIL" endtime="20190718 15:16:10.055" starttime="20190718 15:16:08.975"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken" id="s1-s3" name="transferToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken\transferToken_recieverToken.robot" id="s1-s3-s1" name="transferToken recieverToken">
<test id="s1-s3-s1-t1" name="Scenario: 20Contract - Transfer Token">
<kw name="Given Request getbalance before create token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:16:10.075" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:16:10.076" starttime="20190718 15:16:10.075"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:10.076" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:10.076" starttime="20190718 15:16:10.076"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:10.077" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:10.077" starttime="20190718 15:16:10.077"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:10.078" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:10.078" starttime="20190718 15:16:10.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:11.089" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:11.090" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:11.090" starttime="20190718 15:16:10.078"></status>
</kw>
<msg timestamp="20190718 15:16:11.091" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:11.091" starttime="20190718 15:16:10.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:11.093" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:16:11.093" starttime="20190718 15:16:11.092"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:11.100" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:16:11.100" starttime="20190718 15:16:11.094"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:11.101" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:16:11.102" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:11.102" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:16:11.102" starttime="20190718 15:16:11.100"></status>
</kw>
<msg timestamp="20190718 15:16:11.103" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:11.103" starttime="20190718 15:16:10.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:11.105" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:11.105" starttime="20190718 15:16:11.104"></status>
</kw>
<status status="PASS" endtime="20190718 15:16:11.106" starttime="20190718 15:16:10.074"></status>
</kw>
<kw name="When Request normal CcinvokePass">
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:16:11.111" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA054', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:11.111" starttime="20190718 15:16:11.110"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:16:11.115" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA054', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:16:11.116" starttime="20190718 15:16:11.114"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:11.118" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:11.118" starttime="20190718 15:16:11.117"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:11.119" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:16:11.120" starttime="20190718 15:16:11.118"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:11.120" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:11.121" starttime="20190718 15:16:11.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:12.890" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA054", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:12.891" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:12.891" starttime="20190718 15:16:11.121"></status>
</kw>
<msg timestamp="20190718 15:16:12.891" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:12.891" starttime="20190718 15:16:11.116"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:12.891" level="INFO">{"jsonrpc":"2.0","id":1,"result":"cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0"}
</msg>
<status status="PASS" endtime="20190718 15:16:12.892" starttime="20190718 15:16:12.891"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:12.892" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0"}</msg>
<status status="PASS" endtime="20190718 15:16:12.892" starttime="20190718 15:16:12.892"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:12.893" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0"} </msg>
<msg timestamp="20190718 15:16:12.893" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:12.893" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0'}</msg>
<status status="PASS" endtime="20190718 15:16:12.893" starttime="20190718 15:16:12.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:12.893" starttime="20190718 15:16:12.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:12.894" starttime="20190718 15:16:12.893"></status>
</kw>
<msg timestamp="20190718 15:16:12.894" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0'}</msg>
<status status="PASS" endtime="20190718 15:16:12.894" starttime="20190718 15:16:12.891"></status>
</kw>
<msg timestamp="20190718 15:16:12.894" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0'}</msg>
<status status="PASS" endtime="20190718 15:16:12.894" starttime="20190718 15:16:11.113"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:16:12.895" level="INFO">${ret} = cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0</msg>
<status status="PASS" endtime="20190718 15:16:12.895" starttime="20190718 15:16:12.894"></status>
</kw>
<msg timestamp="20190718 15:16:12.895" level="INFO">${ret} = cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0</msg>
<status status="PASS" endtime="20190718 15:16:12.895" starttime="20190718 15:16:11.111"></status>
</kw>
<msg timestamp="20190718 15:16:12.895" level="INFO">${ret} = cc7e6755436217570d5f98501b563acb43991ef48da50a8e9f360d806a3b07e0</msg>
<status status="PASS" endtime="20190718 15:16:12.895" starttime="20190718 15:16:11.108"></status>
</kw>
<kw name="And Request getbalance after create token">
<assign>
<var>${key}</var>
<var>${item}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:16.896" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:16.896" starttime="20190718 15:16:12.896"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${result2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:16:16.900" level="INFO">${address} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:16.900" starttime="20190718 15:16:16.900"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:16.903" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:16.903" starttime="20190718 15:16:16.902"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:16.905" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:16.905" starttime="20190718 15:16:16.903"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:16.906" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:16.907" starttime="20190718 15:16:16.905"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:17.926" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:17.926" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:17.926" starttime="20190718 15:16:16.907"></status>
</kw>
<msg timestamp="20190718 15:16:17.927" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:17.927" starttime="20190718 15:16:16.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:17.928" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999831953","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}}
</msg>
<status status="PASS" endtime="20190718 15:16:17.928" starttime="20190718 15:16:17.927"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:17.943" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":...</msg>
<status status="PASS" endtime="20190718 15:16:17.943" starttime="20190718 15:16:17.929"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:17.944" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"CA070+09BW056HFQZNNDVD2NB-1":"1","CA070+09BW056HFQZNNDVD2NB-2":"1","CA070+09BW056HFQZNNDVD2NB-3":"1","CA070+09BW056HFQZNNDVD2NB-4":"1","CA070+09BW056HFQZNNDVD2NB-5":"1","CA071+0939Z4LSPZ67OIIE58I-1":"1","CA071+0939Z4LSPZ67OIIE58I-2":"1","CA071+0939Z4LSPZ67OIIE58I-3":"1","CA071+0939Z4LSPZ67OIIE58I-4":"1","CA071+0939Z4LSPZ67OIIE58I-5":"1","CA072+093HREDY6FN5S5I4PU2-1":"1","CA072+093HREDY6FN5S5I4PU2-2":"1","CA072+093HREDY6FN5S5I4PU2-3":"1","CA072+093HREDY6FN5S5I4PU2-4":"1","CA072+093HREDY6FN5S5I4PU2-5":"1","CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c":"1","CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9":"1","CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf":"1","CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4":"1","CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a":"1","CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7":"1","CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f":"1","CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566":"1","CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e":"1","CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe":"1","CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf":"1","CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146":"1","CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7":"1","CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2":"1","CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167":"1","PTN":"999831953","QA051+10E7ORYPQIJB04AGTXS":"6000","QA052+10UA71YADMJ3Z569GUN":"6000","QA053+103TBGLD82JVI7M4YIB":"6000","QA054+10OECAYLOAHD1KOCL0O":"5996","QA055+10B8N6IWC0OP0ITS33K":"2000","QA057+103KLW9IDPQ5UVU3WT8":"300006000","QA058+10M8SWMYQYVTPXVT1C2":"6000","QA077+09IICBPPCHRRBG7MG4F-1":"1","QA077+09IICBPPCHRRBG7MG4F-2":"1","QA077+09IICBPPCHRRBG7MG4F-3":"1","QA077+09IICBPPCHRRBG7MG4F-4":"1","QA077+09IICBPPCHRRBG7MG4F-5":"1","QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90":"1","QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630":"1","QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3":"1","QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc":"1","QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a":"1","QA151+10QQ4T913VH0241F273":"6000","QZ003+107NFSZFBPYFY2Y650C":"4000","VOTE+0G7A3CIJ074IPB171L":"60000","VOTE+0G7GM7ATWUBB2HVH25I":"60000","VOTE+0GL156SPIFCQ6O58G5P":"60000","VOTE+0GM5XJOJF6LDXRJ3MUF":"60000","VOTE+0GR4XLYDMVCE45AHRZC":"60000"}} </msg>
<msg timestamp="20190718 15:16:17.944" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:17.945" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:17.945" starttime="20190718 15:16:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:17.946" starttime="20190718 15:16:17.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:17.947" starttime="20190718 15:16:17.946"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:16:17.949" level="INFO">${strResult} = {u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QA084+0...</msg>
<status status="PASS" endtime="20190718 15:16:17.949" starttime="20190718 15:16:17.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:17.951" starttime="20190718 15:16:17.951"></status>
</kw>
<msg timestamp="20190718 15:16:17.951" level="INFO">${PTN} = 999831953</msg>
<status status="PASS" endtime="20190718 15:16:17.951" starttime="20190718 15:16:17.949"></status>
</kw>
<msg timestamp="20190718 15:16:17.951" level="INFO">${PTN} = 999831953</msg>
<msg timestamp="20190718 15:16:17.951" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:17.951" starttime="20190718 15:16:16.898"></status>
</kw>
<msg timestamp="20190718 15:16:17.952" level="INFO">${PTN2} = 999831953</msg>
<msg timestamp="20190718 15:16:17.952" level="INFO">${result2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072...</msg>
<status status="PASS" endtime="20190718 15:16:17.952" starttime="20190718 15:16:16.897"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result2['result']}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:16:17.952" level="INFO">${key} = QA054+10OECAYLOAHD1KOCL0O</msg>
<status status="PASS" endtime="20190718 15:16:17.952" starttime="20190718 15:16:17.952"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${item}</var>
</assign>
<msg timestamp="20190718 15:16:17.953" level="INFO">${item} = 0</msg>
<status status="PASS" endtime="20190718 15:16:17.953" starttime="20190718 15:16:17.952"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${gain}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 15:16:19.687" level="INFO">Post data:{"params": ["QA054+10OECAYLOAHD1KOCL0O", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'result': u'0x2981b7ddd620dbf26a16cad4041d4c3d952a9d86218f66f04f6ee3570ef83b9c'}</msg>
<msg timestamp="20190718 15:16:19.687" level="INFO">${tokenResult} = 0x2981b7ddd620dbf26a16cad4041d4c3d952a9d86218f66f04f6ee3570ef83b9c</msg>
<status status="PASS" endtime="20190718 15:16:19.687" starttime="20190718 15:16:17.953"></status>
</kw>
<msg timestamp="20190718 15:16:19.687" level="INFO">${key} = QA054+10OECAYLOAHD1KOCL0O</msg>
<msg timestamp="20190718 15:16:19.687" level="INFO">${item} = 0</msg>
<status status="PASS" endtime="20190718 15:16:19.687" starttime="20190718 15:16:12.896"></status>
</kw>
<kw name="Then Assert gain">
<arguments>
<arg>${key}</arg>
<arg>${item}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item}+${gain}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 15:16:19.690" level="INFO">${item1} = 2</msg>
<status status="PASS" endtime="20190718 15:16:19.690" starttime="20190718 15:16:19.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:23.691" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:23.691" starttime="20190718 15:16:19.690"></status>
</kw>
<kw name="normalGetBalance" library="behaveKwd">
<arguments>
<arg>${recieverAdd}</arg>
</arguments>
<assign>
<var>${RecPTN2}</var>
<var>${RecResult2}</var>
</assign>
<kw name="Request getBalance" library="normalKwd">
<arguments>
<arg>${address}</arg>
<arg>${host}</arg>
</arguments>
<assign>
<var>${PTN}</var>
<var>${RESULT}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${address}</arg>
</arguments>
<assign>
<var>${address}</var>
</assign>
<msg timestamp="20190718 15:16:23.696" level="INFO">${address} = [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc']</msg>
<status status="PASS" endtime="20190718 15:16:23.696" starttime="20190718 15:16:23.695"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_getBalance</arg>
<arg>${address}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:23.700" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:23.700" starttime="20190718 15:16:23.699"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:23.703" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_getBalance', u'params': [u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:23.703" starttime="20190718 15:16:23.700"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:23.705" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:23.707" starttime="20190718 15:16:23.704"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:24.735" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_getBalance", "params": ["P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:24.736" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:24.736" starttime="20190718 15:16:23.708"></status>
</kw>
<msg timestamp="20190718 15:16:24.736" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:24.737" starttime="20190718 15:16:23.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:24.738" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"PTN":"168000","QA054+10OECAYLOAHD1KOCL0O":"6","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}
</msg>
<status status="PASS" endtime="20190718 15:16:24.739" starttime="20190718 15:16:24.737"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:24.743" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":{"PTN":"168000","QA054+10OECAYLOAHD1KOCL0O":"6","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}}</msg>
<status status="PASS" endtime="20190718 15:16:24.743" starttime="20190718 15:16:24.739"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:24.744" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":{"PTN":"168000","QA054+10OECAYLOAHD1KOCL0O":"6","QA055+10B8N6IWC0OP0ITS33K":"4000","QZ003+107NFSZFBPYFY2Y650C":"2000"}} </msg>
<msg timestamp="20190718 15:16:24.744" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:24.745" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'168000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'6'}}</msg>
<status status="PASS" endtime="20190718 15:16:24.745" starttime="20190718 15:16:24.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:24.746" starttime="20190718 15:16:24.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:24.749" starttime="20190718 15:16:24.747"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str(${jsonRes['result']})</arg>
</arguments>
<assign>
<var>${strResult}</var>
</assign>
<msg timestamp="20190718 15:16:24.751" level="INFO">${strResult} = {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'168000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'6'}</msg>
<status status="PASS" endtime="20190718 15:16:24.751" starttime="20190718 15:16:24.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${strResult}=={}</arg>
<arg>Set Variable</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<assign>
<var>${PTN}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${jsonRes['result']['PTN']}</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:24.754" starttime="20190718 15:16:24.753"></status>
</kw>
<msg timestamp="20190718 15:16:24.754" level="INFO">${PTN} = 168000</msg>
<status status="PASS" endtime="20190718 15:16:24.755" starttime="20190718 15:16:24.751"></status>
</kw>
<msg timestamp="20190718 15:16:24.756" level="INFO">${PTN} = 168000</msg>
<msg timestamp="20190718 15:16:24.756" level="INFO">${RESULT} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'168000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'6'}}</msg>
<status status="PASS" endtime="20190718 15:16:24.756" starttime="20190718 15:16:23.694"></status>
</kw>
<msg timestamp="20190718 15:16:24.757" level="INFO">${RecPTN2} = 168000</msg>
<msg timestamp="20190718 15:16:24.757" level="INFO">${RecResult2} = {u'jsonrpc': u'2.0', u'id': 1, u'result': {u'QZ003+107NFSZFBPYFY2Y650C': u'2000', u'PTN': u'168000', u'QA055+10B8N6IWC0OP0ITS33K': u'4000', u'QA054+10OECAYLOAHD1KOCL0O': u'6'}}</msg>
<status status="PASS" endtime="20190718 15:16:24.757" starttime="20190718 15:16:23.692"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${RecResult2['result']}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 15:16:24.759" level="INFO">${item2} = 6</msg>
<status status="PASS" endtime="20190718 15:16:24.759" starttime="20190718 15:16:24.758"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item2}</arg>
<arg>${item1}</arg>
</arguments>
<msg timestamp="20190718 15:16:24.761" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<msg timestamp="20190718 15:16:24.761" level="FAIL">6.0 != 2.0</msg>
<status status="FAIL" endtime="20190718 15:16:24.761" starttime="20190718 15:16:24.759"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:24.761" starttime="20190718 15:16:19.689"></status>
</kw>
<doc>Verify Reciever's Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:16:24.762" critical="yes" starttime="20190718 15:16:10.072">6.0 != 2.0</status>
</test>
<status status="FAIL" endtime="20190718 15:16:24.766" starttime="20190718 15:16:10.060"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\transferToken\transferToken_senderTokenPTN.robot" id="s1-s3-s2" name="transferToken senderTokenPTN">
<test id="s1-s3-s2-t1" name="Scenario: 20Contract - Transfer Token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:16:24.780" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:16:24.780" starttime="20190718 15:16:24.780"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:24.781" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:24.781" starttime="20190718 15:16:24.781"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:24.782" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:24.782" starttime="20190718 15:16:24.781"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:24.782" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:24.783" starttime="20190718 15:16:24.782"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:25.790" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:25.791" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:25.791" starttime="20190718 15:16:24.783"></status>
</kw>
<msg timestamp="20190718 15:16:25.791" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:25.791" starttime="20190718 15:16:24.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:25.791" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:16:25.791" starttime="20190718 15:16:25.791"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:25.793" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:16:25.793" starttime="20190718 15:16:25.791"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:25.793" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:16:25.793" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:25.793" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:16:25.793" starttime="20190718 15:16:25.793"></status>
</kw>
<msg timestamp="20190718 15:16:25.793" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:25.793" starttime="20190718 15:16:24.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:25.795" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:25.795" starttime="20190718 15:16:25.794"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:26.803" level="INFO">[u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari', u'P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv', u'P16dnohTwkNYSX374eDg64z2h6StioE5vAS', u'P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz', u'P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx', u'P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG', u'P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1', u'P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF']</msg>
<status status="PASS" endtime="20190718 15:16:26.803" starttime="20190718 15:16:25.795"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:16:26.804" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA055', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:26.804" starttime="20190718 15:16:26.804"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:16:26.806" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA055', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:16:26.807" starttime="20190718 15:16:26.806"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:26.807" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:26.808" starttime="20190718 15:16:26.807"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:26.808" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:16:26.808" starttime="20190718 15:16:26.808"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:26.809" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:26.809" starttime="20190718 15:16:26.808"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:28.515" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA055", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:28.516" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:28.516" starttime="20190718 15:16:26.809"></status>
</kw>
<msg timestamp="20190718 15:16:28.516" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:28.516" starttime="20190718 15:16:26.807"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:28.517" level="INFO">{"jsonrpc":"2.0","id":1,"result":"42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3"}
</msg>
<status status="PASS" endtime="20190718 15:16:28.517" starttime="20190718 15:16:28.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:28.518" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3"}</msg>
<status status="PASS" endtime="20190718 15:16:28.518" starttime="20190718 15:16:28.517"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:28.518" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3"} </msg>
<msg timestamp="20190718 15:16:28.518" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:28.518" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3'}</msg>
<status status="PASS" endtime="20190718 15:16:28.518" starttime="20190718 15:16:28.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:28.519" starttime="20190718 15:16:28.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:28.520" starttime="20190718 15:16:28.519"></status>
</kw>
<msg timestamp="20190718 15:16:28.520" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3'}</msg>
<status status="PASS" endtime="20190718 15:16:28.520" starttime="20190718 15:16:28.516"></status>
</kw>
<msg timestamp="20190718 15:16:28.520" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3'}</msg>
<status status="PASS" endtime="20190718 15:16:28.520" starttime="20190718 15:16:26.805"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:16:28.521" level="INFO">${ret} = 42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3</msg>
<status status="PASS" endtime="20190718 15:16:28.521" starttime="20190718 15:16:28.520"></status>
</kw>
<msg timestamp="20190718 15:16:28.521" level="INFO">${ret} = 42577175eea5074a869dd78cd78cef40dbea540bcc2351b8307493837a42cbe3</msg>
<status status="PASS" endtime="20190718 15:16:28.521" starttime="20190718 15:16:26.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:32.521" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:32.522" starttime="20190718 15:16:28.521"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 15:16:33.541" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QA055+10B8N6IWC0OP0ITS33K': u'2000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999827951', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'300006000', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:16:33.542" level="INFO">${result1} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QA055+10B...</msg>
<status status="PASS" endtime="20190718 15:16:33.542" starttime="20190718 15:16:32.523"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:16:33.544" level="INFO">${key} = QA055+10B8N6IWC0OP0ITS33K</msg>
<status status="PASS" endtime="20190718 15:16:33.544" starttime="20190718 15:16:33.543"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 15:16:33.546" level="INFO">${PTN1} = 999827951</msg>
<status status="PASS" endtime="20190718 15:16:33.546" starttime="20190718 15:16:33.545"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 15:16:33.548" level="INFO">${item1} = 2000</msg>
<status status="PASS" endtime="20190718 15:16:33.548" starttime="20190718 15:16:33.547"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${GeneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${amount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 15:16:35.286" level="INFO">Post data:{"params": ["QA055+10B8N6IWC0OP0ITS33K", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2000", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'result': u'0xee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da'}</msg>
<msg timestamp="20190718 15:16:35.286" level="INFO">${tokenResult} = 0xee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da</msg>
<status status="PASS" endtime="20190718 15:16:35.286" starttime="20190718 15:16:33.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:39.287" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:39.287" starttime="20190718 15:16:35.287"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item1}-${amount}</arg>
</arguments>
<assign>
<var>${item'}</var>
</assign>
<msg timestamp="20190718 15:16:39.288" level="INFO">${item'} = 0</msg>
<status status="PASS" endtime="20190718 15:16:39.288" starttime="20190718 15:16:39.287"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNPoundage}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTN'}</var>
</assign>
<msg timestamp="20190718 15:16:39.289" level="INFO">${PTN'} = 999827950</msg>
<status status="PASS" endtime="20190718 15:16:39.289" starttime="20190718 15:16:39.289"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 15:16:40.302" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999827950', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'300006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:16:40.303" level="INFO">${result2} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:16:40.303" starttime="20190718 15:16:39.290"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 15:16:40.305" level="INFO">${PTN2} = 999827950</msg>
<status status="PASS" endtime="20190718 15:16:40.305" starttime="20190718 15:16:40.304"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 15:16:40.307" level="FAIL">Dictionary does not contain key 'QA055+10B8N6IWC0OP0ITS33K'.</msg>
<status status="FAIL" endtime="20190718 15:16:40.307" starttime="20190718 15:16:40.306"></status>
</kw>
<doc>verify sender's PTN and token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:16:40.310" critical="yes" starttime="20190718 15:16:24.778">Dictionary does not contain key 'QA055+10B8N6IWC0OP0ITS33K'.</status>
</test>
<status status="FAIL" endtime="20190718 15:16:40.319" starttime="20190718 15:16:24.769"></status>
</suite>
<status status="FAIL" endtime="20190718 15:16:40.334" starttime="20190718 15:16:10.058"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zChangeSupply" id="s1-s4" name="zChangeSupply">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zChangeSupply\ccinvoketxPass_SenderPTN.robot" id="s1-s4-s1" name="ccinvoketxPass SenderPTN">
<test id="s1-s4-s1-t1" name="Scenario: 20Contract - Change Supply Token">
<kw name="Given Send PTN to recieverAdd">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:16:40.371" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:16:40.371" starttime="20190718 15:16:40.371"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:40.372" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:40.372" starttime="20190718 15:16:40.371"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:40.372" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:40.372" starttime="20190718 15:16:40.372"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:40.373" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:40.373" starttime="20190718 15:16:40.373"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:41.384" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:41.384" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:41.385" starttime="20190718 15:16:40.373"></status>
</kw>
<msg timestamp="20190718 15:16:41.385" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:41.386" starttime="20190718 15:16:40.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:41.387" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]}
</msg>
<status status="PASS" endtime="20190718 15:16:41.388" starttime="20190718 15:16:41.386"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:41.394" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:16:41.395" starttime="20190718 15:16:41.388"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:41.396" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF"]} </msg>
<msg timestamp="20190718 15:16:41.396" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:41.397" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:16:41.397" starttime="20190718 15:16:41.395"></status>
</kw>
<msg timestamp="20190718 15:16:41.398" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:41.399" starttime="20190718 15:16:40.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:41.401" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:41.401" starttime="20190718 15:16:41.399"></status>
</kw>
<kw name="newAccount" library="utilDefined">
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 15:16:41.403" level="INFO">${transList} = [u'1']</msg>
<status status="PASS" endtime="20190718 15:16:41.404" starttime="20190718 15:16:41.403"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${newAccount}</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:41.408" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:41.408" starttime="20190718 15:16:41.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:41.410" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:41.410" starttime="20190718 15:16:41.408"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:41.411" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:41.412" starttime="20190718 15:16:41.410"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:43.154" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:43.154" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:43.155" starttime="20190718 15:16:41.412"></status>
</kw>
<msg timestamp="20190718 15:16:43.155" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:43.155" starttime="20190718 15:16:41.404"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:43.156" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"}</msg>
<status status="PASS" endtime="20190718 15:16:43.156" starttime="20190718 15:16:43.155"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:43.156" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"} </msg>
<msg timestamp="20190718 15:16:43.156" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:43.156" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa'}</msg>
<status status="PASS" endtime="20190718 15:16:43.156" starttime="20190718 15:16:43.156"></status>
</kw>
<msg timestamp="20190718 15:16:43.156" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa'}</msg>
<status status="PASS" endtime="20190718 15:16:43.156" starttime="20190718 15:16:41.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${reciever}</arg>
<arg>${jsonRes['result']}</arg>
</arguments>
<msg timestamp="20190718 15:16:43.158" level="INFO">${reciever} = P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa</msg>
<status status="PASS" endtime="20190718 15:16:43.158" starttime="20190718 15:16:43.156"></status>
</kw>
<kw name="And normalCrtTrans" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
<arg>${reciever}</arg>
<arg>100000</arg>
<arg>${PTNPoundage}</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<kw name="Request create transaction" library="normalKwd">
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 15:16:43.160" level="INFO">${transList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa', u'100000', u'1']</msg>
<status status="PASS" endtime="20190718 15:16:43.160" starttime="20190718 15:16:43.160"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_cmdCreateTransaction</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:43.161" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:43.161" starttime="20190718 15:16:43.161"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:43.162" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_cmdCreateTransaction', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa', u'100000', u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:43.162" starttime="20190718 15:16:43.161"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:43.162" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:43.162" starttime="20190718 15:16:43.162"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:44.177" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_cmdCreateTransaction", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa", "100000", "1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:44.178" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:44.178" starttime="20190718 15:16:43.162"></status>
</kw>
<msg timestamp="20190718 15:16:44.179" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:44.179" starttime="20190718 15:16:43.160"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:44.182" level="INFO">{"jsonrpc":"2.0","id":1,"result":"f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080"}
</msg>
<status status="PASS" endtime="20190718 15:16:44.182" starttime="20190718 15:16:44.181"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:44.188" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f...</msg>
<status status="PASS" endtime="20190718 15:16:44.188" starttime="20190718 15:16:44.183"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:44.189" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080"} </msg>
<msg timestamp="20190718 15:16:44.190" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:44.190" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b...</msg>
<status status="PASS" endtime="20190718 15:16:44.191" starttime="20190718 15:16:44.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:44.193" starttime="20190718 15:16:44.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:44.195" starttime="20190718 15:16:44.193"></status>
</kw>
<msg timestamp="20190718 15:16:44.196" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b...</msg>
<status status="PASS" endtime="20190718 15:16:44.196" starttime="20190718 15:16:44.179"></status>
</kw>
<msg timestamp="20190718 15:16:44.196" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b...</msg>
<status status="PASS" endtime="20190718 15:16:44.197" starttime="20190718 15:16:43.159"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${jsonRes['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:16:44.199" level="INFO">${ret} = f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2</msg>
<status status="PASS" endtime="20190718 15:16:44.199" starttime="20190718 15:16:44.197"></status>
</kw>
<msg timestamp="20190718 15:16:44.200" level="INFO">${ret1} = f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb08000000000000...</msg>
<status status="PASS" endtime="20190718 15:16:44.201" starttime="20190718 15:16:43.158"></status>
</kw>
<kw name="And normalSignTrans" library="behaveKwd">
<arguments>
<arg>${ret1}</arg>
<arg>${signType}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${ret2}</var>
</assign>
<kw name="Request sign transaction" library="normalKwd">
<arguments>
<arg>${crtRet}</arg>
<arg>${signType}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtRet}</arg>
<arg>${signType}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 15:16:44.203" level="INFO">${transList} = [u'f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb08000000000...</msg>
<status status="PASS" endtime="20190718 15:16:44.203" starttime="20190718 15:16:44.203"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>ptn_signRawTransaction</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:44.205" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:44.205" starttime="20190718 15:16:44.204"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:44.207" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'ptn_signRawTransaction', u'params': [u'f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a...</msg>
<status status="PASS" endtime="20190718 15:16:44.207" starttime="20190718 15:16:44.206"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:44.207" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:44.208" starttime="20190718 15:16:44.207"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:45.991" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "ptn_signRawTransaction", "params": ["f8c3f8bff8bd80b8baf8b8e6e58080a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080", "ALL", "1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:45.991" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:45.991" starttime="20190718 15:16:44.208"></status>
</kw>
<msg timestamp="20190718 15:16:45.991" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:45.991" starttime="20190718 15:16:44.203"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:45.992" level="INFO">{"jsonrpc":"2.0","id":1,"result":{"hex":"f90134f9012ff9012c80b90128f90125f892f890b86a4730440220379d1a1f82f6f181ba0bc604046bb497bc496819231bb24c327bc74eedc8aa420220474d6b70fbbb2339db1143ea5c7a0e2bd2784fb1fb0dff2fb551b35d4eeafa340121036f99cd6d8888b4a0ec3e57a4ae3c9faaeca38bd1449e3993f5ab67c654b1ed8d80a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080","txid":"0x0c1f2870f35a0d6a2c3c3b81ff640ce33b47c9debfd514b49309c512cac1567a","complete":true}}
</msg>
<status status="PASS" endtime="20190718 15:16:45.992" starttime="20190718 15:16:45.992"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:45.993" level="FAIL">Evaluating expression 'demjson.encode({"jsonrpc":"2.0","id":1,"result":{"hex":"f90134f9012ff9012c80b90128f90125f892f890b86a4730440220379d1a1f82f6f181ba0bc604046bb497bc496819231bb24c327bc74eedc8aa420220474d6b70fbbb2339db1143ea5c7a0e2bd2784fb1fb0dff2fb551b35d4eeafa340121036f99cd6d8888b4a0ec3e57a4ae3c9faaeca38bd1449e3993f5ab67c654b1ed8d80a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080","txid":"0x0c1f2870f35a0d6a2c3c3b81ff640ce33b47c9debfd514b49309c512cac1567a","complete":true}}
)' failed: NameError: name 'true' is not defined</msg>
<status status="FAIL" endtime="20190718 15:16:45.993" starttime="20190718 15:16:45.992"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:45.993" starttime="20190718 15:16:45.992"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:45.993" starttime="20190718 15:16:44.202"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:45.993" starttime="20190718 15:16:44.201"></status>
</kw>
<status status="FAIL" endtime="20190718 15:16:45.993" starttime="20190718 15:16:40.370"></status>
</kw>
<doc>Verify SupplyAdd And Transfer Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:16:45.995" critical="yes" starttime="20190718 15:16:40.369">Evaluating expression 'demjson.encode({"jsonrpc":"2.0","id":1,"result":{"hex":"f90134f9012ff9012c80b90128f90125f892f890b86a4730440220379d1a1f82f6f181ba0bc604046bb497bc496819231bb24c327bc74eedc8aa420220474d6b70fbbb2339db1143ea5c7a0e2bd2784fb1fb0dff2fb551b35d4eeafa340121036f99cd6d8888b4a0ec3e57a4ae3c9faaeca38bd1449e3993f5ab67c654b1ed8d80a0ee6346f7be431a8b53fff2250e081ec2b4ebda874ba0b0fe741e60dc971ff9da8080f88ef8448609184e72a0009976a9147b845c5cf46197430463fcd58b575367789f63aa88ace290400082bb0800000000000000000000009000000000000000000000000000000000f8468801632cba2f37ad009976a91477712bd0b9e2fc1997658aefa28d3971404871bc88ace290400082bb0800000000000000000000009000000000000000000000000000000000808080","txid":"0x0c1f2870f35a0d6a2c3c3b81ff640ce33b47c9debfd514b49309c512cac1567a","complete":true}}
)' failed: NameError: name 'true' is not defined</status>
</test>
<status status="FAIL" endtime="20190718 15:16:45.998" starttime="20190718 15:16:40.351"></status>
</suite>
<status status="FAIL" endtime="20190718 15:16:46.000" starttime="20190718 15:16:40.343"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zFrozToken" id="s1-s5" name="zFrozToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zFrozToken\transferToken_frozen_senderToken.robot" id="s1-s5-s1" name="transferToken frozen senderToken">
<test id="s1-s5-s1-t1" name="Scenario: 20Contract - Frozen Token">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:16:46.020" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:16:46.020" starttime="20190718 15:16:46.020"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:46.021" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:46.021" starttime="20190718 15:16:46.021"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:46.022" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:16:46.022" starttime="20190718 15:16:46.022"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:46.023" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:46.023" starttime="20190718 15:16:46.022"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:47.032" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:47.032" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:47.032" starttime="20190718 15:16:46.023"></status>
</kw>
<msg timestamp="20190718 15:16:47.033" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:47.033" starttime="20190718 15:16:46.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:47.034" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]}
</msg>
<status status="PASS" endtime="20190718 15:16:47.034" starttime="20190718 15:16:47.033"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:47.038" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:16:47.039" starttime="20190718 15:16:47.034"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:47.040" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]} </msg>
<msg timestamp="20190718 15:16:47.040" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:47.040" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:16:47.040" starttime="20190718 15:16:47.039"></status>
</kw>
<msg timestamp="20190718 15:16:47.041" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:47.041" starttime="20190718 15:16:46.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:47.043" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:16:47.043" starttime="20190718 15:16:47.042"></status>
</kw>
<kw name="Personal Unlock Account" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:16:48.059" level="INFO">[u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari', u'P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv', u'P16dnohTwkNYSX374eDg64z2h6StioE5vAS', u'P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz', u'P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx', u'P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG', u'P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1', u'P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF', u'P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa']</msg>
<status status="PASS" endtime="20190718 15:16:48.059" starttime="20190718 15:16:47.044"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:16:48.065" level="INFO">${ccList} = [u'createToken', u'evidence', u'QZ003', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:16:48.066" starttime="20190718 15:16:48.063"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:16:48.075" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QZ003', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:16:48.075" starttime="20190718 15:16:48.072"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:16:48.079" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:16:48.079" starttime="20190718 15:16:48.078"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:16:48.082" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:16:48.083" starttime="20190718 15:16:48.080"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:16:48.084" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:16:48.085" starttime="20190718 15:16:48.083"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:16:49.828" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QZ003", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:16:49.828" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:49.828" starttime="20190718 15:16:48.086"></status>
</kw>
<msg timestamp="20190718 15:16:49.828" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:16:49.828" starttime="20190718 15:16:48.076"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:16:49.829" level="INFO">{"jsonrpc":"2.0","id":1,"result":"15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232"}
</msg>
<status status="PASS" endtime="20190718 15:16:49.829" starttime="20190718 15:16:49.829"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:49.830" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232"}</msg>
<status status="PASS" endtime="20190718 15:16:49.830" starttime="20190718 15:16:49.829"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:16:49.830" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232"} </msg>
<msg timestamp="20190718 15:16:49.830" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:16:49.831" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232'}</msg>
<status status="PASS" endtime="20190718 15:16:49.831" starttime="20190718 15:16:49.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:49.831" starttime="20190718 15:16:49.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:16:49.831" starttime="20190718 15:16:49.831"></status>
</kw>
<msg timestamp="20190718 15:16:49.832" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232'}</msg>
<status status="PASS" endtime="20190718 15:16:49.832" starttime="20190718 15:16:49.828"></status>
</kw>
<msg timestamp="20190718 15:16:49.832" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232'}</msg>
<status status="PASS" endtime="20190718 15:16:49.832" starttime="20190718 15:16:48.070"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:16:49.832" level="INFO">${ret} = 15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232</msg>
<status status="PASS" endtime="20190718 15:16:49.832" starttime="20190718 15:16:49.832"></status>
</kw>
<msg timestamp="20190718 15:16:49.832" level="INFO">${ret} = 15b2a89b52ce2c53b72791990cf83b07c7950fca4081377ed8dade3139842232</msg>
<status status="PASS" endtime="20190718 15:16:49.833" starttime="20190718 15:16:48.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:16:53.833" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:16:53.833" starttime="20190718 15:16:49.833"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 15:16:54.862" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999823949', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'300006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:16:54.863" level="INFO">${result1} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:16:54.863" starttime="20190718 15:16:53.835"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:16:54.866" level="INFO">${key} = QZ003+107NFSZFBPYFY2Y650C</msg>
<status status="PASS" endtime="20190718 15:16:54.867" starttime="20190718 15:16:54.865"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 15:16:54.869" level="INFO">${PTN1} = 999823949</msg>
<status status="PASS" endtime="20190718 15:16:54.869" starttime="20190718 15:16:54.868"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item1}</var>
</assign>
<msg timestamp="20190718 15:16:54.873" level="INFO">${item1} = 4000</msg>
<status status="PASS" endtime="20190718 15:16:54.873" starttime="20190718 15:16:54.872"></status>
</kw>
<kw name="Transfer Token" library="createToken">
<arguments>
<arg>${key}</arg>
<arg>${GeneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${amount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${evidence}</arg>
<arg>${duration}</arg>
</arguments>
<assign>
<var>${tokenResult}</var>
</assign>
<msg timestamp="20190718 15:16:56.600" level="INFO">Post data:{"params": ["QZ003+107NFSZFBPYFY2Y650C", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "2000", "1", "evidence", "1", 600000000], "jsonrpc": "2.0", "method": "wallet_transferToken", "id": 1}
Response:{u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'', u'code': -32000}}
Request transferToken failed.
{u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'', u'code': -32000}}</msg>
<msg timestamp="20190718 15:16:56.600" level="INFO">${tokenResult} = None</msg>
<status status="PASS" endtime="20190718 15:16:56.600" starttime="20190718 15:16:54.875"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${item1}-${amount}</arg>
</arguments>
<assign>
<var>${item'}</var>
</assign>
<msg timestamp="20190718 15:16:56.601" level="INFO">${item'} = 2000</msg>
<status status="PASS" endtime="20190718 15:16:56.601" starttime="20190718 15:16:56.601"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>decimal.Decimal('${PTN1}')-decimal.Decimal('${PTNPoundage}')</arg>
<arg>decimal</arg>
</arguments>
<assign>
<var>${PTN'}</var>
</assign>
<msg timestamp="20190718 15:16:56.602" level="INFO">${PTN'} = 999823948</msg>
<status status="PASS" endtime="20190718 15:16:56.602" starttime="20190718 15:16:56.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:17:00.604" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:17:00.604" starttime="20190718 15:16:56.603"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${GeneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 15:17:01.633" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999823949', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'300006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:17:01.634" level="INFO">${result2} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:17:01.634" starttime="20190718 15:17:00.606"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 15:17:01.637" level="INFO">${PTN2} = 999823949</msg>
<status status="PASS" endtime="20190718 15:17:01.637" starttime="20190718 15:17:01.636"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${item2}</var>
</assign>
<msg timestamp="20190718 15:17:01.640" level="INFO">${item2} = 4000</msg>
<status status="PASS" endtime="20190718 15:17:01.640" starttime="20190718 15:17:01.639"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${item2}</arg>
<arg>${item'}</arg>
</arguments>
<msg timestamp="20190718 15:17:01.645" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<msg timestamp="20190718 15:17:01.646" level="FAIL">4000.0 != 2000.0</msg>
<status status="FAIL" endtime="20190718 15:17:01.646" starttime="20190718 15:17:01.643"></status>
</kw>
<doc>1.create ok 2.transfer ok 3.frozen ok 4.transfer fail</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:17:01.648" critical="yes" starttime="20190718 15:16:46.019">4000.0 != 2000.0</status>
</test>
<status status="FAIL" endtime="20190718 15:17:01.659" starttime="20190718 15:16:46.007"></status>
</suite>
<status status="FAIL" endtime="20190718 15:17:01.666" starttime="20190718 15:16:46.004"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken" id="s1-s6" name="zSupplyToken">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenAllow_SenderPTNToken.robot" id="s1-s6-s1" name="supplyTokenAllow SenderPTNToken">
<test id="s1-s6-s1-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:17:01.684" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:17:01.684" starttime="20190718 15:17:01.684"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:01.685" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:01.685" starttime="20190718 15:17:01.685"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:01.687" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:17:01.687" starttime="20190718 15:17:01.685"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:01.687" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:01.687" starttime="20190718 15:17:01.687"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:02.693" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:02.693" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:02.693" starttime="20190718 15:17:01.687"></status>
</kw>
<msg timestamp="20190718 15:17:02.693" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:02.694" starttime="20190718 15:17:01.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:02.694" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]}
</msg>
<status status="PASS" endtime="20190718 15:17:02.694" starttime="20190718 15:17:02.694"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:02.696" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:17:02.696" starttime="20190718 15:17:02.694"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:02.697" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]} </msg>
<msg timestamp="20190718 15:17:02.697" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:17:02.697" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:17:02.697" starttime="20190718 15:17:02.696"></status>
</kw>
<msg timestamp="20190718 15:17:02.697" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:17:02.697" starttime="20190718 15:17:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:17:02.698" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:17:02.698" starttime="20190718 15:17:02.697"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:17:02.699" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:17:02.699" starttime="20190718 15:17:02.698"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:17:02.701" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA057', u'1', u'60000', u'P1BtYz...</msg>
<status status="PASS" endtime="20190718 15:17:02.701" starttime="20190718 15:17:02.700"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:02.702" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:02.702" starttime="20190718 15:17:02.701"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:02.703" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:17:02.703" starttime="20190718 15:17:02.702"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:02.703" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:02.714" starttime="20190718 15:17:02.703"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:04.490" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA057", "1", "60000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:04.491" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:04.491" starttime="20190718 15:17:02.714"></status>
</kw>
<msg timestamp="20190718 15:17:04.491" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:04.491" starttime="20190718 15:17:02.701"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:04.492" level="INFO">{"jsonrpc":"2.0","id":1,"result":"ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58"}
</msg>
<status status="PASS" endtime="20190718 15:17:04.492" starttime="20190718 15:17:04.491"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:04.492" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58"}</msg>
<status status="PASS" endtime="20190718 15:17:04.492" starttime="20190718 15:17:04.492"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:04.493" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58"} </msg>
<msg timestamp="20190718 15:17:04.493" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:17:04.493" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58'}</msg>
<status status="PASS" endtime="20190718 15:17:04.493" starttime="20190718 15:17:04.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:04.493" starttime="20190718 15:17:04.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:04.494" starttime="20190718 15:17:04.493"></status>
</kw>
<msg timestamp="20190718 15:17:04.494" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58'}</msg>
<status status="PASS" endtime="20190718 15:17:04.494" starttime="20190718 15:17:04.491"></status>
</kw>
<msg timestamp="20190718 15:17:04.494" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58'}</msg>
<status status="PASS" endtime="20190718 15:17:04.494" starttime="20190718 15:17:02.700"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:17:04.495" level="INFO">${ret} = ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58</msg>
<status status="PASS" endtime="20190718 15:17:04.495" starttime="20190718 15:17:04.494"></status>
</kw>
<msg timestamp="20190718 15:17:04.495" level="INFO">${ret} = ac53eb85dc5f083f54efc11c0faca0f520f81a1c814fefea2f4b6df30126ae58</msg>
<status status="PASS" endtime="20190718 15:17:04.495" starttime="20190718 15:17:02.699"></status>
</kw>
<status status="PASS" endtime="20190718 15:17:04.495" starttime="20190718 15:17:01.684"></status>
</kw>
<kw name="And Request getbalance before create token">
<assign>
<var>${PTN1}</var>
<var>${key}</var>
<var>${coinToken1}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:17:08.497" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:17:08.497" starttime="20190718 15:17:04.496"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 15:17:09.524" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999819948', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'300006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:17:09.525" level="INFO">${result1} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:17:09.525" starttime="20190718 15:17:08.498"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:17:09.526" level="INFO">${key} = QA057+103KLW9IDPQ5UVU3WT8</msg>
<status status="PASS" endtime="20190718 15:17:09.526" starttime="20190718 15:17:09.525"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 15:17:09.527" level="INFO">${PTN1} = 999819948</msg>
<status status="PASS" endtime="20190718 15:17:09.527" starttime="20190718 15:17:09.526"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken1}</var>
</assign>
<msg timestamp="20190718 15:17:09.528" level="INFO">${coinToken1} = 300006000</msg>
<status status="PASS" endtime="20190718 15:17:09.528" starttime="20190718 15:17:09.527"></status>
</kw>
<msg timestamp="20190718 15:17:09.528" level="INFO">${PTN1} = 999819948</msg>
<msg timestamp="20190718 15:17:09.529" level="INFO">${key} = QA057+103KLW9IDPQ5UVU3WT8</msg>
<msg timestamp="20190718 15:17:09.529" level="INFO">${coinToken1} = 300006000</msg>
<status status="PASS" endtime="20190718 15:17:09.529" starttime="20190718 15:17:04.496"></status>
</kw>
<kw name="When Create token of vote contract">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${supplyTokenMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${supplyTokenAmount}</arg>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:17:09.532" level="INFO">${ccList} = [u'supplyToken', u'QA057', u'1500000000', u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT']</msg>
<status status="PASS" endtime="20190718 15:17:09.532" starttime="20190718 15:17:09.531"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:17:09.537" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'supplyToken', u'QA057', u'1500000000', u'P1BtYz6ekTmc4gQBzt4X...</msg>
<status status="PASS" endtime="20190718 15:17:09.537" starttime="20190718 15:17:09.535"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:09.539" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:09.539" starttime="20190718 15:17:09.538"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:09.540" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:17:09.541" starttime="20190718 15:17:09.539"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:09.541" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:09.542" starttime="20190718 15:17:09.541"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:11.331" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["supplyToken", "QA057", "1500000000", "P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:11.331" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:11.331" starttime="20190718 15:17:09.542"></status>
</kw>
<msg timestamp="20190718 15:17:11.332" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:11.332" starttime="20190718 15:17:09.537"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:11.332" level="INFO">{"jsonrpc":"2.0","id":1,"result":"f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54"}
</msg>
<status status="PASS" endtime="20190718 15:17:11.332" starttime="20190718 15:17:11.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:11.333" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54"}</msg>
<status status="PASS" endtime="20190718 15:17:11.333" starttime="20190718 15:17:11.332"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:11.334" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54"} </msg>
<msg timestamp="20190718 15:17:11.334" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:17:11.334" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54'}</msg>
<status status="PASS" endtime="20190718 15:17:11.334" starttime="20190718 15:17:11.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:11.334" starttime="20190718 15:17:11.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:11.335" starttime="20190718 15:17:11.334"></status>
</kw>
<msg timestamp="20190718 15:17:11.335" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54'}</msg>
<status status="PASS" endtime="20190718 15:17:11.335" starttime="20190718 15:17:11.332"></status>
</kw>
<msg timestamp="20190718 15:17:11.335" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54'}</msg>
<status status="PASS" endtime="20190718 15:17:11.335" starttime="20190718 15:17:09.534"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:17:11.335" level="INFO">${ret} = f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54</msg>
<status status="PASS" endtime="20190718 15:17:11.335" starttime="20190718 15:17:11.335"></status>
</kw>
<msg timestamp="20190718 15:17:11.336" level="INFO">${ret} = f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54</msg>
<status status="PASS" endtime="20190718 15:17:11.336" starttime="20190718 15:17:09.532"></status>
</kw>
<msg timestamp="20190718 15:17:11.336" level="INFO">${ret} = f8ea6ada073c592812de33d6603991d68742449ae0a8b3355aadeb8faa932c54</msg>
<status status="PASS" endtime="20190718 15:17:11.336" starttime="20190718 15:17:09.530"></status>
</kw>
<kw name="And Calculate gain of recieverAdd">
<assign>
<var>${GAIN}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${PTNAmount})+int(${PTNPoundage})</arg>
</arguments>
<assign>
<var>${invokeGain}</var>
</assign>
<msg timestamp="20190718 15:17:11.337" level="INFO">${invokeGain} = 4001</msg>
<status status="PASS" endtime="20190718 15:17:11.337" starttime="20190718 15:17:11.337"></status>
</kw>
<kw name="countRecieverPTN" library="utilDefined">
<arguments>
<arg>${invokeGain}</arg>
</arguments>
<assign>
<var>${GAIN}</var>
</assign>
<msg timestamp="20190718 15:17:11.338" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:17:11.338" starttime="20190718 15:17:11.337"></status>
</kw>
<msg timestamp="20190718 15:17:11.338" level="INFO">${GAIN} = 4001</msg>
<status status="PASS" endtime="20190718 15:17:11.338" starttime="20190718 15:17:11.336"></status>
</kw>
<kw name="And Request getbalance after create token">
<arguments>
<arg>${geneAdd}</arg>
<arg>${key}</arg>
<arg>${GAIN}</arg>
</arguments>
<assign>
<var>${PTN2}</var>
<var>${tokenGAIN}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:17:15.339" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:17:15.340" starttime="20190718 15:17:11.339"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result2}</var>
</assign>
<msg timestamp="20190718 15:17:16.368" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999815947', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'450006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:17:16.370" level="INFO">${result2} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:17:16.370" starttime="20190718 15:17:15.340"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken2}</var>
</assign>
<msg timestamp="20190718 15:17:16.371" level="INFO">${coinToken2} = 450006000</msg>
<status status="PASS" endtime="20190718 15:17:16.371" starttime="20190718 15:17:16.370"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result2}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN2}</var>
</assign>
<msg timestamp="20190718 15:17:16.373" level="INFO">${PTN2} = 999815947</msg>
<status status="PASS" endtime="20190718 15:17:16.373" starttime="20190718 15:17:16.372"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>float(${coinToken2})-float(${coinToken1})</arg>
</arguments>
<assign>
<var>${tokenGAIN}</var>
</assign>
<msg timestamp="20190718 15:17:16.380" level="FAIL">Variable '${coinToken1}' not found. Did you mean:
    ${coinToken2}</msg>
<status status="FAIL" endtime="20190718 15:17:16.380" starttime="20190718 15:17:16.373"></status>
</kw>
<status status="FAIL" endtime="20190718 15:17:16.381" starttime="20190718 15:17:11.339"></status>
</kw>
<doc>Verify Sender's PTN and Token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:17:16.383" critical="yes" starttime="20190718 15:17:01.680">Variable '${coinToken1}' not found. Did you mean:
    ${coinToken2}</status>
</test>
<status status="FAIL" endtime="20190718 15:17:16.397" starttime="20190718 15:17:01.671"></status>
</suite>
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt20Contract\zSupplyToken\supplyTokenForbid_SenderPTNToken.robot" id="s1-s6-s2" name="supplyTokenForbid SenderPTNToken">
<test id="s1-s6-s2-t1" name="Scenario: 20Contract- Supply token">
<kw name="Given CcinvokePass normal">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 15:17:16.424" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 15:17:16.424" starttime="20190718 15:17:16.424"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:16.425" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:16.425" starttime="20190718 15:17:16.424"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:16.425" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 15:17:16.425" starttime="20190718 15:17:16.425"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:16.426" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:16.426" starttime="20190718 15:17:16.426"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:17.437" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:17.438" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:17.438" starttime="20190718 15:17:16.426"></status>
</kw>
<msg timestamp="20190718 15:17:17.439" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:17.439" starttime="20190718 15:17:16.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:17.441" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]}
</msg>
<status status="PASS" endtime="20190718 15:17:17.441" starttime="20190718 15:17:17.440"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:17.449" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPu...</msg>
<status status="PASS" endtime="20190718 15:17:17.449" starttime="20190718 15:17:17.442"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:17.451" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT","P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9","P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT","P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari","P1BGFQk3szutPuYPR3xk1QBt62kH2d8xiHv","P16dnohTwkNYSX374eDg64z2h6StioE5vAS","P19rHogbVD6RdQDFdPcXBJmav3xPjnLHKRz","P1PXsNoBYsFW8kpMWSnBcx3FDmE14gAhhMx","P1M227jfUsb5zW7L34FSDMDGJaDD3NwxeVG","P18CQ7hGtmD2nnJtGnQLto6uwmfZ5rxPkm1","P14oSvs4yYrq4Pq9FsdDxtc2jhpbBWDT5CF","P1CG6gBgxeWBmcVLt17yWroXD4YZcdB8FWa"]} </msg>
<msg timestamp="20190718 15:17:17.451" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:17:17.451" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1qvjYJhaWaSWEoGLraPbuWMz2PRu9MzE9', u'P16F5PgrcXEgRDSWrVVEzdb1z4LR22EthLT', u'P1CWT8hzvRJvkrgkMB1eFY1ap8seVviEari'...</msg>
<status status="PASS" endtime="20190718 15:17:17.452" starttime="20190718 15:17:17.450"></status>
</kw>
<msg timestamp="20190718 15:17:17.453" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:17:17.453" starttime="20190718 15:17:16.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 15:17:17.455" level="INFO">${geneAdd} = P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT</msg>
<status status="PASS" endtime="20190718 15:17:17.455" starttime="20190718 15:17:17.454"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${crtTokenMethod}</arg>
<arg>${evidence}</arg>
<arg>${preTokenId}</arg>
<arg>${tokenDecimal}</arg>
<arg>${tokenAmount}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:17:17.458" level="INFO">${ccList} = [u'createToken', u'evidence', u'QA058', u'1', u'60000']</msg>
<status status="PASS" endtime="20190718 15:17:17.458" starttime="20190718 15:17:17.456"></status>
</kw>
<kw name="normalCcinvokePass" library="behaveKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Request CcinvokePass" library="normalKwd">
<arguments>
<arg>${commonResultCode}</arg>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${ContractId}</arg>
<arg>${ccList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccinvokeList}</var>
</assign>
<msg timestamp="20190718 15:17:17.466" level="INFO">${ccinvokeList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'createToken', u'evidence', u'QA058', u'1', u'60000'], u'1', 6...</msg>
<status status="PASS" endtime="20190718 15:17:17.466" starttime="20190718 15:17:17.464"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccinvokeList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:17.470" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:17.470" starttime="20190718 15:17:17.469"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:17.472" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:17:17.472" starttime="20190718 15:17:17.471"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:17.473" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:17.473" starttime="20190718 15:17:17.472"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:19.196" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["createToken", "evidence", "QA058", "1", "60000"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:19.196" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:19.196" starttime="20190718 15:17:17.473"></status>
</kw>
<msg timestamp="20190718 15:17:19.196" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:19.196" starttime="20190718 15:17:17.467"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:19.197" level="INFO">{"jsonrpc":"2.0","id":1,"result":"f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8"}
</msg>
<status status="PASS" endtime="20190718 15:17:19.197" starttime="20190718 15:17:19.197"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:19.198" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8"}</msg>
<status status="PASS" endtime="20190718 15:17:19.198" starttime="20190718 15:17:19.197"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 15:17:19.198" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8"} </msg>
<msg timestamp="20190718 15:17:19.198" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 15:17:19.199" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8'}</msg>
<status status="PASS" endtime="20190718 15:17:19.199" starttime="20190718 15:17:19.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:19.199" starttime="20190718 15:17:19.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 15:17:19.199" starttime="20190718 15:17:19.199"></status>
</kw>
<msg timestamp="20190718 15:17:19.200" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8'}</msg>
<status status="PASS" endtime="20190718 15:17:19.200" starttime="20190718 15:17:19.196"></status>
</kw>
<msg timestamp="20190718 15:17:19.200" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8'}</msg>
<status status="PASS" endtime="20190718 15:17:19.200" starttime="20190718 15:17:17.461"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${resp['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 15:17:19.201" level="INFO">${ret} = f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8</msg>
<status status="PASS" endtime="20190718 15:17:19.201" starttime="20190718 15:17:19.200"></status>
</kw>
<msg timestamp="20190718 15:17:19.201" level="INFO">${ret} = f4b4ebe263d2f498de8f7cb2994c94542480e6faa8d8ee3fdf40ce0fe5bdcfe8</msg>
<status status="PASS" endtime="20190718 15:17:19.201" starttime="20190718 15:17:17.458"></status>
</kw>
<status status="PASS" endtime="20190718 15:17:19.201" starttime="20190718 15:17:16.423"></status>
</kw>
<kw name="And Request getbalance before create token">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${PTN1}</var>
<var>${key}</var>
<var>${coinToken1}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190718 15:17:23.202" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20190718 15:17:23.202" starttime="20190718 15:17:19.202"></status>
</kw>
<kw name="Get Balance" library="createToken">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20190718 15:17:24.227" level="INFO">Current URL:http://localhost:8545/
Current Balance: {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107NFSZFBPYFY2Y650C': u'4000', u'CA072+093HREDY6FN5S5I4PU2-1': u'1', u'CA072+093HREDY6FN5S5I4PU2-3': u'1', u'CA072+093HREDY6FN5S5I4PU2-2': u'1', u'VOTE+0G7A3CIJ074IPB171L': u'60000', u'QA151+10QQ4T913VH0241F273': u'6000', u'PTN': u'999811946', u'CA081+0AW9LKTK7FTUD6KGLRI-36e5064b-01ca-48be-8d06-e15a8507042f': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-afb9391d-bd97-429f-b8e7-5df2f85f69d4': u'1', u'VOTE+0GR4XLYDMVCE45AHRZC': u'60000', u'QA084+0A11WA7JUEYPCG5FI312-f8a4655d-a048-45e3-8ff0-98abc8f9862a': u'1', u'QA077+09IICBPPCHRRBG7MG4F-1': u'1', u'QA077+09IICBPPCHRRBG7MG4F-2': u'1', u'QA077+09IICBPPCHRRBG7MG4F-3': u'1', u'QA077+09IICBPPCHRRBG7MG4F-4': u'1', u'QA077+09IICBPPCHRRBG7MG4F-5': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-c8fb7cbc-ed89-4fc9-ad01-f378a24c3fb2': u'1', u'QA051+10E7ORYPQIJB04AGTXS': u'6000', u'VOTE+0GM5XJOJF6LDXRJ3MUF': u'60000', u'CA080+0A12DEJHYXFIYX4LTRQ1-c96d12d5-b14c-4102-bd47-005a7e615d6a': u'1', u'QA053+103TBGLD82JVI7M4YIB': u'6000', u'CA070+09BW056HFQZNNDVD2NB-4': u'1', u'CA070+09BW056HFQZNNDVD2NB-5': u'1', u'CA070+09BW056HFQZNNDVD2NB-2': u'1', u'CA070+09BW056HFQZNNDVD2NB-3': u'1', u'CA070+09BW056HFQZNNDVD2NB-1': u'1', u'QA057+103KLW9IDPQ5UVU3WT8': u'450006000', u'QA084+0A11WA7JUEYPCG5FI312-cc19f228-a970-4651-9448-e3efbd2546a3': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-d9ec7380-1128-44d3-add4-b8bd7f03a167': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-4828bd72-5af4-4028-a605-d52556a73caf': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-e2c2b648-84c0-4437-8807-58706d1bb566': u'1', u'CA082+0AOA7UA4QP7OEP4LMUR-8d0afe45-a1f7-474f-8c49-2bee75209146': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-ffe79e7d-cf30-45ac-9a65-58e38d019cbe': u'1', u'QA054+10OECAYLOAHD1KOCL0O': u'5994', u'QA084+0A11WA7JUEYPCG5FI312-78a87722-4dbd-4a4d-9418-6a38fac9d630': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-4691696a-81b1-4a90-93a1-b76f5f93b13c': u'1', u'QA058+10M8SWMYQYVTPXVT1C2': u'6000', u'CA080+0A12DEJHYXFIYX4LTRQ1-6f853da2-8adf-4f99-aa37-5b27bcb741a9': u'1', u'QA084+0A11WA7JUEYPCG5FI312-f48faf0f-8adc-45e4-a392-60bf522565cc': u'1', u'CA081+0AW9LKTK7FTUD6KGLRI-0d258bf1-96d6-47f9-baf6-e475244bdbf7': u'1', u'QA052+10UA71YADMJ3Z569GUN': u'6000', u'CA082+0AOA7UA4QP7OEP4LMUR-b5541caf-a29f-43ef-9ee2-d3ebf09898c7': u'1', u'CA080+0A12DEJHYXFIYX4LTRQ1-7d3bcb47-445c-49f1-ab61-d3d47ea6afcf': u'1', u'QA084+0A11WA7JUEYPCG5FI312-33c9fe97-9461-4801-a6ec-b6ad5ae2bf90': u'1', u'CA071+0939Z4LSPZ67OIIE58I-4': u'1', u'CA071+0939Z4LSPZ67OIIE58I-5': u'1', u'CA071+0939Z4LSPZ67OIIE58I-2': u'1', u'CA071+0939Z4LSPZ67OIIE58I-3': u'1', u'VOTE+0GL156SPIFCQ6O58G5P': u'60000', u'CA071+0939Z4LSPZ67OIIE58I-1': u'1'}</msg>
<msg timestamp="20190718 15:17:24.228" level="INFO">${result1} = {u'CA081+0AW9LKTK7FTUD6KGLRI-f34948ec-06f0-4956-851d-972111339e6e': u'1', u'VOTE+0G7GM7ATWUBB2HVH25I': u'60000', u'CA072+093HREDY6FN5S5I4PU2-5': u'1', u'CA072+093HREDY6FN5S5I4PU2-4': u'1', u'QZ003+107...</msg>
<status status="PASS" endtime="20190718 15:17:24.228" starttime="20190718 15:17:23.203"></status>
</kw>
<kw name="Get Token Id" library="createToken">
<arguments>
<arg>${preTokenId}</arg>
<arg>${result1}</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20190718 15:17:24.230" level="INFO">${key} = QA058+10M8SWMYQYVTPXVT1C2</msg>
<status status="PASS" endtime="20190718 15:17:24.230" starttime="20190718 15:17:24.229"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>PTN</arg>
</arguments>
<assign>
<var>${PTN1}</var>
</assign>
<msg timestamp="20190718 15:17:24.231" level="INFO">${PTN1} = 999811946</msg>
<status status="PASS" endtime="20190718 15:17:24.231" starttime="20190718 15:17:24.230"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${result1}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${coinToken1}</var>
</assign>
<msg timestamp="20190718 15:17:24.232" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 15:17:24.232" starttime="20190718 15:17:24.231"></status>
</kw>
<msg timestamp="20190718 15:17:24.233" level="INFO">${PTN1} = 999811946</msg>
<msg timestamp="20190718 15:17:24.233" level="INFO">${key} = QA058+10M8SWMYQYVTPXVT1C2</msg>
<msg timestamp="20190718 15:17:24.233" level="INFO">${coinToken1} = 6000</msg>
<status status="PASS" endtime="20190718 15:17:24.233" starttime="20190718 15:17:19.202"></status>
</kw>
<kw name="When Create token of vote contract">
<arguments>
<arg>${geneAdd}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${supplyTokenMethod}</arg>
<arg>${preTokenId}</arg>
<arg>${supplyTokenAmount}</arg>
</arguments>
<assign>
<var>${ccTokenList}</var>
</assign>
<msg timestamp="20190718 15:17:24.237" level="INFO">${ccTokenList} = [u'supplyToken', u'QA058', u'1500000000']</msg>
<status status="PASS" endtime="20190718 15:17:24.238" starttime="20190718 15:17:24.237"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${recieverAdd}</arg>
<arg>${PTNAmount}</arg>
<arg>${PTNPoundage}</arg>
<arg>${20ContractId}</arg>
<arg>${ccTokenList}</arg>
<arg>${pwd}</arg>
<arg>${duration}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${ccList}</var>
</assign>
<msg timestamp="20190718 15:17:24.239" level="INFO">${ccList} = [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43', [u'supplyToken', u'QA058', u'1500000000'], u'1', 600000000, u'']</msg>
<status status="PASS" endtime="20190718 15:17:24.239" starttime="20190718 15:17:24.238"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${invokePsMethod}</arg>
<arg>${ccList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 15:17:24.242" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 15:17:24.242" starttime="20190718 15:17:24.241"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 15:17:24.244" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'contract_ccinvoketxPass', u'params': [u'P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT', u'P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc', u'4000', u'1', u'PCGTta3M4t3yXu8uRgkKvaWd2d8DRET...</msg>
<status status="PASS" endtime="20190718 15:17:24.244" starttime="20190718 15:17:24.243"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 15:17:24.246" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 15:17:24.246" starttime="20190718 15:17:24.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 15:17:26.036" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "contract_ccinvoketxPass", "params": ["P1BtYz6ekTmc4gQBzt4XL8NveJ71CEAALgT", "P1QL7vY6tMUXEuqrHqtBktiZdyiRRwic7Qc", "4000", "1", "PCGTta3M4t3yXu8uRgkKvaWd2d8DREThG43", ["supplyToken", "QA058", "1500000000"], "1", 600000000, ""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 15:17:26.036" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:26.036" starttime="20190718 15:17:24.247"></status>
</kw>
<msg timestamp="20190718 15:17:26.037" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 15:17:26.037" starttime="20190718 15:17:24.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 15:17:26.037" level="INFO">{"jsonrpc":"2.0","id":1,"result":"21ebe45b610f0a6cc06bda36e0bf3f6234f4cd8b6169c589db4d4cdd4f5aa8ed"}
</msg>
<status status="PASS" endtime="20190718 15:17:26.037" starttime="20190718 15:17:26.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.content}['jsonrpc']</arg>
<arg>"2.0"</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<msg timestamp="20190718 15:17:26.038" level="FAIL">Variable '${resp.content}' is string, not list or dictionary, and thus accessing item ''jsonrpc'' from it is not possible.</msg>
<status status="FAIL" endtime="20190718 15:17:26.038" starttime="20190718 15:17:26.037"></status>
</kw>
<status status="FAIL" endtime="20190718 15:17:26.038" starttime="20190718 15:17:24.236"></status>
</kw>
<doc>Verify Sender's PTN</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 15:17:26.038" critical="yes" starttime="20190718 15:17:16.422">Variable '${resp.content}' is string, not list or dictionary, and thus accessing item ''jsonrpc'' from it is not possible.</status>
</test>
<status status="FAIL" endtime="20190718 15:17:26.040" starttime="20190718 15:17:16.402"></status>
</suite>
<status status="FAIL" endtime="20190718 15:17:26.041" starttime="20190718 15:17:01.669"></status>
</suite>
<status status="FAIL" endtime="20190718 15:17:26.044" starttime="20190718 15:15:39.725"></status>
</suite>
<statistics>
<total>
<stat fail="7" pass="3">Critical Tests</stat>
<stat fail="7" pass="3">All Tests</stat>
</total>
<tag>
<stat fail="7" pass="3">normal</stat>
</tag>
<suite>
<stat fail="7" id="s1" name="crt20Contract" pass="3">crt20Contract</stat>
<stat fail="0" id="s1-s1" name="ccinvokePass" pass="3">crt20Contract.ccinvokePass</stat>
<stat fail="0" id="s1-s1-s1" name="ccinvoketxPass RecieverPTN" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass RecieverPTN</stat>
<stat fail="0" id="s1-s1-s2" name="ccinvoketxPass SenderPTN" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass SenderPTN</stat>
<stat fail="0" id="s1-s1-s3" name="ccinvoketxPass SenderTokenId" pass="1">crt20Contract.ccinvokePass.ccinvoketxPass SenderTokenId</stat>
<stat fail="1" id="s1-s2" name="Ccquery" pass="0">crt20Contract.Ccquery</stat>
<stat fail="1" id="s1-s2-s1" name="ccquery Normal" pass="0">crt20Contract.Ccquery.ccquery Normal</stat>
<stat fail="2" id="s1-s3" name="transferToken" pass="0">crt20Contract.transferToken</stat>
<stat fail="1" id="s1-s3-s1" name="transferToken recieverToken" pass="0">crt20Contract.transferToken.transferToken recieverToken</stat>
<stat fail="1" id="s1-s3-s2" name="transferToken senderTokenPTN" pass="0">crt20Contract.transferToken.transferToken senderTokenPTN</stat>
<stat fail="1" id="s1-s4" name="zChangeSupply" pass="0">crt20Contract.zChangeSupply</stat>
<stat fail="1" id="s1-s4-s1" name="ccinvoketxPass SenderPTN" pass="0">crt20Contract.zChangeSupply.ccinvoketxPass SenderPTN</stat>
<stat fail="1" id="s1-s5" name="zFrozToken" pass="0">crt20Contract.zFrozToken</stat>
<stat fail="1" id="s1-s5-s1" name="transferToken frozen senderToken" pass="0">crt20Contract.zFrozToken.transferToken frozen senderToken</stat>
<stat fail="2" id="s1-s6" name="zSupplyToken" pass="0">crt20Contract.zSupplyToken</stat>
<stat fail="1" id="s1-s6-s1" name="supplyTokenAllow SenderPTNToken" pass="0">crt20Contract.zSupplyToken.supplyTokenAllow SenderPTNToken</stat>
<stat fail="1" id="s1-s6-s2" name="supplyTokenForbid SenderPTNToken" pass="0">crt20Contract.zSupplyToken.supplyTokenForbid SenderPTNToken</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
