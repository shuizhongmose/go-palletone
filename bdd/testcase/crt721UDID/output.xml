<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190718 17:11:24.445" generator="Robot 3.1.2 (Python 2.7.15 on win32)">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt721UDID\zChangeSupply" id="s1" name="zChangeSupply">
<suite source="D:\GoProject\src\github.com\palletone\go-palletone\bdd\testcase\crt721UDID\zChangeSupply\ccinvoketxPass_SenderPTN.robot" id="s1-s1" name="ccinvoketxPass SenderPTN">
<test id="s1-s1-t1" name="Scenario: 721 Contract - Change token then supply token">
<kw name="Given Send the new address PTN">
<kw name="getGeneAdd" library="utilDefined">
<arguments>
<arg>${host}</arg>
</arguments>
<assign>
<var>${geneAdd}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190718 17:11:24.852" level="INFO">${list} = [u'']</msg>
<status status="PASS" endtime="20190718 17:11:24.852" starttime="20190718 17:11:24.850"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>personal_listAccounts</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 17:11:24.857" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 17:11:24.857" starttime="20190718 17:11:24.854"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 17:11:24.860" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [u''], u'id': 1}</msg>
<status status="PASS" endtime="20190718 17:11:24.861" starttime="20190718 17:11:24.858"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 17:11:24.862" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 17:11:24.865" starttime="20190718 17:11:24.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 17:11:25.904" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [""], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 17:11:25.904" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:25.904" starttime="20190718 17:11:24.867"></status>
</kw>
<msg timestamp="20190718 17:11:25.904" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:25.904" starttime="20190718 17:11:24.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 17:11:25.905" level="INFO">{"jsonrpc":"2.0","id":1,"result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX","P1Hia8M5BmCgy9o8SjsbR68dzUhATFebumh","P15WBdNUcjyLG4Azcjn9RaVkSAn3uDCdpo5"]}
</msg>
<status status="PASS" endtime="20190718 17:11:25.905" starttime="20190718 17:11:25.904"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:25.917" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDr...</msg>
<status status="PASS" endtime="20190718 17:11:25.917" starttime="20190718 17:11:25.906"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:25.918" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3","P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ","P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD","P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g","P13JeRaiNsvDrRmZXZG3psoNqxBmQZJt1MG","P1AXxCx9a2drWBcYJGNbeYcxteSvmGb2zax","P16hG5jqedSVkNUHxNCNHckv4qjV1qm3PVX","P1Hia8M5BmCgy9o8SjsbR68dzUhATFebumh","P15WBdNUcjyLG4Azcjn9RaVkSAn3uDCdpo5"]} </msg>
<msg timestamp="20190718 17:11:25.918" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 17:11:25.918" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P1B7hF4F8rET47evRYcusEiJ7zi2UMmu8oZ', u'P1DmdSCxq98s7dunKhVCUV2G6VRsZ38SpXD', u'P1LuUDBQq2FZd4GHG2pz4ydRxd6sYFMhN7g...</msg>
<status status="PASS" endtime="20190718 17:11:25.918" starttime="20190718 17:11:25.917"></status>
</kw>
<msg timestamp="20190718 17:11:25.918" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 17:11:25.918" starttime="20190718 17:11:24.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${geneAdd}</arg>
<arg>${geneAdd}</arg>
</arguments>
<msg timestamp="20190718 17:11:25.919" level="INFO">${geneAdd} = P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3</msg>
<status status="PASS" endtime="20190718 17:11:25.919" starttime="20190718 17:11:25.918"></status>
</kw>
<kw name="newAccount" library="utilDefined">
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 17:11:25.919" level="INFO">${transList} = [u'1']</msg>
<status status="PASS" endtime="20190718 17:11:25.919" starttime="20190718 17:11:25.919"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>${newAccount}</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 17:11:25.920" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 17:11:25.920" starttime="20190718 17:11:25.920"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 17:11:25.921" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 17:11:25.921" starttime="20190718 17:11:25.920"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 17:11:25.922" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 17:11:25.922" starttime="20190718 17:11:25.921"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 17:11:27.729" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 17:11:27.730" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:27.730" starttime="20190718 17:11:25.922"></status>
</kw>
<msg timestamp="20190718 17:11:27.730" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:27.730" starttime="20190718 17:11:25.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:27.731" level="INFO">${jsonRes} = {"id":1,"jsonrpc":"2.0","result":"P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj"}</msg>
<status status="PASS" endtime="20190718 17:11:27.731" starttime="20190718 17:11:27.730"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:27.731" level="INFO">To JSON using : content={"id":1,"jsonrpc":"2.0","result":"P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj"} </msg>
<msg timestamp="20190718 17:11:27.731" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 17:11:27.731" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj'}</msg>
<status status="PASS" endtime="20190718 17:11:27.731" starttime="20190718 17:11:27.731"></status>
</kw>
<msg timestamp="20190718 17:11:27.731" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'result': u'P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj'}</msg>
<status status="PASS" endtime="20190718 17:11:27.731" starttime="20190718 17:11:25.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${reciever}</arg>
<arg>${jsonRes['result']}</arg>
</arguments>
<msg timestamp="20190718 17:11:27.733" level="INFO">${reciever} = P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj</msg>
<status status="PASS" endtime="20190718 17:11:27.733" starttime="20190718 17:11:27.732"></status>
</kw>
<kw name="And normalCrtTrans" library="behaveKwd">
<arguments>
<arg>${geneAdd}</arg>
<arg>${reciever}</arg>
<arg>100000</arg>
<arg>${PTNPoundage}</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<kw name="Request create transaction" library="normalKwd">
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${senderAddr}</arg>
<arg>${recieverAddr}</arg>
<arg>${senderPTN}</arg>
<arg>${Poundage}</arg>
</arguments>
<assign>
<var>${transList}</var>
</assign>
<msg timestamp="20190718 17:11:27.735" level="INFO">${transList} = [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj', u'100000', u'1']</msg>
<status status="PASS" endtime="20190718 17:11:27.735" starttime="20190718 17:11:27.735"></status>
</kw>
<kw name="setPostRequest" library="utilDefined">
<arguments>
<arg>${host}</arg>
<arg>wallet_CreateRawTransaction</arg>
<arg>${transList}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Connection=close</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20190718 17:11:27.736" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Connection': u'close'}</msg>
<status status="PASS" endtime="20190718 17:11:27.736" starttime="20190718 17:11:27.735"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${transList}</arg>
<arg>id=${1}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190718 17:11:27.736" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_CreateRawTransaction', u'params': [u'P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3', u'P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj', u'100000', u'1'], u'id': 1}</msg>
<status status="PASS" endtime="20190718 17:11:27.736" starttime="20190718 17:11:27.736"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190718 17:11:27.737" level="INFO">Creating Session using : alias=trans, url=http://localhost:8545/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190718 17:11:27.737" starttime="20190718 17:11:27.737"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>trans</arg>
<arg>${host}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190718 17:11:28.746" level="INFO">Post Request using : alias=trans, uri=http://localhost:8545/, data={"jsonrpc": "2.0", "method": "wallet_CreateRawTransaction", "params": ["P1KXuo6QJ8H1uouuMpuAEdM4kMsccszARL3", "P14afu9gGymh5pHJC5Ej9vxnj2yVCiVQDbj", "100000", "1"], "id": 1}, headers={u'Content-Type': u'application/json', u'Connection': u'close'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190718 17:11:28.747" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:28.747" starttime="20190718 17:11:27.737"></status>
</kw>
<msg timestamp="20190718 17:11:28.747" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190718 17:11:28.747" starttime="20190718 17:11:27.735"></status>
</kw>
<kw name="resultToJson" library="utilDefined">
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190718 17:11:28.750" level="INFO">{"jsonrpc":"2.0","id":1,"error":{"code":-32601,"message":"The method wallet_CreateRawTransaction does not exist/is not available"}}
</msg>
<status status="PASS" endtime="20190718 17:11:28.751" starttime="20190718 17:11:28.749"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>demjson.encode(${resp.content})</arg>
<arg>demjson</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:28.753" level="INFO">${jsonRes} = {"error":{"code":-32601,"message":"The method wallet_CreateRawTransaction does not exist/is not available"},"id":1,"jsonrpc":"2.0"}</msg>
<status status="PASS" endtime="20190718 17:11:28.753" starttime="20190718 17:11:28.751"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${jsonRes}</arg>
</arguments>
<assign>
<var>${jsonRes}</var>
</assign>
<msg timestamp="20190718 17:11:28.754" level="INFO">To JSON using : content={"error":{"code":-32601,"message":"The method wallet_CreateRawTransaction does not exist/is not available"},"id":1,"jsonrpc":"2.0"} </msg>
<msg timestamp="20190718 17:11:28.754" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190718 17:11:28.754" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_CreateRawTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 17:11:28.754" starttime="20190718 17:11:28.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${jsonRes['jsonrpc']}</arg>
<arg>2.0</arg>
<arg>msg="jsonrpc:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 17:11:28.755" starttime="20190718 17:11:28.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>str(${jsonRes['id']})</arg>
<arg>1</arg>
<arg>msg="id:failed"</arg>
</arguments>
<status status="PASS" endtime="20190718 17:11:28.756" starttime="20190718 17:11:28.755"></status>
</kw>
<msg timestamp="20190718 17:11:28.756" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_CreateRawTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 17:11:28.756" starttime="20190718 17:11:28.748"></status>
</kw>
<msg timestamp="20190718 17:11:28.757" level="INFO">${jsonRes} = {u'jsonrpc': u'2.0', u'id': 1, u'error': {u'message': u'The method wallet_CreateRawTransaction does not exist/is not available', u'code': -32601}}</msg>
<status status="PASS" endtime="20190718 17:11:28.757" starttime="20190718 17:11:27.734"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${jsonRes['result']}</arg>
<arg>${commonResultCode}</arg>
<arg>msg="result:does't match Result expression"</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190718 17:11:28.758" level="FAIL">Resolving variable '${jsonRes['result']}' failed: KeyError: 'result'</msg>
<status status="FAIL" endtime="20190718 17:11:28.758" starttime="20190718 17:11:28.757"></status>
</kw>
<status status="FAIL" endtime="20190718 17:11:28.758" starttime="20190718 17:11:27.733"></status>
</kw>
<status status="FAIL" endtime="20190718 17:11:28.758" starttime="20190718 17:11:24.847"></status>
</kw>
<doc>Verify Sender's PTN and token</doc>
<tags>
<tag>normal</tag>
</tags>
<status status="FAIL" endtime="20190718 17:11:28.759" critical="yes" starttime="20190718 17:11:24.844">Resolving variable '${jsonRes['result']}' failed: KeyError: 'result'</status>
</test>
<status status="FAIL" endtime="20190718 17:11:28.761" starttime="20190718 17:11:24.472"></status>
</suite>
<status status="FAIL" endtime="20190718 17:11:28.763" starttime="20190718 17:11:24.448"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">normal</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="zChangeSupply" pass="0">zChangeSupply</stat>
<stat fail="1" id="s1-s1" name="ccinvoketxPass SenderPTN" pass="0">zChangeSupply.ccinvoketxPass SenderPTN</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
