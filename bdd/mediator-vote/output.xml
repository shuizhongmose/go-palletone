<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190624 10:38:03.372" generator="Robot 3.1.2 (Python 2.7.15rc1 on linux2)">
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote" id="s1" name="Mediator-Vote">
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-change" id="s1-s1" name="step-Mediator-change">
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-change/step1-voteMediator.robot" id="s1-s1-s1" name="step1-voteMediator">
<test id="s1-s1-s1-t1" name="mediatorvote">
<kw type="setup" name="beforeVote" library="setups">
<kw name="queryTokenHolder" library="pubFuncs">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:38:03.583" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:38:03.583" starttime="20190624 10:38:03.583"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:03.583" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:38:03.583" starttime="20190624 10:38:03.583"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${personalListAccountsMethod}</arg>
<arg>${params}</arg>
<arg>queryTokenHolder</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:03.585" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:03.585" starttime="20190624 10:38:03.584"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:03.586" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:03.586" starttime="20190624 10:38:03.585"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:03.587" level="INFO">Creating Session using : alias=queryTokenHolder, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:03.587" starttime="20190624 10:38:03.586"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:03.591" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7fab3bd4f510&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8595</msg>
<msg timestamp="20190624 10:38:03.794" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7fab3bd4f6d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8595</msg>
<msg timestamp="20190624 10:38:03.796" level="INFO">Post Request using : alias=queryTokenHolder, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:03.796" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:03.796" starttime="20190624 10:38:03.587"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:03.797" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7","P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG"]}
 </msg>
<msg timestamp="20190624 10:38:03.797" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:03.797" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4...</msg>
<status status="PASS" endtime="20190624 10:38:03.797" starttime="20190624 10:38:03.797"></status>
</kw>
<msg timestamp="20190624 10:38:03.798" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4...</msg>
<status status="PASS" endtime="20190624 10:38:03.798" starttime="20190624 10:38:03.583"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:03.798" starttime="20190624 10:38:03.798"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${accounts}</var>
</assign>
<msg timestamp="20190624 10:38:03.799" level="INFO">${accounts} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF',...</msg>
<status status="PASS" endtime="20190624 10:38:03.799" starttime="20190624 10:38:03.798"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${accounts}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:38:03.799" level="INFO">${firstAddr} = P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:38:03.799" starttime="20190624 10:38:03.799"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:03.800" level="INFO">${tokenHolder} = P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:38:03.800" starttime="20190624 10:38:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tokenHolder}</arg>
</arguments>
<msg timestamp="20190624 10:38:03.801" level="INFO">P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:38:03.801" starttime="20190624 10:38:03.800"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:03.801" starttime="20190624 10:38:03.582"></status>
</kw>
<kw name="newAccounts" library="setups">
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user1}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:03.802" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:38:03.802" starttime="20190624 10:38:03.802"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:03.804" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:03.804" starttime="20190624 10:38:03.803"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:03.805" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:03.805" starttime="20190624 10:38:03.804"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:03.805" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:03.805" starttime="20190624 10:38:03.805"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:04.509" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:04.509" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:04.509" starttime="20190624 10:38:03.806"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:04.510" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr"}
 </msg>
<msg timestamp="20190624 10:38:04.510" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:04.510" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr'}</msg>
<status status="PASS" endtime="20190624 10:38:04.510" starttime="20190624 10:38:04.509"></status>
</kw>
<msg timestamp="20190624 10:38:04.510" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr'}</msg>
<status status="PASS" endtime="20190624 10:38:04.510" starttime="20190624 10:38:03.803"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:04.511" starttime="20190624 10:38:04.510"></status>
</kw>
<msg timestamp="20190624 10:38:04.511" level="INFO">${user1} = P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr</msg>
<status status="PASS" endtime="20190624 10:38:04.511" starttime="20190624 10:38:03.802"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount}</arg>
<arg>${user1}</arg>
</arguments>
<msg timestamp="20190624 10:38:04.512" level="INFO">${userAccount} = P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr</msg>
<status status="PASS" endtime="20190624 10:38:04.512" starttime="20190624 10:38:04.511"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:38:05.513" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:38:05.513" starttime="20190624 10:38:04.512"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:05.514" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:38:05.514" starttime="20190624 10:38:05.514"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:05.515" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:05.515" starttime="20190624 10:38:05.515"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:05.516" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:05.516" starttime="20190624 10:38:05.516"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:05.517" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:05.517" starttime="20190624 10:38:05.516"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:06.221" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:06.221" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:06.221" starttime="20190624 10:38:05.517"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:06.222" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT"}
 </msg>
<msg timestamp="20190624 10:38:06.222" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:06.222" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT'}</msg>
<status status="PASS" endtime="20190624 10:38:06.222" starttime="20190624 10:38:06.221"></status>
</kw>
<msg timestamp="20190624 10:38:06.222" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT'}</msg>
<status status="PASS" endtime="20190624 10:38:06.222" starttime="20190624 10:38:05.514"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:06.223" starttime="20190624 10:38:06.222"></status>
</kw>
<msg timestamp="20190624 10:38:06.223" level="INFO">${user2} = P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT</msg>
<status status="PASS" endtime="20190624 10:38:06.223" starttime="20190624 10:38:05.513"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount2}</arg>
<arg>${user2}</arg>
</arguments>
<msg timestamp="20190624 10:38:06.224" level="INFO">${userAccount2} = P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT</msg>
<status status="PASS" endtime="20190624 10:38:06.224" starttime="20190624 10:38:06.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:38:07.225" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:38:07.225" starttime="20190624 10:38:06.224"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:07.226" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:38:07.226" starttime="20190624 10:38:07.225"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:07.227" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:07.227" starttime="20190624 10:38:07.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:07.228" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:07.228" starttime="20190624 10:38:07.227"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:07.228" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:07.229" starttime="20190624 10:38:07.228"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:07.929" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:07.929" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:07.929" starttime="20190624 10:38:07.229"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:07.930" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF"}
 </msg>
<msg timestamp="20190624 10:38:07.930" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:07.930" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF'}</msg>
<status status="PASS" endtime="20190624 10:38:07.930" starttime="20190624 10:38:07.929"></status>
</kw>
<msg timestamp="20190624 10:38:07.930" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF'}</msg>
<status status="PASS" endtime="20190624 10:38:07.930" starttime="20190624 10:38:07.226"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:07.931" starttime="20190624 10:38:07.930"></status>
</kw>
<msg timestamp="20190624 10:38:07.931" level="INFO">${user3} = P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF</msg>
<status status="PASS" endtime="20190624 10:38:07.931" starttime="20190624 10:38:07.225"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount3}</arg>
<arg>${user3}</arg>
</arguments>
<msg timestamp="20190624 10:38:07.931" level="INFO">${userAccount3} = P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF</msg>
<status status="PASS" endtime="20190624 10:38:07.932" starttime="20190624 10:38:07.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:38:08.932" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:38:08.932" starttime="20190624 10:38:07.932"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:08.933" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:38:08.933" starttime="20190624 10:38:08.933"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:08.934" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:08.934" starttime="20190624 10:38:08.934"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:08.935" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:08.935" starttime="20190624 10:38:08.934"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:08.936" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:08.936" starttime="20190624 10:38:08.935"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:09.642" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:09.642" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:09.642" starttime="20190624 10:38:08.936"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:09.643" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H"}
 </msg>
<msg timestamp="20190624 10:38:09.643" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:09.643" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H'}</msg>
<status status="PASS" endtime="20190624 10:38:09.643" starttime="20190624 10:38:09.642"></status>
</kw>
<msg timestamp="20190624 10:38:09.643" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H'}</msg>
<status status="PASS" endtime="20190624 10:38:09.643" starttime="20190624 10:38:08.933"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:09.644" starttime="20190624 10:38:09.643"></status>
</kw>
<msg timestamp="20190624 10:38:09.644" level="INFO">${user4} = P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H</msg>
<status status="PASS" endtime="20190624 10:38:09.644" starttime="20190624 10:38:08.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount4}</arg>
<arg>${user4}</arg>
</arguments>
<msg timestamp="20190624 10:38:09.645" level="INFO">${userAccount4} = P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H</msg>
<status status="PASS" endtime="20190624 10:38:09.645" starttime="20190624 10:38:09.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:38:10.646" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:38:10.646" starttime="20190624 10:38:09.645"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user5}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:10.647" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:38:10.647" starttime="20190624 10:38:10.647"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:10.649" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:10.649" starttime="20190624 10:38:10.648"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:10.650" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:10.650" starttime="20190624 10:38:10.649"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:10.650" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:10.650" starttime="20190624 10:38:10.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:11.354" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:11.354" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:11.354" starttime="20190624 10:38:10.651"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:11.355" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX"}
 </msg>
<msg timestamp="20190624 10:38:11.355" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:11.355" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX'}</msg>
<status status="PASS" endtime="20190624 10:38:11.355" starttime="20190624 10:38:11.354"></status>
</kw>
<msg timestamp="20190624 10:38:11.355" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX'}</msg>
<status status="PASS" endtime="20190624 10:38:11.355" starttime="20190624 10:38:10.647"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:11.356" starttime="20190624 10:38:11.355"></status>
</kw>
<msg timestamp="20190624 10:38:11.356" level="INFO">${user5} = P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX</msg>
<status status="PASS" endtime="20190624 10:38:11.356" starttime="20190624 10:38:10.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount5}</arg>
<arg>${user5}</arg>
</arguments>
<msg timestamp="20190624 10:38:11.357" level="INFO">${userAccount5} = P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX</msg>
<status status="PASS" endtime="20190624 10:38:11.357" starttime="20190624 10:38:11.356"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:11.357" starttime="20190624 10:38:03.801"></status>
</kw>
<kw name="transferPTNToUser" library="setups">
<kw name="transferPTN" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:11.358" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', u'10000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:38:11.358" starttime="20190624 10:38:11.358"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:11.359" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:11.359" starttime="20190624 10:38:11.359"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:11.360" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', u'10000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:11.360" starttime="20190624 10:38:11.360"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:11.361" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:11.361" starttime="20190624 10:38:11.361"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:12.067" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr", "10000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:12.067" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:12.068" starttime="20190624 10:38:11.361"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:12.068" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0xafa5914bb8340722157187105a17953023da308b6b62bbf9b859da2fce8607ab"}
 </msg>
<msg timestamp="20190624 10:38:12.068" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:12.068" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xafa5914bb8340722157187105a17953023da308b6b62bbf9b859da2fce8607ab'}</msg>
<status status="PASS" endtime="20190624 10:38:12.068" starttime="20190624 10:38:12.068"></status>
</kw>
<msg timestamp="20190624 10:38:12.069" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xafa5914bb8340722157187105a17953023da308b6b62bbf9b859da2fce8607ab'}</msg>
<status status="PASS" endtime="20190624 10:38:12.069" starttime="20190624 10:38:11.358"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:12.069" starttime="20190624 10:38:12.069"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:12.069" starttime="20190624 10:38:11.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:38:12.070" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:38:12.070" starttime="20190624 10:38:12.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:17.071" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:17.071" starttime="20190624 10:38:12.070"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:17.072" level="INFO">${params} = [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr']</msg>
<status status="PASS" endtime="20190624 10:38:17.072" starttime="20190624 10:38:17.072"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:17.073" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:17.074" starttime="20190624 10:38:17.073"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:17.074" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:17.074" starttime="20190624 10:38:17.074"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:17.075" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:17.075" starttime="20190624 10:38:17.074"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:17.079" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:17.079" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:17.079" starttime="20190624 10:38:17.075"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:17.080" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20190624 10:38:17.080" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:17.080" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20190624 10:38:17.080" starttime="20190624 10:38:17.079"></status>
</kw>
<msg timestamp="20190624 10:38:17.080" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20190624 10:38:17.080" starttime="20190624 10:38:17.073"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:17.081" starttime="20190624 10:38:17.080"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:17.081" starttime="20190624 10:38:17.081"></status>
</kw>
<msg timestamp="20190624 10:38:17.081" level="INFO">${balance} = 10000</msg>
<status status="PASS" endtime="20190624 10:38:17.082" starttime="20190624 10:38:17.072"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:17.082" starttime="20190624 10:38:17.082"></status>
</kw>
<kw name="transferPTN2" library="pubFuncs">
<arguments>
<arg>${userAccount2}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount2}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:17.083" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', u'20000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:38:17.083" starttime="20190624 10:38:17.083"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:17.084" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:17.085" starttime="20190624 10:38:17.084"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:17.085" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', u'20000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:17.085" starttime="20190624 10:38:17.085"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:17.086" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:17.086" starttime="20190624 10:38:17.086"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:17.791" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT", "20000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:17.791" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:17.791" starttime="20190624 10:38:17.086"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:17.792" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0xade411669d08eb7f579fe900337f2a705cd6897561e36bdac822f406f22f959f"}
 </msg>
<msg timestamp="20190624 10:38:17.792" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:17.792" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xade411669d08eb7f579fe900337f2a705cd6897561e36bdac822f406f22f959f'}</msg>
<status status="PASS" endtime="20190624 10:38:17.792" starttime="20190624 10:38:17.791"></status>
</kw>
<msg timestamp="20190624 10:38:17.792" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xade411669d08eb7f579fe900337f2a705cd6897561e36bdac822f406f22f959f'}</msg>
<status status="PASS" endtime="20190624 10:38:17.792" starttime="20190624 10:38:17.083"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:17.793" starttime="20190624 10:38:17.792"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:17.793" starttime="20190624 10:38:17.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:38:17.793" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:38:17.793" starttime="20190624 10:38:17.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:22.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:22.795" starttime="20190624 10:38:17.793"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount2}</arg>
</arguments>
<assign>
<var>${balance2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:22.796" level="INFO">${params} = [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT']</msg>
<status status="PASS" endtime="20190624 10:38:22.796" starttime="20190624 10:38:22.796"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:22.798" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:22.798" starttime="20190624 10:38:22.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:22.798" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:22.798" starttime="20190624 10:38:22.798"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:22.799" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:22.799" starttime="20190624 10:38:22.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:22.803" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:22.803" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:22.804" starttime="20190624 10:38:22.799"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:22.804" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"20000"}}
 </msg>
<msg timestamp="20190624 10:38:22.804" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:22.804" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'20000'}}</msg>
<status status="PASS" endtime="20190624 10:38:22.804" starttime="20190624 10:38:22.804"></status>
</kw>
<msg timestamp="20190624 10:38:22.805" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'20000'}}</msg>
<status status="PASS" endtime="20190624 10:38:22.805" starttime="20190624 10:38:22.797"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:22.805" starttime="20190624 10:38:22.805"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:22.806" starttime="20190624 10:38:22.805"></status>
</kw>
<msg timestamp="20190624 10:38:22.806" level="INFO">${balance2} = 20000</msg>
<status status="PASS" endtime="20190624 10:38:22.806" starttime="20190624 10:38:22.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance2}</arg>
<arg>${amount2}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:22.806" starttime="20190624 10:38:22.806"></status>
</kw>
<kw name="transferPTN3" library="pubFuncs">
<arguments>
<arg>${userAccount3}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount3}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:22.807" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', u'30000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:38:22.808" starttime="20190624 10:38:22.807"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:22.809" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:22.809" starttime="20190624 10:38:22.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:22.809" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', u'30000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:22.809" starttime="20190624 10:38:22.809"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:22.810" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:22.810" starttime="20190624 10:38:22.810"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:23.513" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF", "30000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:23.514" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:23.514" starttime="20190624 10:38:22.810"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:23.514" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x657643dae0c099510103d907e41e0a79530de06f655e4fe4bcfe3ea97a243cbf"}
 </msg>
<msg timestamp="20190624 10:38:23.514" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:23.515" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x657643dae0c099510103d907e41e0a79530de06f655e4fe4bcfe3ea97a243cbf'}</msg>
<status status="PASS" endtime="20190624 10:38:23.515" starttime="20190624 10:38:23.514"></status>
</kw>
<msg timestamp="20190624 10:38:23.515" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x657643dae0c099510103d907e41e0a79530de06f655e4fe4bcfe3ea97a243cbf'}</msg>
<status status="PASS" endtime="20190624 10:38:23.515" starttime="20190624 10:38:22.808"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:23.515" starttime="20190624 10:38:23.515"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:23.515" starttime="20190624 10:38:22.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:38:23.516" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:38:23.516" starttime="20190624 10:38:23.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:28.517" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:28.517" starttime="20190624 10:38:23.516"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount3}</arg>
</arguments>
<assign>
<var>${balance3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:28.519" level="INFO">${params} = [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF']</msg>
<status status="PASS" endtime="20190624 10:38:28.519" starttime="20190624 10:38:28.518"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:28.520" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:28.520" starttime="20190624 10:38:28.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:28.522" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:28.522" starttime="20190624 10:38:28.520"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:28.522" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:28.523" starttime="20190624 10:38:28.522"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:28.526" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:28.526" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:28.527" starttime="20190624 10:38:28.523"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:28.527" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"30000"}}
 </msg>
<msg timestamp="20190624 10:38:28.527" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:28.527" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'30000'}}</msg>
<status status="PASS" endtime="20190624 10:38:28.527" starttime="20190624 10:38:28.527"></status>
</kw>
<msg timestamp="20190624 10:38:28.528" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'30000'}}</msg>
<status status="PASS" endtime="20190624 10:38:28.528" starttime="20190624 10:38:28.519"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:28.528" starttime="20190624 10:38:28.528"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:28.528" starttime="20190624 10:38:28.528"></status>
</kw>
<msg timestamp="20190624 10:38:28.529" level="INFO">${balance3} = 30000</msg>
<status status="PASS" endtime="20190624 10:38:28.529" starttime="20190624 10:38:28.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance3}</arg>
<arg>${amount3}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:28.529" starttime="20190624 10:38:28.529"></status>
</kw>
<kw name="transferPTN4" library="pubFuncs">
<arguments>
<arg>${userAccount4}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount4}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:28.530" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', u'40000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:38:28.531" starttime="20190624 10:38:28.530"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:28.532" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:28.532" starttime="20190624 10:38:28.531"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:28.532" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', u'40000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:28.532" starttime="20190624 10:38:28.532"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:28.533" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:28.533" starttime="20190624 10:38:28.533"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:29.241" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H", "40000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:29.241" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:29.241" starttime="20190624 10:38:28.533"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:29.241" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x9b566752ce39d5999c0deb29134086b19d42f7385177f3f705598a903959ca89"}
 </msg>
<msg timestamp="20190624 10:38:29.241" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:29.242" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x9b566752ce39d5999c0deb29134086b19d42f7385177f3f705598a903959ca89'}</msg>
<status status="PASS" endtime="20190624 10:38:29.242" starttime="20190624 10:38:29.241"></status>
</kw>
<msg timestamp="20190624 10:38:29.242" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x9b566752ce39d5999c0deb29134086b19d42f7385177f3f705598a903959ca89'}</msg>
<status status="PASS" endtime="20190624 10:38:29.242" starttime="20190624 10:38:28.531"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:29.242" starttime="20190624 10:38:29.242"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:29.242" starttime="20190624 10:38:28.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:38:29.243" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:38:29.243" starttime="20190624 10:38:29.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:34.244" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:34.244" starttime="20190624 10:38:29.243"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount4}</arg>
</arguments>
<assign>
<var>${balance4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:34.245" level="INFO">${params} = [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H']</msg>
<status status="PASS" endtime="20190624 10:38:34.245" starttime="20190624 10:38:34.244"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:34.246" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:34.246" starttime="20190624 10:38:34.245"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:34.247" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:34.247" starttime="20190624 10:38:34.246"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:34.247" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:34.247" starttime="20190624 10:38:34.247"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:34.251" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:34.251" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:34.251" starttime="20190624 10:38:34.248"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:34.252" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"40000"}}
 </msg>
<msg timestamp="20190624 10:38:34.252" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:34.252" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'40000'}}</msg>
<status status="PASS" endtime="20190624 10:38:34.252" starttime="20190624 10:38:34.252"></status>
</kw>
<msg timestamp="20190624 10:38:34.252" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'40000'}}</msg>
<status status="PASS" endtime="20190624 10:38:34.252" starttime="20190624 10:38:34.245"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:34.253" starttime="20190624 10:38:34.253"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:34.253" starttime="20190624 10:38:34.253"></status>
</kw>
<msg timestamp="20190624 10:38:34.254" level="INFO">${balance4} = 40000</msg>
<status status="PASS" endtime="20190624 10:38:34.254" starttime="20190624 10:38:34.244"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance4}</arg>
<arg>${amount4}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:34.254" starttime="20190624 10:38:34.254"></status>
</kw>
<kw name="transferPTN5" library="pubFuncs">
<arguments>
<arg>${userAccount5}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount5}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:34.255" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', u'50000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:38:34.255" starttime="20190624 10:38:34.255"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:34.256" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:34.256" starttime="20190624 10:38:34.256"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:34.258" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', u'50000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:34.258" starttime="20190624 10:38:34.257"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:34.258" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:34.258" starttime="20190624 10:38:34.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:34.967" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX", "50000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:34.967" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:34.967" starttime="20190624 10:38:34.259"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:34.968" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0xba485b76f8c3f47265974f200a44ff62b9951449d974301df79a955fc2470c37"}
 </msg>
<msg timestamp="20190624 10:38:34.968" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:34.968" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xba485b76f8c3f47265974f200a44ff62b9951449d974301df79a955fc2470c37'}</msg>
<status status="PASS" endtime="20190624 10:38:34.968" starttime="20190624 10:38:34.968"></status>
</kw>
<msg timestamp="20190624 10:38:34.968" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0xba485b76f8c3f47265974f200a44ff62b9951449d974301df79a955fc2470c37'}</msg>
<status status="PASS" endtime="20190624 10:38:34.968" starttime="20190624 10:38:34.255"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:34.969" starttime="20190624 10:38:34.969"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:34.969" starttime="20190624 10:38:34.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:38:34.969" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:38:34.969" starttime="20190624 10:38:34.969"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:39.971" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:39.971" starttime="20190624 10:38:34.970"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount5}</arg>
</arguments>
<assign>
<var>${balance5}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:39.972" level="INFO">${params} = [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX']</msg>
<status status="PASS" endtime="20190624 10:38:39.972" starttime="20190624 10:38:39.972"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:39.973" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:39.973" starttime="20190624 10:38:39.973"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:39.974" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:39.974" starttime="20190624 10:38:39.973"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:39.974" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:39.975" starttime="20190624 10:38:39.974"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:39.979" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:39.979" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:39.979" starttime="20190624 10:38:39.975"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:39.980" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"50000"}}
 </msg>
<msg timestamp="20190624 10:38:39.980" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:39.980" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'50000'}}</msg>
<status status="PASS" endtime="20190624 10:38:39.980" starttime="20190624 10:38:39.979"></status>
</kw>
<msg timestamp="20190624 10:38:39.980" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'50000'}}</msg>
<status status="PASS" endtime="20190624 10:38:39.980" starttime="20190624 10:38:39.972"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:39.981" starttime="20190624 10:38:39.980"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:39.981" starttime="20190624 10:38:39.981"></status>
</kw>
<msg timestamp="20190624 10:38:39.981" level="INFO">${balance5} = 50000</msg>
<status status="PASS" endtime="20190624 10:38:39.981" starttime="20190624 10:38:39.971"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance5}</arg>
<arg>${amount5}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:39.982" starttime="20190624 10:38:39.982"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:39.982" starttime="20190624 10:38:11.357"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:39.982" starttime="20190624 10:38:03.582"></status>
</kw>
<kw name="Given user unlock its account succeed">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>" user unlock its account succeed"</arg>
</arguments>
<msg timestamp="20190624 10:38:39.983" level="INFO">" user unlock its account succeed"</msg>
<status status="PASS" endtime="20190624 10:38:39.983" starttime="20190624 10:38:39.983"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:39.984" level="INFO">${params} = [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:38:39.984" starttime="20190624 10:38:39.984"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:39.985" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:39.985" starttime="20190624 10:38:39.985"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:39.986" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:39.986" starttime="20190624 10:38:39.986"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:39.987" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:39.987" starttime="20190624 10:38:39.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:40.694" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:40.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:40.694" starttime="20190624 10:38:39.987"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:40.694" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:38:40.695" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:40.695" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:40.695" starttime="20190624 10:38:40.694"></status>
</kw>
<msg timestamp="20190624 10:38:40.695" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:40.695" starttime="20190624 10:38:39.984"></status>
</kw>
<msg timestamp="20190624 10:38:40.695" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:40.695" starttime="20190624 10:38:39.983"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount2}</arg>
</arguments>
<assign>
<var>${respJson2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:40.696" level="INFO">${params} = [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:38:40.696" starttime="20190624 10:38:40.696"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:40.697" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:40.697" starttime="20190624 10:38:40.697"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:40.698" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:40.698" starttime="20190624 10:38:40.697"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:40.698" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:40.699" starttime="20190624 10:38:40.698"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:41.400" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:41.400" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:41.400" starttime="20190624 10:38:40.699"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:41.401" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:38:41.401" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:41.401" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:41.401" starttime="20190624 10:38:41.400"></status>
</kw>
<msg timestamp="20190624 10:38:41.401" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:41.401" starttime="20190624 10:38:40.696"></status>
</kw>
<msg timestamp="20190624 10:38:41.401" level="INFO">${respJson2} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:41.401" starttime="20190624 10:38:40.695"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount3}</arg>
</arguments>
<assign>
<var>${respJson3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:41.402" level="INFO">${params} = [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:38:41.403" starttime="20190624 10:38:41.402"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:41.404" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:41.404" starttime="20190624 10:38:41.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:41.404" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:41.404" starttime="20190624 10:38:41.404"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:41.405" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:41.405" starttime="20190624 10:38:41.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:42.108" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:42.108" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:42.108" starttime="20190624 10:38:41.405"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:42.109" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:38:42.109" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:42.109" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.109" starttime="20190624 10:38:42.109"></status>
</kw>
<msg timestamp="20190624 10:38:42.109" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.109" starttime="20190624 10:38:41.403"></status>
</kw>
<msg timestamp="20190624 10:38:42.110" level="INFO">${respJson3} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.110" starttime="20190624 10:38:41.402"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount4}</arg>
</arguments>
<assign>
<var>${respJson4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:42.111" level="INFO">${params} = [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:38:42.111" starttime="20190624 10:38:42.110"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:42.112" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:42.112" starttime="20190624 10:38:42.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:42.113" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:42.113" starttime="20190624 10:38:42.112"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:42.113" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:42.114" starttime="20190624 10:38:42.113"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:42.815" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:42.815" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:42.815" starttime="20190624 10:38:42.114"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:42.816" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:38:42.816" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:42.816" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.816" starttime="20190624 10:38:42.816"></status>
</kw>
<msg timestamp="20190624 10:38:42.816" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.816" starttime="20190624 10:38:42.111"></status>
</kw>
<msg timestamp="20190624 10:38:42.816" level="INFO">${respJson4} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:42.816" starttime="20190624 10:38:42.110"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount5}</arg>
</arguments>
<assign>
<var>${respJson5}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:42.817" level="INFO">${params} = [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:38:42.817" starttime="20190624 10:38:42.817"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:42.818" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:42.818" starttime="20190624 10:38:42.818"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:42.819" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:42.819" starttime="20190624 10:38:42.818"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:42.819" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:42.820" starttime="20190624 10:38:42.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:43.518" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:43.518" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:43.518" starttime="20190624 10:38:42.820"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:43.519" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:38:43.519" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:43.519" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:43.519" starttime="20190624 10:38:43.519"></status>
</kw>
<msg timestamp="20190624 10:38:43.520" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:43.520" starttime="20190624 10:38:42.818"></status>
</kw>
<msg timestamp="20190624 10:38:43.520" level="INFO">${respJson5} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:43.520" starttime="20190624 10:38:42.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respJson}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.520" level="INFO">{u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:38:43.520" starttime="20190624 10:38:43.520"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:43.521" starttime="20190624 10:38:43.520"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:43.522" starttime="20190624 10:38:43.521"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:43.522" starttime="20190624 10:38:39.983"></status>
</kw>
<kw name="When check mediator list">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"check mediator list succeed"</arg>
</arguments>
<msg timestamp="20190624 10:38:43.523" level="INFO">"check mediator list succeed"</msg>
<status status="PASS" endtime="20190624 10:38:43.523" starttime="20190624 10:38:43.522"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:38:43.523" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:38:43.523" starttime="20190624 10:38:43.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:43.523" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:38:43.524" starttime="20190624 10:38:43.523"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${checkMediatorList}</arg>
<arg>${params}</arg>
<arg>check mediator list</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:43.525" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:43.525" starttime="20190624 10:38:43.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:43.526" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listAll', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:43.526" starttime="20190624 10:38:43.525"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:43.526" level="INFO">Creating Session using : alias=check mediator list, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:43.526" starttime="20190624 10:38:43.526"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:43.532" level="INFO">Post Request using : alias=check mediator list, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listAll", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:43.532" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:43.532" starttime="20190624 10:38:43.527"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:43.533" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG","P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr"]}
 </msg>
<msg timestamp="20190624 10:38:43.533" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:43.533" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7Rwb...</msg>
<status status="PASS" endtime="20190624 10:38:43.533" starttime="20190624 10:38:43.532"></status>
</kw>
<msg timestamp="20190624 10:38:43.533" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7Rwb...</msg>
<status status="PASS" endtime="20190624 10:38:43.533" starttime="20190624 10:38:43.524"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${mediatorAddrs}</var>
</assign>
<msg timestamp="20190624 10:38:43.534" level="INFO">${mediatorAddrs} = [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']</msg>
<status status="PASS" endtime="20190624 10:38:43.534" starttime="20190624 10:38:43.533"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:38:43.534" level="INFO">${firstAddr} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:43.534" starttime="20190624 10:38:43.534"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:38:43.535" level="INFO">${secondAddr} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:43.535" starttime="20190624 10:38:43.534"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${thirdAddr}</var>
</assign>
<msg timestamp="20190624 10:38:43.535" level="INFO">${thirdAddr} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:43.535" starttime="20190624 10:38:43.535"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${fourthAddr}</var>
</assign>
<msg timestamp="20190624 10:38:43.536" level="INFO">${fourthAddr} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:38:43.536" starttime="20190624 10:38:43.535"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${fifthAddr}</var>
</assign>
<msg timestamp="20190624 10:38:43.536" level="INFO">${fifthAddr} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:38:43.536" starttime="20190624 10:38:43.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.537" level="INFO">${mediatorHolder1} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:43.537" starttime="20190624 10:38:43.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.538" level="INFO">${mediatorHolder2} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:43.538" starttime="20190624 10:38:43.537"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder3}</arg>
<arg>${thirdAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.538" level="INFO">${mediatorHolder3} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:43.538" starttime="20190624 10:38:43.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder4}</arg>
<arg>${fourthAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.539" level="INFO">${mediatorHolder4} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:38:43.539" starttime="20190624 10:38:43.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder5}</arg>
<arg>${fifthAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:43.539" level="INFO">${mediatorHolder5} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:38:43.540" starttime="20190624 10:38:43.539"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:43.540" starttime="20190624 10:38:43.522"></status>
</kw>
<kw name="and wait for transaction being packaged" library="pubFuncs">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:38:43.541" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:38:43.541" starttime="20190624 10:38:43.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20190624 10:38:53.542" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20190624 10:38:53.542" starttime="20190624 10:38:43.541"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:53.542" starttime="20190624 10:38:43.540"></status>
</kw>
<kw name="and check mediator list">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"check mediator list succeed"</arg>
</arguments>
<msg timestamp="20190624 10:38:53.543" level="INFO">"check mediator list succeed"</msg>
<status status="PASS" endtime="20190624 10:38:53.543" starttime="20190624 10:38:53.543"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:38:53.544" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:38:53.544" starttime="20190624 10:38:53.543"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:53.544" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:38:53.544" starttime="20190624 10:38:53.544"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${checkMediatorList}</arg>
<arg>${params}</arg>
<arg>check mediator list</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.545" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.545" starttime="20190624 10:38:53.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.546" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listAll', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.546" starttime="20190624 10:38:53.545"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.547" level="INFO">Creating Session using : alias=check mediator list, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.547" starttime="20190624 10:38:53.546"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.551" level="INFO">Post Request using : alias=check mediator list, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listAll", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.551" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.551" starttime="20190624 10:38:53.547"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.552" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr","P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG"]}
 </msg>
<msg timestamp="20190624 10:38:53.552" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.552" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGL...</msg>
<status status="PASS" endtime="20190624 10:38:53.552" starttime="20190624 10:38:53.552"></status>
</kw>
<msg timestamp="20190624 10:38:53.552" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGL...</msg>
<status status="PASS" endtime="20190624 10:38:53.553" starttime="20190624 10:38:53.544"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${mediatorAddrs}</var>
</assign>
<msg timestamp="20190624 10:38:53.553" level="INFO">${mediatorAddrs} = [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG']</msg>
<status status="PASS" endtime="20190624 10:38:53.553" starttime="20190624 10:38:53.553"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.554" level="INFO">${firstAddr} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:53.554" starttime="20190624 10:38:53.553"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.554" level="INFO">${secondAddr} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:38:53.554" starttime="20190624 10:38:53.554"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${thirdAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.555" level="INFO">${thirdAddr} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:38:53.555" starttime="20190624 10:38:53.554"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${fourthAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.555" level="INFO">${fourthAddr} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:53.555" starttime="20190624 10:38:53.555"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${fifthAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.556" level="INFO">${fifthAddr} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:53.556" starttime="20190624 10:38:53.555"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.556" level="INFO">${mediatorHolder1} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:53.556" starttime="20190624 10:38:53.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.557" level="INFO">${mediatorHolder2} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:38:53.557" starttime="20190624 10:38:53.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder3}</arg>
<arg>${thirdAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.558" level="INFO">${mediatorHolder3} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:38:53.558" starttime="20190624 10:38:53.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder4}</arg>
<arg>${fourthAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.558" level="INFO">${mediatorHolder4} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:53.558" starttime="20190624 10:38:53.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder5}</arg>
<arg>${fifthAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.559" level="INFO">${mediatorHolder5} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:53.559" starttime="20190624 10:38:53.558"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:53.559" starttime="20190624 10:38:53.543"></status>
</kw>
<kw name="and check mediator actives list">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"check mediator list succeed"</arg>
</arguments>
<msg timestamp="20190624 10:38:53.560" level="INFO">"check mediator list succeed"</msg>
<status status="PASS" endtime="20190624 10:38:53.560" starttime="20190624 10:38:53.560"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:38:53.561" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:38:53.561" starttime="20190624 10:38:53.560"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:53.561" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:38:53.561" starttime="20190624 10:38:53.561"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${viewMediatorActives}</arg>
<arg>${params}</arg>
<arg>view mediator actives</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.562" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.562" starttime="20190624 10:38:53.562"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.563" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listActives', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.563" starttime="20190624 10:38:53.563"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.564" level="INFO">Creating Session using : alias=view mediator actives, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.564" starttime="20190624 10:38:53.563"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.568" level="INFO">Post Request using : alias=view mediator actives, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listActives", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.568" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.568" starttime="20190624 10:38:53.564"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.569" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG","P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr"]}
 </msg>
<msg timestamp="20190624 10:38:53.569" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.569" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7Rwb...</msg>
<status status="PASS" endtime="20190624 10:38:53.569" starttime="20190624 10:38:53.569"></status>
</kw>
<msg timestamp="20190624 10:38:53.569" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7Rwb...</msg>
<status status="PASS" endtime="20190624 10:38:53.569" starttime="20190624 10:38:53.561"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${mediatorAddrs}</var>
</assign>
<msg timestamp="20190624 10:38:53.570" level="INFO">${mediatorAddrs} = [u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']</msg>
<status status="PASS" endtime="20190624 10:38:53.570" starttime="20190624 10:38:53.570"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.570" level="INFO">${firstAddr} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:53.571" starttime="20190624 10:38:53.570"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.571" level="INFO">${secondAddr} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:53.571" starttime="20190624 10:38:53.571"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${thirdAddr}</var>
</assign>
<msg timestamp="20190624 10:38:53.571" level="INFO">${thirdAddr} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:53.572" starttime="20190624 10:38:53.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorActives1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.572" level="INFO">${mediatorActives1} = P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN</msg>
<status status="PASS" endtime="20190624 10:38:53.572" starttime="20190624 10:38:53.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorActives2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.573" level="INFO">${mediatorActives2} = P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG</msg>
<status status="PASS" endtime="20190624 10:38:53.573" starttime="20190624 10:38:53.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorActives3}</arg>
<arg>${thirdAddr}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.573" level="INFO">${mediatorActives3} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:38:53.573" starttime="20190624 10:38:53.573"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:53.574" starttime="20190624 10:38:53.559"></status>
</kw>
<kw name="Then vote mediator account">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${mediatorHolder1}'!='${mediatorActives1}'and'${mediatorHolder1}'!='${mediatorActives2}'and'${mediatorHolder1}'!='${mediatorActives3}'</arg>
<arg>Create List</arg>
<arg>${mediatorHolder1}</arg>
</arguments>
<assign>
<var>${args1}</var>
</assign>
<msg timestamp="20190624 10:38:53.575" level="INFO">${args1} = None</msg>
<status status="PASS" endtime="20190624 10:38:53.575" starttime="20190624 10:38:53.574"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount}</arg>
<arg>${args1}</arg>
</arguments>
<assign>
<var>${params1}</var>
</assign>
<msg timestamp="20190624 10:38:53.576" level="INFO">${params1} = [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', None]</msg>
<status status="PASS" endtime="20190624 10:38:53.576" starttime="20190624 10:38:53.575"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params1}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.577" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.577" starttime="20190624 10:38:53.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.578" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr', None], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.578" starttime="20190624 10:38:53.577"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.579" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.579" starttime="20190624 10:38:53.578"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.584" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr", null], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.584" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.584" starttime="20190624 10:38:53.579"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.584" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr vote mediator(s) []","txHash":"0xe6b03f96a847d7e658d9183d5248744b66c4caceec169e3d8df784c4f7fd38b9","txSize":"259.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:38:53.584" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.584" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'259.00B', u'txHash': u'0xe6b03f96a847d7e658d9183d5248744b66c4caceec169e3d8df784c4f7fd38b9', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.584" starttime="20190624 10:38:53.584"></status>
</kw>
<msg timestamp="20190624 10:38:53.585" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'259.00B', u'txHash': u'0xe6b03f96a847d7e658d9183d5248744b66c4caceec169e3d8df784c4f7fd38b9', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.585" starttime="20190624 10:38:53.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${mediatorHolder2}'!='${mediatorActives1}'and'${mediatorHolder2}'!='${mediatorActives2}'and'${mediatorHolder2}'!='${mediatorActives3}'</arg>
<arg>Create List</arg>
<arg>${mediatorHolder2}</arg>
</arguments>
<assign>
<var>${args2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:53.586" starttime="20190624 10:38:53.585"></status>
</kw>
<msg timestamp="20190624 10:38:53.586" level="INFO">${args2} = [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']</msg>
<status status="PASS" endtime="20190624 10:38:53.586" starttime="20190624 10:38:53.585"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount2}</arg>
<arg>${args2}</arg>
</arguments>
<assign>
<var>${params2}</var>
</assign>
<msg timestamp="20190624 10:38:53.586" level="INFO">${params2} = [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']]</msg>
<status status="PASS" endtime="20190624 10:38:53.586" starttime="20190624 10:38:53.586"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params2}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.587" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.587" starttime="20190624 10:38:53.587"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.588" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT', [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.588" starttime="20190624 10:38:53.587"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.588" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.588" starttime="20190624 10:38:53.588"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.592" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT", ["P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF"]], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.592" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.592" starttime="20190624 10:38:53.588"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.593" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT vote mediator(s) [P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF]","txHash":"0xd110900624ad9c777a358b29cb055aa77504d0e0aa679eac6076a0d08ac2d36a","txSize":"309.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:38:53.593" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.593" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'309.00B', u'txHash': u'0xd110900624ad9c777a358b29cb055aa77504d0e0aa679eac6076a0d08ac2d36a', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.593" starttime="20190624 10:38:53.592"></status>
</kw>
<msg timestamp="20190624 10:38:53.593" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'309.00B', u'txHash': u'0xd110900624ad9c777a358b29cb055aa77504d0e0aa679eac6076a0d08ac2d36a', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.593" starttime="20190624 10:38:53.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${mediatorHolder3}'!='${mediatorActives1}'and'${mediatorHolder3}'!='${mediatorActives2}'and'${mediatorHolder3}'!='${mediatorActives3}'</arg>
<arg>Create List</arg>
<arg>${mediatorHolder3}</arg>
</arguments>
<assign>
<var>${args3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorHolder3}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:53.595" starttime="20190624 10:38:53.595"></status>
</kw>
<msg timestamp="20190624 10:38:53.595" level="INFO">${args3} = [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']</msg>
<status status="PASS" endtime="20190624 10:38:53.595" starttime="20190624 10:38:53.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount3}</arg>
<arg>${args3}</arg>
</arguments>
<assign>
<var>${params3}</var>
</assign>
<msg timestamp="20190624 10:38:53.596" level="INFO">${params3} = [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']]</msg>
<status status="PASS" endtime="20190624 10:38:53.596" starttime="20190624 10:38:53.595"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params3}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.597" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.597" starttime="20190624 10:38:53.596"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.598" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF', [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.598" starttime="20190624 10:38:53.597"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.598" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.599" starttime="20190624 10:38:53.598"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.603" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF", ["P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr"]], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.603" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.603" starttime="20190624 10:38:53.599"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.604" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF vote mediator(s) [P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr]","txHash":"0xe3b2cd4cf95e9ec78a25451b042987458455556dacccf7f43de4a151d991f260","txSize":"308.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:38:53.604" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.604" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'308.00B', u'txHash': u'0xe3b2cd4cf95e9ec78a25451b042987458455556dacccf7f43de4a151d991f260', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.604" starttime="20190624 10:38:53.603"></status>
</kw>
<msg timestamp="20190624 10:38:53.604" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'308.00B', u'txHash': u'0xe3b2cd4cf95e9ec78a25451b042987458455556dacccf7f43de4a151d991f260', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.604" starttime="20190624 10:38:53.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${mediatorHolder4}'!='${mediatorActives1}'and'${mediatorHolder4}'!='${mediatorActives2}'and'${mediatorHolder4}'!='${mediatorActives3}'</arg>
<arg>Create List</arg>
<arg>${mediatorHolder4}</arg>
</arguments>
<assign>
<var>${args4}</var>
</assign>
<msg timestamp="20190624 10:38:53.605" level="INFO">${args4} = None</msg>
<status status="PASS" endtime="20190624 10:38:53.605" starttime="20190624 10:38:53.604"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount4}</arg>
<arg>${args4}</arg>
</arguments>
<assign>
<var>${params4}</var>
</assign>
<msg timestamp="20190624 10:38:53.606" level="INFO">${params4} = [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', None]</msg>
<status status="PASS" endtime="20190624 10:38:53.606" starttime="20190624 10:38:53.605"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params4}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.607" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.607" starttime="20190624 10:38:53.606"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.608" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H', None], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.608" starttime="20190624 10:38:53.607"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.608" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.609" starttime="20190624 10:38:53.608"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.613" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H", null], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.614" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.614" starttime="20190624 10:38:53.609"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.614" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H vote mediator(s) []","txHash":"0x1b2744d07a94577a527f41786dfbc7f0960d21f0d99ab64439db6c5a94189551","txSize":"261.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:38:53.614" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.615" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'261.00B', u'txHash': u'0x1b2744d07a94577a527f41786dfbc7f0960d21f0d99ab64439db6c5a94189551', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.615" starttime="20190624 10:38:53.614"></status>
</kw>
<msg timestamp="20190624 10:38:53.615" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'261.00B', u'txHash': u'0x1b2744d07a94577a527f41786dfbc7f0960d21f0d99ab64439db6c5a94189551', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.615" starttime="20190624 10:38:53.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${mediatorHolder5}'!='${mediatorActives1}'and'${mediatorHolder5}'!='${mediatorActives2}'and'${mediatorHolder5}'!='${mediatorActives3}'</arg>
<arg>Create List</arg>
<arg>${mediatorHolder5}</arg>
</arguments>
<assign>
<var>${args5}</var>
</assign>
<msg timestamp="20190624 10:38:53.616" level="INFO">${args5} = None</msg>
<status status="PASS" endtime="20190624 10:38:53.616" starttime="20190624 10:38:53.615"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount5}</arg>
<arg>${args5}</arg>
</arguments>
<assign>
<var>${params5}</var>
</assign>
<msg timestamp="20190624 10:38:53.616" level="INFO">${params5} = [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', None]</msg>
<status status="PASS" endtime="20190624 10:38:53.616" starttime="20190624 10:38:53.616"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params5}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:53.617" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:53.618" starttime="20190624 10:38:53.617"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:53.618" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX', None], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:53.618" starttime="20190624 10:38:53.618"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:53.619" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:53.619" starttime="20190624 10:38:53.619"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:53.623" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX", null], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:53.624" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:53.624" starttime="20190624 10:38:53.619"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:53.624" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX vote mediator(s) []","txHash":"0x463508aa09311576eabaa740dd9f42eeae5149df9bd4a98755a7a02ee214617b","txSize":"260.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:38:53.624" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:53.624" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'260.00B', u'txHash': u'0x463508aa09311576eabaa740dd9f42eeae5149df9bd4a98755a7a02ee214617b', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.625" starttime="20190624 10:38:53.624"></status>
</kw>
<msg timestamp="20190624 10:38:53.625" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'260.00B', u'txHash': u'0x463508aa09311576eabaa740dd9f42eeae5149df9bd4a98755a7a02ee214617b', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:38:53.625" starttime="20190624 10:38:53.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190624 10:38:53.626" level="INFO">{u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'260.00B', u'txHash': u'0x463508aa09311576eabaa740dd9f42eeae5149df9bd4a98755a7a02ee214617b', u'warning': u'Transaction executed locally, but may not be confirmed by the network yet!', u'txContent': u'Account P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX vote mediator(s) []'}}</msg>
<status status="PASS" endtime="20190624 10:38:53.626" starttime="20190624 10:38:53.625"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:53.626" starttime="20190624 10:38:53.574"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:53.626" critical="yes" starttime="20190624 10:38:03.581"></status>
</test>
<status status="PASS" endtime="20190624 10:38:53.627" starttime="20190624 10:38:03.400"></status>
</suite>
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-change/step2-viewMediatorInfo.robot" id="s1-s1-s2" name="step2-viewMediatorInfo">
<test id="s1-s1-s2-t1" name="mediatorvote">
<kw name="Given view vote results">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:38:53.638" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:38:53.638" starttime="20190624 10:38:53.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:38:58.639" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:38:58.639" starttime="20190624 10:38:53.638"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:38:58.640" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:38:58.640" starttime="20190624 10:38:58.639"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:38:58.640" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:38:58.640" starttime="20190624 10:38:58.640"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${mediatorVoteResults}</arg>
<arg>${params}</arg>
<arg>view mediator results</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:38:58.641" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:38:58.641" starttime="20190624 10:38:58.641"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:38:58.642" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listVoteResults', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:38:58.642" starttime="20190624 10:38:58.642"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:38:58.643" level="INFO">Creating Session using : alias=view mediator results, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:38:58.643" starttime="20190624 10:38:58.642"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:38:58.648" level="INFO">Post Request using : alias=view mediator results, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listVoteResults", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:38:58.648" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:38:58.648" starttime="20190624 10:38:58.643"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:38:58.649" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN":0,"P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG":0,"P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz":0,"P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF":1999999999980,"P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr":2999999999980}}
 </msg>
<msg timestamp="20190624 10:38:58.649" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:38:58.649" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:38:58.649" starttime="20190624 10:38:58.649"></status>
</kw>
<msg timestamp="20190624 10:38:58.650" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:38:58.650" starttime="20190624 10:38:58.640"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${resultAddrs}</var>
</assign>
<msg timestamp="20190624 10:38:58.650" level="INFO">${resultAddrs} = {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz': 0, u'P1M72A9kBHRZs...</msg>
<status status="PASS" endtime="20190624 10:38:58.650" starttime="20190624 10:38:58.650"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:38:58.651" starttime="20190624 10:38:58.650"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder1}']}</arg>
</arguments>
<assign>
<var>${voteResult1}</var>
</assign>
<msg timestamp="20190624 10:38:58.651" level="INFO">${voteResult1} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.652" starttime="20190624 10:38:58.651"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder2}']}</arg>
</arguments>
<assign>
<var>${voteResult2}</var>
</assign>
<msg timestamp="20190624 10:38:58.652" level="INFO">${voteResult2} = 1999999999980</msg>
<status status="PASS" endtime="20190624 10:38:58.652" starttime="20190624 10:38:58.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder3}']}</arg>
</arguments>
<assign>
<var>${voteResult3}</var>
</assign>
<msg timestamp="20190624 10:38:58.653" level="INFO">${voteResult3} = 2999999999980</msg>
<status status="PASS" endtime="20190624 10:38:58.653" starttime="20190624 10:38:58.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder4}']}</arg>
</arguments>
<assign>
<var>${voteResult4}</var>
</assign>
<msg timestamp="20190624 10:38:58.654" level="INFO">${voteResult4} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.654" starttime="20190624 10:38:58.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder5}']}</arg>
</arguments>
<assign>
<var>${voteResult5}</var>
</assign>
<msg timestamp="20190624 10:38:58.654" level="INFO">${voteResult5} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.654" starttime="20190624 10:38:58.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>${voteResult1}</arg>
</arguments>
<msg timestamp="20190624 10:38:58.655" level="INFO">${mediator1Result} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.655" starttime="20190624 10:38:58.654"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator2Result}</arg>
<arg>${voteResult2}</arg>
</arguments>
<msg timestamp="20190624 10:38:58.655" level="INFO">${mediator2Result} = 1999999999980</msg>
<status status="PASS" endtime="20190624 10:38:58.656" starttime="20190624 10:38:58.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator3Result}</arg>
<arg>${voteResult3}</arg>
</arguments>
<msg timestamp="20190624 10:38:58.656" level="INFO">${mediator3Result} = 2999999999980</msg>
<status status="PASS" endtime="20190624 10:38:58.656" starttime="20190624 10:38:58.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator4Result}</arg>
<arg>${voteResult4}</arg>
</arguments>
<msg timestamp="20190624 10:38:58.657" level="INFO">${mediator4Result} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.657" starttime="20190624 10:38:58.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator5Result}</arg>
<arg>${voteResult5}</arg>
</arguments>
<msg timestamp="20190624 10:38:58.657" level="INFO">${mediator5Result} = 0</msg>
<status status="PASS" endtime="20190624 10:38:58.657" starttime="20190624 10:38:58.657"></status>
</kw>
<status status="PASS" endtime="20190624 10:38:58.658" starttime="20190624 10:38:53.637"></status>
</kw>
<kw name="When wait for the change of mediator">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for 100s</arg>
</arguments>
<msg timestamp="20190624 10:38:58.658" level="INFO">wait for 100s</msg>
<status status="PASS" endtime="20190624 10:38:58.658" starttime="20190624 10:38:58.658"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>200</arg>
</arguments>
<msg timestamp="20190624 10:42:18.660" level="INFO">Slept 3 minutes 20 seconds</msg>
<status status="PASS" endtime="20190624 10:42:18.660" starttime="20190624 10:38:58.659"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.660" starttime="20190624 10:38:58.658"></status>
</kw>
<kw name="and choose the winner of mediator">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${isActive}</var>
</assign>
<msg timestamp="20190624 10:42:18.661" level="INFO">${isActive} = []</msg>
<status status="PASS" endtime="20190624 10:42:18.661" starttime="20190624 10:42:18.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${mediator1Result}&gt;0</arg>
<arg>Append To List</arg>
<arg>${isActive}</arg>
<arg>${mediatorHolder1}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.662" starttime="20190624 10:42:18.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${mediator2Result}&gt;0</arg>
<arg>Append To List</arg>
<arg>${isActive}</arg>
<arg>${mediatorHolder2}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isActive}</arg>
<arg>${mediatorHolder2}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.663" starttime="20190624 10:42:18.662"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.663" starttime="20190624 10:42:18.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${mediator3Result}&gt;0</arg>
<arg>Append To List</arg>
<arg>${isActive}</arg>
<arg>${mediatorHolder3}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isActive}</arg>
<arg>${mediatorHolder3}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.664" starttime="20190624 10:42:18.663"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.664" starttime="20190624 10:42:18.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${mediator4Result}&gt;0</arg>
<arg>Append To List</arg>
<arg>${isActive}</arg>
<arg>${mediatorHolder4}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.664" starttime="20190624 10:42:18.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${mediator5Result}&gt;0</arg>
<arg>Append To List</arg>
<arg>${isActive}</arg>
<arg>${mediatorHolder5}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.665" starttime="20190624 10:42:18.665"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${isActive}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:42:18.665" level="INFO">${firstAddr} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:42:18.665" starttime="20190624 10:42:18.665"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${isActive}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:42:18.666" level="INFO">${secondAddr} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:42:18.666" starttime="20190624 10:42:18.666"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${activeAccount1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:42:18.666" level="INFO">${activeAccount1} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:42:18.667" starttime="20190624 10:42:18.666"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${activeAccount2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:42:18.667" level="INFO">${activeAccount2} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:42:18.667" starttime="20190624 10:42:18.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${activeAccount1}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:42:18.668" level="INFO">P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:42:18.668" starttime="20190624 10:42:18.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${activeAccount2}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:42:18.668" level="INFO">P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:42:18.668" starttime="20190624 10:42:18.668"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.668" starttime="20190624 10:42:18.661"></status>
</kw>
<kw name="Then determine if the change mediator">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${activeAccount1}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:18.669" level="INFO">${params} = [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']</msg>
<status status="PASS" endtime="20190624 10:42:18.669" starttime="20190624 10:42:18.669"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${IsActiveMediator}</arg>
<arg>${params}</arg>
<arg>JudgingResults</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:18.670" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:18.670" starttime="20190624 10:42:18.670"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:18.671" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_isActive', u'params': [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:18.671" starttime="20190624 10:42:18.671"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:18.672" level="INFO">Creating Session using : alias=JudgingResults, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:18.672" starttime="20190624 10:42:18.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:18.676" level="INFO">Post Request using : alias=JudgingResults, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_isActive", "params": ["P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:18.676" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:18.676" starttime="20190624 10:42:18.673"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:18.677" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:42:18.677" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:18.677" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:18.677" starttime="20190624 10:42:18.676"></status>
</kw>
<msg timestamp="20190624 10:42:18.677" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:18.677" starttime="20190624 10:42:18.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190624 10:42:18.678" level="INFO">${res} = True</msg>
<status status="PASS" endtime="20190624 10:42:18.678" starttime="20190624 10:42:18.677"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${activeAccount1}</arg>
</arguments>
<assign>
<var>${params1}</var>
</assign>
<msg timestamp="20190624 10:42:18.678" level="INFO">${params1} = [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']</msg>
<status status="PASS" endtime="20190624 10:42:18.678" starttime="20190624 10:42:18.678"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${IsActiveMediator}</arg>
<arg>${params1}</arg>
<arg>JudgingResults</arg>
</arguments>
<assign>
<var>${respJson1}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:18.679" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:18.680" starttime="20190624 10:42:18.679"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:18.680" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_isActive', u'params': [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:18.680" starttime="20190624 10:42:18.680"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:18.681" level="INFO">Creating Session using : alias=JudgingResults, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:18.681" starttime="20190624 10:42:18.681"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:18.685" level="INFO">Post Request using : alias=JudgingResults, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_isActive", "params": ["P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:18.685" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:18.685" starttime="20190624 10:42:18.681"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:18.686" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:42:18.686" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:18.686" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:18.686" starttime="20190624 10:42:18.685"></status>
</kw>
<msg timestamp="20190624 10:42:18.686" level="INFO">${respJson1} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:18.686" starttime="20190624 10:42:18.678"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
</arguments>
<assign>
<var>${res1}</var>
</assign>
<msg timestamp="20190624 10:42:18.687" level="INFO">${res1} = True</msg>
<status status="PASS" endtime="20190624 10:42:18.687" starttime="20190624 10:42:18.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${res}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.687" starttime="20190624 10:42:18.687"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${res1}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.688" starttime="20190624 10:42:18.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:42:18.688" level="INFO">True</msg>
<status status="PASS" endtime="20190624 10:42:18.688" starttime="20190624 10:42:18.688"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.688" starttime="20190624 10:42:18.669"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.689" critical="yes" starttime="20190624 10:38:53.637"></status>
</test>
<status status="PASS" endtime="20190624 10:42:18.689" starttime="20190624 10:38:53.628"></status>
</suite>
<status status="PASS" endtime="20190624 10:42:18.691" starttime="20190624 10:38:03.399"></status>
</suite>
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-vote" id="s1-s2" name="step-Mediator-vote">
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-vote/step1-voteTest.robot" id="s1-s2-s1" name="step1-voteTest">
<test id="s1-s2-s1-t1" name="mediatorvote">
<kw type="setup" name="beforeVote" library="setups">
<kw name="queryTokenHolder" library="pubFuncs">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:42:18.703" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:42:18.703" starttime="20190624 10:42:18.702"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:18.703" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:42:18.703" starttime="20190624 10:42:18.703"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${personalListAccountsMethod}</arg>
<arg>${params}</arg>
<arg>queryTokenHolder</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:18.704" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:18.704" starttime="20190624 10:42:18.704"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:18.705" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_listAccounts', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:18.705" starttime="20190624 10:42:18.704"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:18.705" level="INFO">Creating Session using : alias=queryTokenHolder, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:18.706" starttime="20190624 10:42:18.705"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:18.709" level="INFO">Post Request using : alias=queryTokenHolder, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_listAccounts", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:18.709" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:18.709" starttime="20190624 10:42:18.706"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:18.710" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7","P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG","P1DonNTp9XDxxb6XJWYtQcHwgkLtEvQEFzr","P1FoX2UGYg16yMbBnAa3JoKmm7wDCEdWWcT","P11234DNiWJoYxV6LSZLq9rYURwmk2BrYfF","P1BTFWCHxrTPiP679wbdgDbN1NFApqVVo3H","P1Ex6TSC48Pozbp9kaR5ZFT9KzJyJmuuSNX"]}
 </msg>
<msg timestamp="20190624 10:42:18.710" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:18.710" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4...</msg>
<status status="PASS" endtime="20190624 10:42:18.710" starttime="20190624 10:42:18.709"></status>
</kw>
<msg timestamp="20190624 10:42:18.710" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4...</msg>
<status status="PASS" endtime="20190624 10:42:18.710" starttime="20190624 10:42:18.703"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:18.711" starttime="20190624 10:42:18.710"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${accounts}</var>
</assign>
<msg timestamp="20190624 10:42:18.711" level="INFO">${accounts} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF',...</msg>
<status status="PASS" endtime="20190624 10:42:18.711" starttime="20190624 10:42:18.711"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${accounts}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:42:18.712" level="INFO">${firstAddr} = P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:42:18.712" starttime="20190624 10:42:18.711"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:42:18.712" level="INFO">${tokenHolder} = P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:42:18.712" starttime="20190624 10:42:18.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tokenHolder}</arg>
</arguments>
<msg timestamp="20190624 10:42:18.713" level="INFO">P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7</msg>
<status status="PASS" endtime="20190624 10:42:18.713" starttime="20190624 10:42:18.712"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:18.713" starttime="20190624 10:42:18.702"></status>
</kw>
<kw name="newAccounts" library="setups">
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user1}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:18.714" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:42:18.714" starttime="20190624 10:42:18.714"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:18.715" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:18.715" starttime="20190624 10:42:18.714"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:18.716" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:18.716" starttime="20190624 10:42:18.715"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:18.716" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:18.717" starttime="20190624 10:42:18.716"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:19.428" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:19.428" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:19.428" starttime="20190624 10:42:18.717"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:19.429" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM"}
 </msg>
<msg timestamp="20190624 10:42:19.429" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:19.429" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM'}</msg>
<status status="PASS" endtime="20190624 10:42:19.429" starttime="20190624 10:42:19.428"></status>
</kw>
<msg timestamp="20190624 10:42:19.429" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM'}</msg>
<status status="PASS" endtime="20190624 10:42:19.429" starttime="20190624 10:42:18.714"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:19.430" starttime="20190624 10:42:19.429"></status>
</kw>
<msg timestamp="20190624 10:42:19.430" level="INFO">${user1} = P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM</msg>
<status status="PASS" endtime="20190624 10:42:19.430" starttime="20190624 10:42:18.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount}</arg>
<arg>${user1}</arg>
</arguments>
<msg timestamp="20190624 10:42:19.430" level="INFO">${userAccount} = P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM</msg>
<status status="PASS" endtime="20190624 10:42:19.430" starttime="20190624 10:42:19.430"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:42:20.431" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:42:20.432" starttime="20190624 10:42:19.431"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:20.433" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:42:20.433" starttime="20190624 10:42:20.432"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:20.434" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:20.434" starttime="20190624 10:42:20.433"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:20.435" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:20.435" starttime="20190624 10:42:20.434"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:20.435" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:20.435" starttime="20190624 10:42:20.435"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:21.143" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:21.143" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:21.143" starttime="20190624 10:42:20.436"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:21.144" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx"}
 </msg>
<msg timestamp="20190624 10:42:21.144" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:21.144" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx'}</msg>
<status status="PASS" endtime="20190624 10:42:21.144" starttime="20190624 10:42:21.143"></status>
</kw>
<msg timestamp="20190624 10:42:21.144" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx'}</msg>
<status status="PASS" endtime="20190624 10:42:21.144" starttime="20190624 10:42:20.433"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:21.144" starttime="20190624 10:42:21.144"></status>
</kw>
<msg timestamp="20190624 10:42:21.145" level="INFO">${user2} = P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx</msg>
<status status="PASS" endtime="20190624 10:42:21.145" starttime="20190624 10:42:20.432"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount2}</arg>
<arg>${user2}</arg>
</arguments>
<msg timestamp="20190624 10:42:21.145" level="INFO">${userAccount2} = P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx</msg>
<status status="PASS" endtime="20190624 10:42:21.145" starttime="20190624 10:42:21.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:42:22.146" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:42:22.146" starttime="20190624 10:42:21.145"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:22.147" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:42:22.147" starttime="20190624 10:42:22.147"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:22.148" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:22.148" starttime="20190624 10:42:22.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:22.149" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:22.149" starttime="20190624 10:42:22.148"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:22.149" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:22.150" starttime="20190624 10:42:22.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:22.851" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:22.852" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:22.852" starttime="20190624 10:42:22.150"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:22.852" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5"}
 </msg>
<msg timestamp="20190624 10:42:22.852" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:22.852" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5'}</msg>
<status status="PASS" endtime="20190624 10:42:22.853" starttime="20190624 10:42:22.852"></status>
</kw>
<msg timestamp="20190624 10:42:22.853" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5'}</msg>
<status status="PASS" endtime="20190624 10:42:22.853" starttime="20190624 10:42:22.147"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:22.853" starttime="20190624 10:42:22.853"></status>
</kw>
<msg timestamp="20190624 10:42:22.854" level="INFO">${user3} = P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5</msg>
<status status="PASS" endtime="20190624 10:42:22.854" starttime="20190624 10:42:22.146"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount3}</arg>
<arg>${user3}</arg>
</arguments>
<msg timestamp="20190624 10:42:22.854" level="INFO">${userAccount3} = P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5</msg>
<status status="PASS" endtime="20190624 10:42:22.854" starttime="20190624 10:42:22.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:42:23.856" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:42:23.856" starttime="20190624 10:42:22.855"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:23.857" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:42:23.857" starttime="20190624 10:42:23.856"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:23.858" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:23.858" starttime="20190624 10:42:23.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:23.859" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:23.859" starttime="20190624 10:42:23.858"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:23.859" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:23.859" starttime="20190624 10:42:23.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:24.558" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:24.558" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:24.558" starttime="20190624 10:42:23.860"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:24.559" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6"}
 </msg>
<msg timestamp="20190624 10:42:24.559" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:24.559" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6'}</msg>
<status status="PASS" endtime="20190624 10:42:24.559" starttime="20190624 10:42:24.559"></status>
</kw>
<msg timestamp="20190624 10:42:24.559" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6'}</msg>
<status status="PASS" endtime="20190624 10:42:24.559" starttime="20190624 10:42:23.857"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:24.560" starttime="20190624 10:42:24.560"></status>
</kw>
<msg timestamp="20190624 10:42:24.560" level="INFO">${user4} = P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6</msg>
<status status="PASS" endtime="20190624 10:42:24.560" starttime="20190624 10:42:23.856"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount4}</arg>
<arg>${user4}</arg>
</arguments>
<msg timestamp="20190624 10:42:24.561" level="INFO">${userAccount4} = P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6</msg>
<status status="PASS" endtime="20190624 10:42:24.561" starttime="20190624 10:42:24.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190624 10:42:25.562" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20190624 10:42:25.562" starttime="20190624 10:42:24.561"></status>
</kw>
<kw name="newAccount" library="pubFuncs">
<assign>
<var>${user5}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:25.563" level="INFO">${params} = [u'1']</msg>
<status status="PASS" endtime="20190624 10:42:25.563" starttime="20190624 10:42:25.563"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>personal_newAccount</arg>
<arg>${params}</arg>
<arg>newAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:25.564" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:25.564" starttime="20190624 10:42:25.564"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:25.565" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_newAccount', u'params': [u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:25.565" starttime="20190624 10:42:25.564"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:25.566" level="INFO">Creating Session using : alias=newAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:25.566" starttime="20190624 10:42:25.565"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:26.264" level="INFO">Post Request using : alias=newAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_newAccount", "params": ["1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:26.264" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:26.264" starttime="20190624 10:42:25.566"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:26.265" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG"}
 </msg>
<msg timestamp="20190624 10:42:26.265" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:26.265" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG'}</msg>
<status status="PASS" endtime="20190624 10:42:26.265" starttime="20190624 10:42:26.265"></status>
</kw>
<msg timestamp="20190624 10:42:26.265" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG'}</msg>
<status status="PASS" endtime="20190624 10:42:26.265" starttime="20190624 10:42:25.563"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:26.266" starttime="20190624 10:42:26.266"></status>
</kw>
<msg timestamp="20190624 10:42:26.266" level="INFO">${user5} = P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG</msg>
<status status="PASS" endtime="20190624 10:42:26.266" starttime="20190624 10:42:25.562"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${userAccount5}</arg>
<arg>${user5}</arg>
</arguments>
<msg timestamp="20190624 10:42:26.267" level="INFO">${userAccount5} = P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG</msg>
<status status="PASS" endtime="20190624 10:42:26.267" starttime="20190624 10:42:26.266"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:26.267" starttime="20190624 10:42:18.713"></status>
</kw>
<kw name="transferPTNToUser" library="setups">
<kw name="transferPTN" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:26.268" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', u'10000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:42:26.268" starttime="20190624 10:42:26.268"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:26.269" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:26.270" starttime="20190624 10:42:26.269"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:26.270" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', u'10000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:26.270" starttime="20190624 10:42:26.270"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:26.271" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:26.271" starttime="20190624 10:42:26.271"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:26.975" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM", "10000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:26.975" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:26.975" starttime="20190624 10:42:26.271"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:26.976" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x35b7a4de5ccff41309aac2a7727bfb96b352a7ee5eda5a81611165518c1e91f5"}
 </msg>
<msg timestamp="20190624 10:42:26.976" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:26.976" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x35b7a4de5ccff41309aac2a7727bfb96b352a7ee5eda5a81611165518c1e91f5'}</msg>
<status status="PASS" endtime="20190624 10:42:26.976" starttime="20190624 10:42:26.976"></status>
</kw>
<msg timestamp="20190624 10:42:26.977" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x35b7a4de5ccff41309aac2a7727bfb96b352a7ee5eda5a81611165518c1e91f5'}</msg>
<status status="PASS" endtime="20190624 10:42:26.977" starttime="20190624 10:42:26.269"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:26.977" starttime="20190624 10:42:26.977"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:26.977" starttime="20190624 10:42:26.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:42:26.978" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:42:26.978" starttime="20190624 10:42:26.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:42:31.979" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:42:31.979" starttime="20190624 10:42:26.978"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<assign>
<var>${balance}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:31.980" level="INFO">${params} = [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM']</msg>
<status status="PASS" endtime="20190624 10:42:31.980" starttime="20190624 10:42:31.980"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:31.981" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:31.981" starttime="20190624 10:42:31.981"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:31.982" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:31.982" starttime="20190624 10:42:31.982"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:31.983" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:31.983" starttime="20190624 10:42:31.982"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:31.987" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:31.988" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:31.988" starttime="20190624 10:42:31.983"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:31.988" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"10000"}}
 </msg>
<msg timestamp="20190624 10:42:31.988" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:31.988" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20190624 10:42:31.988" starttime="20190624 10:42:31.988"></status>
</kw>
<msg timestamp="20190624 10:42:31.989" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'10000'}}</msg>
<status status="PASS" endtime="20190624 10:42:31.989" starttime="20190624 10:42:31.980"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:31.989" starttime="20190624 10:42:31.989"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:31.990" starttime="20190624 10:42:31.989"></status>
</kw>
<msg timestamp="20190624 10:42:31.990" level="INFO">${balance} = 10000</msg>
<status status="PASS" endtime="20190624 10:42:31.990" starttime="20190624 10:42:31.980"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:31.991" starttime="20190624 10:42:31.990"></status>
</kw>
<kw name="transferPTN2" library="pubFuncs">
<arguments>
<arg>${userAccount2}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount2}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:31.992" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx', u'20000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:42:31.992" starttime="20190624 10:42:31.991"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:31.993" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:31.993" starttime="20190624 10:42:31.992"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:31.994" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx', u'20000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:31.994" starttime="20190624 10:42:31.993"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:31.994" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:31.995" starttime="20190624 10:42:31.994"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:32.705" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx", "20000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:32.706" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:32.706" starttime="20190624 10:42:31.995"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:32.706" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x002accf0ae68b3ecb005eb28358fa98f24b5c38fc517ab1a322d6e3487347d35"}
 </msg>
<msg timestamp="20190624 10:42:32.706" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:32.706" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x002accf0ae68b3ecb005eb28358fa98f24b5c38fc517ab1a322d6e3487347d35'}</msg>
<status status="PASS" endtime="20190624 10:42:32.706" starttime="20190624 10:42:32.706"></status>
</kw>
<msg timestamp="20190624 10:42:32.707" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x002accf0ae68b3ecb005eb28358fa98f24b5c38fc517ab1a322d6e3487347d35'}</msg>
<status status="PASS" endtime="20190624 10:42:32.707" starttime="20190624 10:42:31.992"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:32.707" starttime="20190624 10:42:32.707"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:32.707" starttime="20190624 10:42:31.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:42:32.707" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:42:32.707" starttime="20190624 10:42:32.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:42:37.708" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:42:37.709" starttime="20190624 10:42:32.708"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount2}</arg>
</arguments>
<assign>
<var>${balance2}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:37.710" level="INFO">${params} = [u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx']</msg>
<status status="PASS" endtime="20190624 10:42:37.710" starttime="20190624 10:42:37.709"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:37.711" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:37.711" starttime="20190624 10:42:37.710"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:37.712" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:37.712" starttime="20190624 10:42:37.711"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:37.712" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:37.713" starttime="20190624 10:42:37.712"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:37.717" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1Ewh7Q7vSrMxBV3ZUv3azeNERR2Ve1w9Xx"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:37.717" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:37.717" starttime="20190624 10:42:37.713"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:37.718" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"20000"}}
 </msg>
<msg timestamp="20190624 10:42:37.718" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:37.718" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'20000'}}</msg>
<status status="PASS" endtime="20190624 10:42:37.718" starttime="20190624 10:42:37.717"></status>
</kw>
<msg timestamp="20190624 10:42:37.718" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'20000'}}</msg>
<status status="PASS" endtime="20190624 10:42:37.718" starttime="20190624 10:42:37.710"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:37.718" starttime="20190624 10:42:37.718"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:37.719" starttime="20190624 10:42:37.719"></status>
</kw>
<msg timestamp="20190624 10:42:37.719" level="INFO">${balance2} = 20000</msg>
<status status="PASS" endtime="20190624 10:42:37.719" starttime="20190624 10:42:37.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance2}</arg>
<arg>${amount2}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:37.720" starttime="20190624 10:42:37.719"></status>
</kw>
<kw name="transferPTN3" library="pubFuncs">
<arguments>
<arg>${userAccount3}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount3}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:37.721" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5', u'30000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:42:37.721" starttime="20190624 10:42:37.720"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:37.722" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:37.722" starttime="20190624 10:42:37.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:37.723" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5', u'30000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:37.723" starttime="20190624 10:42:37.722"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:37.724" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:37.724" starttime="20190624 10:42:37.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:38.443" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5", "30000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:38.443" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:38.443" starttime="20190624 10:42:37.724"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:38.444" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x94f873d78e418090a26832b58abe232a0f5b70ab0a4f5f5febeef81b6d82783d"}
 </msg>
<msg timestamp="20190624 10:42:38.444" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:38.444" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x94f873d78e418090a26832b58abe232a0f5b70ab0a4f5f5febeef81b6d82783d'}</msg>
<status status="PASS" endtime="20190624 10:42:38.444" starttime="20190624 10:42:38.444"></status>
</kw>
<msg timestamp="20190624 10:42:38.444" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x94f873d78e418090a26832b58abe232a0f5b70ab0a4f5f5febeef81b6d82783d'}</msg>
<status status="PASS" endtime="20190624 10:42:38.444" starttime="20190624 10:42:37.721"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:38.445" starttime="20190624 10:42:38.445"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:38.445" starttime="20190624 10:42:37.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:42:38.445" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:42:38.445" starttime="20190624 10:42:38.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:42:43.447" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:42:43.447" starttime="20190624 10:42:38.446"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount3}</arg>
</arguments>
<assign>
<var>${balance3}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:43.448" level="INFO">${params} = [u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5']</msg>
<status status="PASS" endtime="20190624 10:42:43.449" starttime="20190624 10:42:43.448"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:43.450" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:43.450" starttime="20190624 10:42:43.449"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:43.451" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:43.451" starttime="20190624 10:42:43.450"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:43.451" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:43.452" starttime="20190624 10:42:43.451"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:43.457" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1K76MXXioyRCi9DKUsWHwY2rbMiLB1dBi5"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:43.457" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:43.457" starttime="20190624 10:42:43.452"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:43.458" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"30000"}}
 </msg>
<msg timestamp="20190624 10:42:43.458" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:43.458" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'30000'}}</msg>
<status status="PASS" endtime="20190624 10:42:43.458" starttime="20190624 10:42:43.458"></status>
</kw>
<msg timestamp="20190624 10:42:43.459" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'30000'}}</msg>
<status status="PASS" endtime="20190624 10:42:43.459" starttime="20190624 10:42:43.449"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:43.459" starttime="20190624 10:42:43.459"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:43.460" starttime="20190624 10:42:43.459"></status>
</kw>
<msg timestamp="20190624 10:42:43.460" level="INFO">${balance3} = 30000</msg>
<status status="PASS" endtime="20190624 10:42:43.460" starttime="20190624 10:42:43.448"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance3}</arg>
<arg>${amount3}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:43.460" starttime="20190624 10:42:43.460"></status>
</kw>
<kw name="transferPTN4" library="pubFuncs">
<arguments>
<arg>${userAccount4}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount4}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:43.461" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6', u'40000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:42:43.462" starttime="20190624 10:42:43.461"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:43.463" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:43.463" starttime="20190624 10:42:43.462"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:43.463" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6', u'40000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:43.463" starttime="20190624 10:42:43.463"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:43.464" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:43.464" starttime="20190624 10:42:43.464"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:44.171" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6", "40000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:44.171" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:44.172" starttime="20190624 10:42:43.464"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:44.172" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x927f020177c9ad6dcf110fae79744f0502e07186cd941a3af7afd6ba59dabee8"}
 </msg>
<msg timestamp="20190624 10:42:44.172" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:44.172" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x927f020177c9ad6dcf110fae79744f0502e07186cd941a3af7afd6ba59dabee8'}</msg>
<status status="PASS" endtime="20190624 10:42:44.172" starttime="20190624 10:42:44.172"></status>
</kw>
<msg timestamp="20190624 10:42:44.173" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x927f020177c9ad6dcf110fae79744f0502e07186cd941a3af7afd6ba59dabee8'}</msg>
<status status="PASS" endtime="20190624 10:42:44.173" starttime="20190624 10:42:43.462"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:44.173" starttime="20190624 10:42:44.173"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:44.173" starttime="20190624 10:42:43.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:42:44.174" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:42:44.174" starttime="20190624 10:42:44.173"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:42:49.175" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:42:49.175" starttime="20190624 10:42:44.174"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount4}</arg>
</arguments>
<assign>
<var>${balance4}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:49.176" level="INFO">${params} = [u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6']</msg>
<status status="PASS" endtime="20190624 10:42:49.177" starttime="20190624 10:42:49.176"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:49.178" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:49.178" starttime="20190624 10:42:49.177"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:49.179" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:49.179" starttime="20190624 10:42:49.178"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:49.179" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:49.179" starttime="20190624 10:42:49.179"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:49.183" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P1BBm5pmFZSW9vxBbSVDVtPqEVqKyX1h5w6"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:49.183" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:49.183" starttime="20190624 10:42:49.180"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:49.184" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"40000"}}
 </msg>
<msg timestamp="20190624 10:42:49.184" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:49.184" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'40000'}}</msg>
<status status="PASS" endtime="20190624 10:42:49.184" starttime="20190624 10:42:49.184"></status>
</kw>
<msg timestamp="20190624 10:42:49.184" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'40000'}}</msg>
<status status="PASS" endtime="20190624 10:42:49.184" starttime="20190624 10:42:49.177"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:49.185" starttime="20190624 10:42:49.185"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:49.185" starttime="20190624 10:42:49.185"></status>
</kw>
<msg timestamp="20190624 10:42:49.186" level="INFO">${balance4} = 40000</msg>
<status status="PASS" endtime="20190624 10:42:49.186" starttime="20190624 10:42:49.176"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance4}</arg>
<arg>${amount4}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:49.186" starttime="20190624 10:42:49.186"></status>
</kw>
<kw name="transferPTN5" library="pubFuncs">
<arguments>
<arg>${userAccount5}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${tokenHolder}</arg>
<arg>${to}</arg>
<arg>${amount5}</arg>
<arg>${fee}</arg>
<arg>${null}</arg>
<arg>${pwd}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:49.187" level="INFO">${params} = [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG', u'50000', u'1', None, u'1']</msg>
<status status="PASS" endtime="20190624 10:42:49.187" starttime="20190624 10:42:49.187"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${transerferPTNMethod}</arg>
<arg>${params}</arg>
<arg>transferPTN</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:49.188" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:49.188" starttime="20190624 10:42:49.188"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:49.190" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_transferPtn', u'params': [u'P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7', u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG', u'50000', u'1', None, u'1'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:49.190" starttime="20190624 10:42:49.189"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:49.190" level="INFO">Creating Session using : alias=transferPTN, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:49.190" starttime="20190624 10:42:49.190"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:49.892" level="INFO">Post Request using : alias=transferPTN, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_transferPtn", "params": ["P1KWkYq8jST9zsK8dfpJbcBbACE45HPvbF7", "P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG", "50000", "1", null, "1"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:49.892" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:49.892" starttime="20190624 10:42:49.191"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:49.893" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":"0x3c3032122e2dd47421ef3ae696da356be17107dba9db2d77829e212604aacd22"}
 </msg>
<msg timestamp="20190624 10:42:49.893" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:49.893" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x3c3032122e2dd47421ef3ae696da356be17107dba9db2d77829e212604aacd22'}</msg>
<status status="PASS" endtime="20190624 10:42:49.893" starttime="20190624 10:42:49.893"></status>
</kw>
<msg timestamp="20190624 10:42:49.893" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': u'0x3c3032122e2dd47421ef3ae696da356be17107dba9db2d77829e212604aacd22'}</msg>
<status status="PASS" endtime="20190624 10:42:49.894" starttime="20190624 10:42:49.188"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:49.894" starttime="20190624 10:42:49.894"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:49.894" starttime="20190624 10:42:49.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for tx being packaged into unit</arg>
</arguments>
<msg timestamp="20190624 10:42:49.895" level="INFO">wait for tx being packaged into unit</msg>
<status status="PASS" endtime="20190624 10:42:49.895" starttime="20190624 10:42:49.894"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:42:54.896" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:42:54.896" starttime="20190624 10:42:49.895"></status>
</kw>
<kw name="getBalance" library="pubFuncs">
<arguments>
<arg>${userAccount5}</arg>
</arguments>
<assign>
<var>${balance5}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:54.897" level="INFO">${params} = [u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG']</msg>
<status status="PASS" endtime="20190624 10:42:54.897" starttime="20190624 10:42:54.897"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${getBalanceMethod}</arg>
<arg>${params}</arg>
<arg>getBalance</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:54.898" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:54.899" starttime="20190624 10:42:54.898"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:54.899" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'wallet_getBalance', u'params': [u'P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG'], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:54.899" starttime="20190624 10:42:54.899"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:54.900" level="INFO">Creating Session using : alias=getBalance, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:54.900" starttime="20190624 10:42:54.899"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:54.903" level="INFO">Post Request using : alias=getBalance, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "wallet_getBalance", "params": ["P15cgMDLmrEperF8iLUyeFBpwq9pcnCWuHG"], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:54.903" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:54.903" starttime="20190624 10:42:54.900"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:54.904" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"PTN":"50000"}}
 </msg>
<msg timestamp="20190624 10:42:54.904" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:54.904" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'50000'}}</msg>
<status status="PASS" endtime="20190624 10:42:54.905" starttime="20190624 10:42:54.904"></status>
</kw>
<msg timestamp="20190624 10:42:54.905" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'PTN': u'50000'}}</msg>
<status status="PASS" endtime="20190624 10:42:54.905" starttime="20190624 10:42:54.898"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:54.905" starttime="20190624 10:42:54.905"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>PTN</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:54.906" starttime="20190624 10:42:54.905"></status>
</kw>
<msg timestamp="20190624 10:42:54.906" level="INFO">${balance5} = 50000</msg>
<status status="PASS" endtime="20190624 10:42:54.906" starttime="20190624 10:42:54.896"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${balance5}</arg>
<arg>${amount5}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:54.907" starttime="20190624 10:42:54.906"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:54.907" starttime="20190624 10:42:26.267"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:54.907" starttime="20190624 10:42:18.702"></status>
</kw>
<kw name="Given user unlock its account succeed">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>" user unlock its account succeed"</arg>
</arguments>
<msg timestamp="20190624 10:42:54.908" level="INFO">" user unlock its account succeed"</msg>
<status status="PASS" endtime="20190624 10:42:54.908" starttime="20190624 10:42:54.908"></status>
</kw>
<kw name="unlockAccount" library="pubFuncs">
<arguments>
<arg>${userAccount}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${addr}</arg>
<arg>${pwd}</arg>
<arg>${600000000}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:54.909" level="INFO">${params} = [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', u'1', 600000000]</msg>
<status status="PASS" endtime="20190624 10:42:54.909" starttime="20190624 10:42:54.908"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${unlockAccountMethod}</arg>
<arg>${params}</arg>
<arg>unlockAccount</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:54.910" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:54.910" starttime="20190624 10:42:54.910"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:54.911" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'personal_unlockAccount', u'params': [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', u'1', 600000000], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:54.911" starttime="20190624 10:42:54.910"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:54.911" level="INFO">Creating Session using : alias=unlockAccount, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:54.912" starttime="20190624 10:42:54.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:55.617" level="INFO">Post Request using : alias=unlockAccount, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "personal_unlockAccount", "params": ["P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM", "1", 600000000], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:55.618" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:55.618" starttime="20190624 10:42:54.912"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:55.618" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":true}
 </msg>
<msg timestamp="20190624 10:42:55.618" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:55.618" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:55.618" starttime="20190624 10:42:55.618"></status>
</kw>
<msg timestamp="20190624 10:42:55.619" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:55.619" starttime="20190624 10:42:54.909"></status>
</kw>
<msg timestamp="20190624 10:42:55.619" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:55.619" starttime="20190624 10:42:54.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${respJson}</arg>
</arguments>
<msg timestamp="20190624 10:42:55.619" level="INFO">{u'jsonrpc': u'2.0', u'id': u'1', u'result': True}</msg>
<status status="PASS" endtime="20190624 10:42:55.619" starttime="20190624 10:42:55.619"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${respJson}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:55.620" starttime="20190624 10:42:55.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${respJson["result"]}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" endtime="20190624 10:42:55.620" starttime="20190624 10:42:55.620"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:55.621" starttime="20190624 10:42:54.907"></status>
</kw>
<kw name="When check mediator list">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"check mediator list succeed"</arg>
</arguments>
<msg timestamp="20190624 10:42:55.621" level="INFO">"check mediator list succeed"</msg>
<status status="PASS" endtime="20190624 10:42:55.622" starttime="20190624 10:42:55.621"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:42:55.622" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:42:55.622" starttime="20190624 10:42:55.622"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:42:55.622" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:42:55.622" starttime="20190624 10:42:55.622"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${checkMediatorList}</arg>
<arg>${params}</arg>
<arg>check mediator list</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:42:55.624" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:42:55.624" starttime="20190624 10:42:55.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:42:55.625" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listAll', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:42:55.625" starttime="20190624 10:42:55.624"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:42:55.625" level="INFO">Creating Session using : alias=check mediator list, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:42:55.626" starttime="20190624 10:42:55.625"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:42:55.630" level="INFO">Post Request using : alias=check mediator list, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listAll", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:42:55.630" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:42:55.630" starttime="20190624 10:42:55.626"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:42:55.630" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz","P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr","P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG"]}
 </msg>
<msg timestamp="20190624 10:42:55.630" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:42:55.631" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGL...</msg>
<status status="PASS" endtime="20190624 10:42:55.631" starttime="20190624 10:42:55.630"></status>
</kw>
<msg timestamp="20190624 10:42:55.631" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGL...</msg>
<status status="PASS" endtime="20190624 10:42:55.631" starttime="20190624 10:42:55.623"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${mediatorAddrs}</var>
</assign>
<msg timestamp="20190624 10:42:55.631" level="INFO">${mediatorAddrs} = [u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz', u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG']</msg>
<status status="PASS" endtime="20190624 10:42:55.632" starttime="20190624 10:42:55.631"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:42:55.632" level="INFO">${firstAddr} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:42:55.632" starttime="20190624 10:42:55.632"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:42:55.632" level="INFO">${secondAddr} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:42:55.633" starttime="20190624 10:42:55.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:42:55.633" level="INFO">${mediatorHolder1} = P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz</msg>
<status status="PASS" endtime="20190624 10:42:55.633" starttime="20190624 10:42:55.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:42:55.634" level="INFO">${mediatorHolder2} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:42:55.634" starttime="20190624 10:42:55.633"></status>
</kw>
<status status="PASS" endtime="20190624 10:42:55.634" starttime="20190624 10:42:55.621"></status>
</kw>
<kw name="and wait for transaction being packaged" library="pubFuncs">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:42:55.635" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:42:55.635" starttime="20190624 10:42:55.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20190624 10:43:05.636" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20190624 10:43:05.636" starttime="20190624 10:42:55.635"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:05.636" starttime="20190624 10:42:55.634"></status>
</kw>
<kw name="and check mediator list">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"check mediator list succeed"</arg>
</arguments>
<msg timestamp="20190624 10:43:05.637" level="INFO">"check mediator list succeed"</msg>
<status status="PASS" endtime="20190624 10:43:05.637" starttime="20190624 10:43:05.637"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:43:05.637" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:43:05.637" starttime="20190624 10:43:05.637"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:43:05.638" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:43:05.638" starttime="20190624 10:43:05.638"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${checkMediatorList}</arg>
<arg>${params}</arg>
<arg>check mediator list</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:43:05.639" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:43:05.639" starttime="20190624 10:43:05.639"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:43:05.640" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listAll', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:43:05.640" starttime="20190624 10:43:05.639"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:43:05.640" level="INFO">Creating Session using : alias=check mediator list, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:43:05.641" starttime="20190624 10:43:05.640"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:43:05.645" level="INFO">Post Request using : alias=check mediator list, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listAll", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:43:05.645" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:43:05.646" starttime="20190624 10:43:05.641"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:43:05.646" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":["P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF","P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr","P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN","P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG","P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz"]}
 </msg>
<msg timestamp="20190624 10:43:05.646" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:43:05.646" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuL...</msg>
<status status="PASS" endtime="20190624 10:43:05.646" starttime="20190624 10:43:05.646"></status>
</kw>
<msg timestamp="20190624 10:43:05.647" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuL...</msg>
<status status="PASS" endtime="20190624 10:43:05.647" starttime="20190624 10:43:05.638"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${mediatorAddrs}</var>
</assign>
<msg timestamp="20190624 10:43:05.647" level="INFO">${mediatorAddrs} = [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF', u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr', u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN', u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG', u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz']</msg>
<status status="PASS" endtime="20190624 10:43:05.647" starttime="20190624 10:43:05.647"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstAddr}</var>
</assign>
<msg timestamp="20190624 10:43:05.648" level="INFO">${firstAddr} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:43:05.648" starttime="20190624 10:43:05.647"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${mediatorAddrs}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${secondAddr}</var>
</assign>
<msg timestamp="20190624 10:43:05.648" level="INFO">${secondAddr} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:43:05.648" starttime="20190624 10:43:05.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder1}</arg>
<arg>${firstAddr}</arg>
</arguments>
<msg timestamp="20190624 10:43:05.649" level="INFO">${mediatorHolder1} = P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF</msg>
<status status="PASS" endtime="20190624 10:43:05.649" starttime="20190624 10:43:05.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
<arg>${secondAddr}</arg>
</arguments>
<msg timestamp="20190624 10:43:05.650" level="INFO">${mediatorHolder2} = P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr</msg>
<status status="PASS" endtime="20190624 10:43:05.650" starttime="20190624 10:43:05.649"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:05.650" starttime="20190624 10:43:05.636"></status>
</kw>
<kw name="and vote mediator account">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorHolder1}</arg>
</arguments>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:43:05.651" level="INFO">${args} = [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']</msg>
<status status="PASS" endtime="20190624 10:43:05.651" starttime="20190624 10:43:05.650"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount}</arg>
<arg>${args}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:43:05.651" level="INFO">${params} = [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']]</msg>
<status status="PASS" endtime="20190624 10:43:05.651" starttime="20190624 10:43:05.651"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:43:05.652" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:43:05.652" starttime="20190624 10:43:05.652"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:43:05.653" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', [u'P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF']], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:43:05.653" starttime="20190624 10:43:05.653"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:43:05.654" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:43:05.654" starttime="20190624 10:43:05.653"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:43:05.746" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM", ["P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF"]], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:43:05.746" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:43:05.746" starttime="20190624 10:43:05.654"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:43:05.747" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM vote mediator(s) [P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF]","txHash":"0x9ff49445b376b29380d7d9013986495a9001fbc9a2a3563f734a26b748a77949","txSize":"308.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:43:05.747" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:43:05.747" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'308.00B', u'txHash': u'0x9ff49445b376b29380d7d9013986495a9001fbc9a2a3563f734a26b748a77949', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:43:05.747" starttime="20190624 10:43:05.746"></status>
</kw>
<msg timestamp="20190624 10:43:05.747" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'308.00B', u'txHash': u'0x9ff49445b376b29380d7d9013986495a9001fbc9a2a3563f734a26b748a77949', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:43:05.747" starttime="20190624 10:43:05.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190624 10:43:05.748" level="INFO">{u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'308.00B', u'txHash': u'0x9ff49445b376b29380d7d9013986495a9001fbc9a2a3563f734a26b748a77949', u'warning': u'Transaction executed locally, but may not be confirmed by the network yet!', u'txContent': u'Account P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM vote mediator(s) [P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF]'}}</msg>
<status status="PASS" endtime="20190624 10:43:05.748" starttime="20190624 10:43:05.748"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:05.748" starttime="20190624 10:43:05.650"></status>
</kw>
<kw name="Then view vote results">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:43:05.749" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:43:05.749" starttime="20190624 10:43:05.749"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:43:10.750" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:43:10.750" starttime="20190624 10:43:05.749"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:43:10.751" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:43:10.751" starttime="20190624 10:43:10.750"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:43:10.751" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:43:10.751" starttime="20190624 10:43:10.751"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${mediatorVoteResults}</arg>
<arg>${params}</arg>
<arg>view mediator results</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:43:10.752" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:43:10.752" starttime="20190624 10:43:10.752"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:43:10.753" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listVoteResults', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:43:10.753" starttime="20190624 10:43:10.752"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:43:10.754" level="INFO">Creating Session using : alias=view mediator results, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:43:10.754" starttime="20190624 10:43:10.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:43:10.759" level="INFO">Post Request using : alias=view mediator results, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listVoteResults", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:43:10.759" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:43:10.759" starttime="20190624 10:43:10.754"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:43:10.760" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN":0,"P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG":0,"P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz":0,"P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF":2999999999960,"P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr":2999999999980}}
 </msg>
<msg timestamp="20190624 10:43:10.760" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:43:10.760" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:43:10.760" starttime="20190624 10:43:10.759"></status>
</kw>
<msg timestamp="20190624 10:43:10.760" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:43:10.760" starttime="20190624 10:43:10.751"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${resultAddrs}</var>
</assign>
<msg timestamp="20190624 10:43:10.761" level="INFO">${resultAddrs} = {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 2999999999980, u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz': 0, u'P1M72A9kBHRZs...</msg>
<status status="PASS" endtime="20190624 10:43:10.761" starttime="20190624 10:43:10.760"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:43:10.761" starttime="20190624 10:43:10.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder1}']}</arg>
</arguments>
<assign>
<var>${voteResult}</var>
</assign>
<msg timestamp="20190624 10:43:10.762" level="INFO">${voteResult} = 2999999999960</msg>
<status status="PASS" endtime="20190624 10:43:10.762" starttime="20190624 10:43:10.761"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>${voteResult}</arg>
</arguments>
<msg timestamp="20190624 10:43:10.763" level="INFO">${mediator1Result} = 2999999999960</msg>
<status status="PASS" endtime="20190624 10:43:10.763" starttime="20190624 10:43:10.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${voteResult}!=0</arg>
<arg>log</arg>
<arg>success</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>success</arg>
</arguments>
<msg timestamp="20190624 10:43:10.763" level="INFO">success</msg>
<status status="PASS" endtime="20190624 10:43:10.763" starttime="20190624 10:43:10.763"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:10.764" starttime="20190624 10:43:10.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:10.764" level="INFO">2999999999960</msg>
<status status="PASS" endtime="20190624 10:43:10.764" starttime="20190624 10:43:10.764"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:10.764" starttime="20190624 10:43:05.748"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:10.764" critical="yes" starttime="20190624 10:42:18.701"></status>
</test>
<status status="PASS" endtime="20190624 10:43:10.765" starttime="20190624 10:42:18.695"></status>
</suite>
<suite source="/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-vote/step2-changeVoteTest.txt" id="s1-s2-s2" name="step2-changeVoteTest">
<test id="s1-s2-s2-t1" name="mediatorvote">
<kw name="Given wait for transaction being packaged">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:43:10.776" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:43:10.776" starttime="20190624 10:43:10.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:43:15.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:43:15.777" starttime="20190624 10:43:10.776"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:15.777" starttime="20190624 10:43:10.775"></status>
</kw>
<kw name="When user second vote">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mediatorHolder2}</arg>
</arguments>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:43:15.778" level="INFO">${args} = [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']</msg>
<status status="PASS" endtime="20190624 10:43:15.778" starttime="20190624 10:43:15.778"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${userAccount}</arg>
<arg>${args}</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:43:15.778" level="INFO">${params} = [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']]</msg>
<status status="PASS" endtime="20190624 10:43:15.778" starttime="20190624 10:43:15.778"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${voteMediator}</arg>
<arg>${params}</arg>
<arg>vote mediator</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:43:15.780" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:43:15.780" starttime="20190624 10:43:15.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:43:15.780" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_vote', u'params': [u'P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM', [u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr']], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:43:15.781" starttime="20190624 10:43:15.780"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:43:15.781" level="INFO">Creating Session using : alias=vote mediator, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:43:15.781" starttime="20190624 10:43:15.781"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:43:15.786" level="INFO">Post Request using : alias=vote mediator, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_vote", "params": ["P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM", ["P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr"]], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:43:15.786" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:43:15.786" starttime="20190624 10:43:15.782"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:43:15.787" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"txContent":"Account P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM vote mediator(s) [P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr]","txHash":"0x4018b71652cc50d2de7cac4c92b4faba795e0da94c4dff2eb78a572ea634bff3","txSize":"307.00B","txFee":"20dao","tip":"","warning":"Transaction executed locally, but may not be confirmed by the network yet!"}}
 </msg>
<msg timestamp="20190624 10:43:15.787" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:43:15.787" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'307.00B', u'txHash': u'0x4018b71652cc50d2de7cac4c92b4faba795e0da94c4dff2eb78a572ea634bff3', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:43:15.787" starttime="20190624 10:43:15.787"></status>
</kw>
<msg timestamp="20190624 10:43:15.788" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'307.00B', u'txHash': u'0x4018b71652cc50d2de7cac4c92b4faba795e0da94c4dff2eb78a572ea634bff3', u'warning': u'Tr...</msg>
<status status="PASS" endtime="20190624 10:43:15.788" starttime="20190624 10:43:15.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190624 10:43:15.789" level="INFO">{u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'txFee': u'20dao', u'tip': u'', u'txSize': u'307.00B', u'txHash': u'0x4018b71652cc50d2de7cac4c92b4faba795e0da94c4dff2eb78a572ea634bff3', u'warning': u'Transaction executed locally, but may not be confirmed by the network yet!', u'txContent': u'Account P1KaNmg2kPwm4jfeQaJAZs3mNgwhSr7DxXM vote mediator(s) [P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr]'}}</msg>
<status status="PASS" endtime="20190624 10:43:15.789" starttime="20190624 10:43:15.788"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:15.789" starttime="20190624 10:43:15.777"></status>
</kw>
<kw name="and view vote results">
<kw name="wait for transaction being packaged">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>wait for transaction being packaged</arg>
</arguments>
<msg timestamp="20190624 10:43:15.791" level="INFO">wait for transaction being packaged</msg>
<status status="PASS" endtime="20190624 10:43:15.791" starttime="20190624 10:43:15.790"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190624 10:43:20.792" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20190624 10:43:20.792" starttime="20190624 10:43:15.791"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:20.792" starttime="20190624 10:43:15.790"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20190624 10:43:20.793" level="INFO">${args} = []</msg>
<status status="PASS" endtime="20190624 10:43:20.793" starttime="20190624 10:43:20.792"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20190624 10:43:20.793" level="INFO">${params} = []</msg>
<status status="PASS" endtime="20190624 10:43:20.793" starttime="20190624 10:43:20.793"></status>
</kw>
<kw name="sendRpcPost" library="pubFuncs">
<arguments>
<arg>${mediatorVoteResults}</arg>
<arg>${params}</arg>
<arg>view mediator results</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190624 10:43:20.794" level="INFO">${header} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20190624 10:43:20.794" starttime="20190624 10:43:20.794"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>jsonrpc=2.0</arg>
<arg>method=${method}</arg>
<arg>params=${params}</arg>
<arg>id=1</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190624 10:43:20.795" level="INFO">${data} = {u'jsonrpc': u'2.0', u'method': u'mediator_listVoteResults', u'params': [], u'id': u'1'}</msg>
<status status="PASS" endtime="20190624 10:43:20.795" starttime="20190624 10:43:20.795"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
</arguments>
<msg timestamp="20190624 10:43:20.796" level="INFO">Creating Session using : alias=view mediator results, url=http://127.0.0.1:8595, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190624 10:43:20.796" starttime="20190624 10:43:20.795"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${alias}</arg>
<arg>http://127.0.0.1:8595</arg>
<arg>data=${data}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190624 10:43:20.801" level="INFO">Post Request using : alias=view mediator results, uri=http://127.0.0.1:8595, data={"jsonrpc": "2.0", "method": "mediator_listVoteResults", "params": [], "id": "1"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190624 10:43:20.801" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190624 10:43:20.801" starttime="20190624 10:43:20.796"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${respJson}</var>
</assign>
<msg timestamp="20190624 10:43:20.802" level="INFO">To JSON using : content={"jsonrpc":"2.0","id":"1","result":{"P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN":0,"P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG":0,"P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz":0,"P1M72A9kBHRZsXvZkefVqzukaRYD7RwbxhF":1999999999980,"P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr":3999999999940}}
 </msg>
<msg timestamp="20190624 10:43:20.802" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190624 10:43:20.802" level="INFO">${respJson} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 3999999999940, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:43:20.802" starttime="20190624 10:43:20.801"></status>
</kw>
<msg timestamp="20190624 10:43:20.802" level="INFO">${resp} = {u'jsonrpc': u'2.0', u'id': u'1', u'result': {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 3999999999940, u'P1BecSEvWB5...</msg>
<status status="PASS" endtime="20190624 10:43:20.802" starttime="20190624 10:43:20.793"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${resultAddrs}</var>
</assign>
<msg timestamp="20190624 10:43:20.802" level="INFO">${resultAddrs} = {u'P1Az385ZPvxWyKzsQqGjKjtxfyfQXtuLJDG': 0, u'P19CZwmxiSfH2wUyUc8w6L9uEWJKziGLyDN': 0, u'P1MfrQNyL6ip9jVtwghZyLJjN3jSKhM4TNr': 3999999999940, u'P1BecSEvWB5khpRdjd9GRCZAn2TEfgdCxBz': 0, u'P1M72A9kBHRZs...</msg>
<status status="PASS" endtime="20190624 10:43:20.802" starttime="20190624 10:43:20.802"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>result</arg>
</arguments>
<status status="PASS" endtime="20190624 10:43:20.803" starttime="20190624 10:43:20.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>The result of the first vote</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:20.803" level="INFO">The result of the first vote</msg>
<status status="PASS" endtime="20190624 10:43:20.803" starttime="20190624 10:43:20.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:20.803" level="INFO">2999999999960</msg>
<status status="PASS" endtime="20190624 10:43:20.804" starttime="20190624 10:43:20.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder1}']}</arg>
</arguments>
<assign>
<var>${voteResult1}</var>
</assign>
<msg timestamp="20190624 10:43:20.804" level="INFO">${voteResult1} = 1999999999980</msg>
<status status="PASS" endtime="20190624 10:43:20.804" starttime="20190624 10:43:20.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultAddrs['${mediatorHolder2}']}</arg>
</arguments>
<assign>
<var>${voteResult2}</var>
</assign>
<msg timestamp="20190624 10:43:20.805" level="INFO">${voteResult2} = 3999999999940</msg>
<status status="PASS" endtime="20190624 10:43:20.805" starttime="20190624 10:43:20.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${voteResult1}!=${mediator1Result}</arg>
<arg>log</arg>
<arg>success</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>success</arg>
</arguments>
<msg timestamp="20190624 10:43:20.806" level="INFO">success</msg>
<status status="PASS" endtime="20190624 10:43:20.806" starttime="20190624 10:43:20.805"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:20.806" starttime="20190624 10:43:20.805"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>${voteResult1}</arg>
</arguments>
<msg timestamp="20190624 10:43:20.806" level="INFO">${mediator1Result} = 1999999999980</msg>
<status status="PASS" endtime="20190624 10:43:20.806" starttime="20190624 10:43:20.806"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mediator2Result}</arg>
<arg>${voteResult2}</arg>
</arguments>
<msg timestamp="20190624 10:43:20.807" level="INFO">${mediator2Result} = 3999999999940</msg>
<status status="PASS" endtime="20190624 10:43:20.807" starttime="20190624 10:43:20.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mediator1Result}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:20.808" level="INFO">1999999999980</msg>
<status status="PASS" endtime="20190624 10:43:20.808" starttime="20190624 10:43:20.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mediator2Result}</arg>
<arg>INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:20.808" level="INFO">3999999999940</msg>
<status status="PASS" endtime="20190624 10:43:20.808" starttime="20190624 10:43:20.808"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:20.809" starttime="20190624 10:43:15.790"></status>
</kw>
<kw name="Then mediator has to change vote">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>mediator has to changed INFO</arg>
</arguments>
<msg timestamp="20190624 10:43:20.809" level="INFO">mediator has to changed INFO</msg>
<status status="PASS" endtime="20190624 10:43:20.809" starttime="20190624 10:43:20.809"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:20.810" starttime="20190624 10:43:20.809"></status>
</kw>
<status status="PASS" endtime="20190624 10:43:20.810" critical="yes" starttime="20190624 10:43:10.775"></status>
</test>
<status status="PASS" endtime="20190624 10:43:20.810" starttime="20190624 10:43:10.767"></status>
</suite>
<status status="PASS" endtime="20190624 10:43:20.812" starttime="20190624 10:42:18.692"></status>
</suite>
<status status="PASS" endtime="20190624 10:43:20.815" starttime="20190624 10:38:03.374"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Mediator-Vote" pass="4">Mediator-Vote</stat>
<stat fail="0" id="s1-s1" name="step-Mediator-change" pass="2">Mediator-Vote.step-Mediator-change</stat>
<stat fail="0" id="s1-s1-s1" name="step1-voteMediator" pass="1">Mediator-Vote.step-Mediator-change.step1-voteMediator</stat>
<stat fail="0" id="s1-s1-s2" name="step2-viewMediatorInfo" pass="1">Mediator-Vote.step-Mediator-change.step2-viewMediatorInfo</stat>
<stat fail="0" id="s1-s2" name="step-Mediator-vote" pass="2">Mediator-Vote.step-Mediator-vote</stat>
<stat fail="0" id="s1-s2-s1" name="step1-voteTest" pass="1">Mediator-Vote.step-Mediator-vote.step1-voteTest</stat>
<stat fail="0" id="s1-s2-s2" name="step2-changeVoteTest" pass="1">Mediator-Vote.step-Mediator-vote.step2-changeVoteTest</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190624 10:38:03.371" level="WARN">Automatically parsing other than '*.robot' files is deprecated. Convert '/home/zt/go/src/github.com/palletone/go-palletone/bdd/mediator-vote/step-Mediator-vote/step2-changeVoteTest.txt' to '*.robot' format or use '--extension' to explicitly configure which files to parse.</msg>
<msg timestamp="20190624 10:38:03.591" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7fab3bd4f510&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8595</msg>
<msg timestamp="20190624 10:38:03.794" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7fab3bd4f6d0&gt;: Failed to establish a new connection: [Errno 111] Connection refused',)': /http://127.0.0.1:8595</msg>
</errors>
</robot>
