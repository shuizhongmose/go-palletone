os: linux
dist: xenial
sudo: required
language:
    - go

go:
    - 1.10.8
script:
    - go build ./cmd/gptn
    - make gptn
    #- $GOPATH/bin/goveralls -service=travis-ci
    - cp gptn bdd/node
    - cd bdd/node
    - chmod +x gptn
    - python init.py
    - nohup ./gptn &
    - sleep 15
    - netstat -ap | grep gptn
    - cd ../dct
#    - ./deposit_test.sh 4
#    - python -m robot.run ../testcase/createTrans
#    - python -m robot.run ../testcase/ccinvoke
    - python -m robot.run -d ../logs -l DigitalIdentityCert.log.html ../DigitalIdentityCert

after_success:
    - killall gptn 
    - echo "${SFTP_KEY}" | base64 --decode >/tmp/sftp_rsa 
    - curl --ftp-create-dirs 
        -T filename 
        --key /tmp/sftp_rsa 
        sftp://ftpuser:123456@example.com/directory/filename

after_failure:
    - killall gptn 
    - echo "${SFTP_KEY}" | base64 --decode >/tmp/sftp_rsa 
    - curl --ftp-create-dirs 
        -T pub 
        --key /tmp/sftp_rsa 
        sftp://ftpuser:123456@98.142.130.141:21/pub/
    
before_install:
    - go get github.com/mattn/goveralls
    - go get -u github.com/palletone/adaptor
    - go get -u github.com/palletone/btc-adaptor
    - go get -u github.com/palletone/eth-adaptor
    - go get -u github.com/palletone/digital-identity/...
    - source ./gomockgen.sh
    
    
env:
    global:
        - 'SFTP_USER=[user]'
        - 'SFTP_PASSWORD=[password]'
        - 'SFTP_KEY=[base64-encoded-rsa-key]'


install:
    - python -V
    - whereis python
    - which python
    - sudo -H pip install --upgrade pip
    - sudo -H pip install robotframework==2.8.5
    - sudo -H pip install requests
    - sudo -H pip install robotframework-requests
    - sudo -H pip install demjson
    - sudo -H pip install pexpect
    - sudo -H apt-get install expect
    #- sudo -H apt-get install jq tcl tk

addons:
    apt:
        update: true

notifications:
    email: elva1087penny@163.com
    email:
        recipients:
            - elva1087penny@163.com
        on_success: always # default: change
        on_failure: always

deploy:
    skip_cleanup: true
