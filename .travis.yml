language: go
sudo: required
env:
  global:
    - BASE_DIR=/home/travis/gopath/src/github.com/palletone/go-palletone
    - ALL_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/node/log/all.log
    - GAS_TOKEN_ALL_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/GasToken/node/log/all.log
    - BDD_LOG_PATH=/home/travis/gopath/src/github.com/palletone/go-palletone/bdd/logs
    - CREATE_TRANS_DIR=createTrans
    - CONTRACT20_DIR=crt20Contract
    - SEQENCE721_DIR=crt721Seqence
    - UDID721_DIR=crt721UDID
    - VOTECONTRACT_DIR=voteContract
    - MULTIPLE_DIR=zMulti-node
    - DIGITAL_IDENTITY_DIR=DigitalIdentityCert
    - DEPOSIT_DIR=deposit
    - GAS_TOKEN_DIR=gasToken
    - MEDIATOR_VOTE_DIR=meidatorvote
    - USER_CONTRACT_DIR=usercontract
    - LOG_NAME=log.html
    - REPORT_NAME=report.html
    ##########  control testcase  ##############
    - IS_RUN_DEPOSIT=true
    - IS_RUN_TESTCONTRACTCASES=true
    - IS_RUN_CREATE_TRANS=true
    - IS_RUN_20CONTRACT=true
    - IS_RUN_721SEQENCE=true
    - IS_RUN_721UDID=true
    - IS_RUN_MULTIPLE=true
    - IS_RUN_DIGITAL=true
    - IS_RUN_VOTE=true
    - IS_RUN_GASTOKEN=true
    - IS_RUN_MEDIATOR_VOTE=true
    - GO111MODULE=on
    - IS_UPLOAD=true
#    - 'SFTP_KEY=[base64-encoded-rsa-key]'
matrix:
  include:
    - os: linux
      env: usercontract_bdd_3-3
      dist: xenial
      go: 1.12.7
      services: docker
      script:
        - ip addr
        - make gptn
        - make golang-baseimage-dev
        - docker images
        - cat /proc/sys/net/ipv4/ip_forward
        - sudo ./jurySec.sh
        - sudo cat /etc/docker/daemon.json
        - cd ./cmd/deployment
        - chmod +x ./deploy.sh
        - chmod +x ./start.sh
        - cp $BASE_DIR/bdd/UserContract/editConfig.sh ./
        - chmod +x editConfig.sh
        - ./deploy.sh 3
        - ./editConfig.sh 3 3
        - ./start.sh 3
        - sleep 30
        - cd $BASE_DIR
        - mkdir -p ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}
        - python -m robot.run -d ${BDD_LOG_PATH}/${USER_CONTRACT_DIR} ./bdd/UserContract/Testcases;
        - docker ps -a
      after_script:
        - killall gptn
        - sleep 10
        - docker stop $(docker ps -a -q)
        - docker rm $(docker ps -a -q)
        - docker rmi -f $(docker images -q)
        - cd ${BASE_DIR}
        - zip -j ./bdd/logs/uc3-3_reports.zip ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}/*
        - rm -rf ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}
        - zip -r -l -o  ./bdd/logs/uc3-3_logs.zip ./cmd/deployment/node1/log ./cmd/deployment/node1/nohup.out ./cmd/deployment/node2/log ./cmd/deployment/node2/nohup.out ./cmd/deployment/node3/log ./cmd/deployment/node3/nohup.out
        - ls -l ./bdd/logs
        - |
          if [ $IS_UPLOAD == 'true' ]; then
            # uplaod all log
            ./bdd/upload2Ftp.sh ${FTP_PWD} ${TRAVIS_BRANCH};
          fi
      install:
        - sudo -H pip install --upgrade pip
        - sudo -H pip install robotframework==2.8.5
        - sudo -H pip install requests
        - sudo -H pip install robotframework-requests
        - sudo -H pip install demjson
        - sudo -H pip install pexpect
        - sudo -H apt-get install expect
        - sudo -H apt-get install lftp
        - chmod +x bdd/upload2Ftp.sh
    - os: linux
      env: digital_identity
      dist: xenial
      go: 1.12.7
      script:
#        - which go
#        # install fabric server
#        - cd $GOPATH/src
#        - go clean -modcache
#        - go get -u github.com/hyperledger/fabric-ca
#        - ls $GOPATH
#        - ls $GOPATH/src
#        - ls $GOPATH/src/github.com
#        - ls $GOPATH/src/github.com/palletone
#        - cd $GOPATH/src/github.com/hyperledger/fabric-ca/
#        - make fabric-ca-server
#        - chmod +x bin/fabric-ca-server
#        - export PATH=$GOPATH/src/github.com/hyperledger/fabric-ca/bin:$PATH
#        # get digital-identity
#        - cd $GOPATH/src
#        - go get -u github.com/palletone/digital-identity
#        # compile gptn
#        - cd $GOPATH/src/github.com/palletone/go-palletone
#        - go build -mod=vendor ./cmd/gptn
#        - rm -rf bdd/Digital-Identity/node
#        - mkdir -p bdd/Digital-Identity/node
#        - cp gptn bdd/Digital-Identity/node
#        - chmod +x bdd/Digital-Identity/node
        - cd $BASE_DIR/bdd/Digital-Identity/scripts
        - chmod +x ca-start.sh
        - chmod +x one-ptn.sh
        - ./ca-start.sh
        - ./one-ptn.sh
        - sleep 30
        - netstat -ntl
        - cd $BASE_DIR
        - mkdir -p ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR}
        - python -m robot.run -d ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR} ./bdd/Digital-Identity/testcases;
      after_script:
        - killall gptn
        - sleep 10
        - cd ${BASE_DIR}
        - |
          if [ $IS_UPLOAD == 'true' ]; then
            # uplaod all log
            ./bdd/upload2Ftp.sh ${FTP_PWD} ${TRAVIS_BRANCH};
          fi
      install:
        - sudo -H pip install --upgrade pip
        - sudo -H pip install robotframework==2.8.5
        - sudo -H pip install requests
        - sudo -H pip install robotframework-requests
        - sudo -H pip install demjson
        - sudo -H apt-get install jq
        - sudo -H apt-get install lftp
        - chmod +x bdd/upload2Ftp.sh
addons:
  apt:
    update: true

#notifications:
#  email:
#    recipients:
#      - travisreport@163.com
#    on_success: always # default: change
#    on_failure: always