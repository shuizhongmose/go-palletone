workspace:
  base: /drone/src
  path: github.com/palletone/go-palletone

platform:
  ar—Åh: amd64
  os: linux
  
pipeline:
  build:
    image: golang:1.12.7
    environment:
      GOPATH: /drone
      BASE_DIR: /drone/src/github.com/palletone/go-palletone
      ALL_LOG_PATH: /drone/src/github.com/palletone/go-palletone/bdd/node/log/all.log
      GAS_TOKEN_ALL_LOG_PATH: /drone/src/github.com/palletone/go-palletone/bdd/GasToken/node/log/all.log
      BDD_LOG_PATH: /drone/src/github.com/palletone/go-palletone/bdd/logs
      CREATE_TRANS_DIR: createTrans
      CONTRACT20_DIR: crt20Contract
      SEQENCE721_DIR: crt721Seqence
      UDID721_DIR: crt721UDID
      VOTECONTRACT_DIR: voteContract
      MULTIPLE_DIR: zMulti-node
      DIGITAL_IDENTITY_DIR: Digital-IdentityCert
      DEPOSIT_DIR: deposit
      GAS_TOKEN_DIR: gasToken
      MEDIATOR_VOTE_DIR: meidatorvote
      USER_CONTRACT_DIR: usercontract
      LOG_NAME: log.html
      REPORT_NAME: report.html
    commands:
      - apt-get update
      - apt-get install python2.7 -y
      - wget https://bootstrap.pypa.io/get-pip.py
      - python get-pip.py
      - pip -V
      - pip install --upgrade pip
      - pip install robotframework==2.8.5
      - pip install requests
      - pip install robotframework-requests
      - pip install demjson
      - pip install pexpect
      - apt-get install jq -y
      - apt-get install lftp -y
      - chmod +x bdd/uploadDrone2Ftp.sh
      - chmod +x bdd/upload2Ftp.sh
  backend:
    image: golang:1.12.7
    commands: ${BACKEND_CMD}
  slack:
    image: golang:1.12.7
    commands: ${UPLOAD_LOG}
    when:
      status: [ success, failure ]

matrix:
  include:
    - BUILD_NAME: digital-identity
      BACKEND_CMD:
        - apt-get install tree -y
        - apt-get install net-tools -y
        - cd $GOPATH/src/github.com/
        - cd palletone
        - git clone https://github.com/palletone/digital-identity.git
        - cd $BASE_DIR/bdd/Digital-Identity/scripts
        - chmod +x ca-start.sh
        - chmod +x one-ptn.sh
        - ./ca-start.sh
        - tree ~/cawork
        - ./one-ptn.sh
        - sleep 30
        - netstat -ntl
        - cd $BASE_DIR
        - mkdir -p ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR}
        - python -m robot.run -d ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR} ./bdd/Digital-Identity/testcases
      UPLOAD_LOG:
        - cd ${BASE_DIR}
        - cp bdd/Digital-Identity/node/log/all.log ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR}
        - cp bdd/Digital-Identity/node/nohup.out ${BDD_LOG_PATH}/${DIGITAL_IDENTITY_DIR}
        - ./bdd/uploadDrone2Ftp.sh ${FTP_PWD}
    - BUILD_NAME: usercontract_bdd_3-3
      BACKEND_CMD:
        - make gptn
        - make golang-baseimage-dev
        - docker images
        - cat /proc/sys/net/ipv4/ip_forward
        - sudo ./jurySec.sh
        - sudo cat /etc/docker/daemon.json
        - cd ./cmd/deployment
        - chmod +x ./deploy.sh
        - chmod +x ./start.sh
        - cp $BASE_DIR/bdd/UserContract/editConfig.sh ./
        - chmod +x editConfig.sh
        - docker network ls
        - ./deploy.sh 3 3
        - ./editConfig.sh 3 3
        - ./start.sh 3
        - sleep 30
        - docker network ls
        - cd $BASE_DIR
        - mkdir -p ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}
        - python -m robot.run -d ${BDD_LOG_PATH}/${USER_CONTRACT_DIR} ./bdd/UserContract/Testcases;
        - docker ps -a
      UPLOAD_LOG:
        - cd ${BASE_DIR}
        - zip -j ./bdd/logs/uc3-3_reports.zip ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}/*
        - rm -rf ${BDD_LOG_PATH}/${USER_CONTRACT_DIR}
        - zip -r -l -o  ./bdd/logs/uc3-3_logs.zip ./cmd/deployment/node1/log ./cmd/deployment/node1/nohup.out ./cmd/deployment/node2/log ./cmd/deployment/node2/nohup.out ./cmd/deployment/node3/log ./cmd/deployment/node3/nohup.out
        - ./bdd/upload2Ftp.sh ${FTP_PWD} ${TRAVIS_BRANCH} ${TRAVIS_BUILD_NUMBER}